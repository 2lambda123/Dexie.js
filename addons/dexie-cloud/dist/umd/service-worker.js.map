{"version":3,"file":"service-worker.js","sources":["../../src/authentication/UNAUTHORIZED_USER.ts","../../src/helpers/SWBroadcastChannel.ts","../../src/helpers/BroadcastedAndLocalEvent.ts","../../src/db/DexieCloudDB.ts","../../node_modules/universal-imports/index-browser.mjs","../../node_modules/dexie-cloud-common/dist/utils.js","../../node_modules/dexie-cloud-common/dist/validation/isValidSyncableID.js","../../node_modules/dexie-cloud-common/dist/change-processing/applyOperation.js","../../node_modules/dexie-cloud-common/dist/change-processing/applyOperations.js","../../node_modules/dexie-cloud-common/dist/change-processing/subtractChanges.js","../../node_modules/dexie-cloud-common/dist/change-processing/toDBOperationSet.js","../../node_modules/dexie-cloud-common/dist/getDbNameFromDbUrl.js","../../node_modules/rxjs/node_modules/tslib/tslib.es6.js","../../node_modules/rxjs/src/internal/util/isFunction.ts","../../node_modules/rxjs/src/internal/config.ts","../../node_modules/rxjs/src/internal/util/hostReportError.ts","../../node_modules/rxjs/src/internal/Observer.ts","../../node_modules/rxjs/src/internal/util/isArray.ts","../../node_modules/rxjs/src/internal/util/isObject.ts","../../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","../../node_modules/rxjs/src/internal/Subscription.ts","../../node_modules/rxjs/src/internal/symbol/rxSubscriber.ts","../../node_modules/rxjs/src/internal/Subscriber.ts","../../node_modules/rxjs/src/internal/util/canReportError.ts","../../node_modules/rxjs/src/internal/util/toSubscriber.ts","../../node_modules/rxjs/src/internal/symbol/observable.ts","../../node_modules/rxjs/src/internal/util/identity.ts","../../node_modules/rxjs/src/internal/util/pipe.ts","../../node_modules/rxjs/src/internal/Observable.ts","../../node_modules/rxjs/src/internal/util/subscribeToArray.ts","../../node_modules/rxjs/src/internal/util/subscribeToPromise.ts","../../node_modules/rxjs/src/internal/symbol/iterator.ts","../../node_modules/rxjs/src/internal/util/subscribeToIterable.ts","../../node_modules/rxjs/src/internal/util/subscribeToObservable.ts","../../node_modules/rxjs/src/internal/util/isArrayLike.ts","../../node_modules/rxjs/src/internal/util/isPromise.ts","../../node_modules/rxjs/src/internal/util/subscribeTo.ts","../../node_modules/rxjs/src/internal/innerSubscribe.ts","../../node_modules/rxjs/src/internal/scheduler/Action.ts","../../node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","../../node_modules/rxjs/src/internal/Scheduler.ts","../../node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","../../node_modules/rxjs/src/internal/scheduler/async.ts","../../node_modules/rxjs/src/internal/util/isScheduler.ts","../../node_modules/rxjs/src/internal/operators/catchError.ts","../../node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","../../node_modules/rxjs/src/internal/observable/fromArray.ts","../../node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","../../node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","../../node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","../../node_modules/rxjs/src/internal/util/isInteropObservable.ts","../../node_modules/rxjs/src/internal/util/isIterable.ts","../../node_modules/rxjs/src/internal/scheduled/scheduled.ts","../../node_modules/rxjs/src/internal/observable/from.ts","../../node_modules/rxjs/src/internal/observable/of.ts","../../node_modules/rxjs/src/internal/operators/map.ts","../../node_modules/rxjs/src/internal/util/isDate.ts","../../node_modules/rxjs/src/internal/observable/empty.ts","../../node_modules/rxjs/src/internal/observable/throwError.ts","../../node_modules/rxjs/src/internal/Notification.ts","../../node_modules/rxjs/src/internal/operators/delay.ts","../../node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","../../node_modules/rxjs/src/internal/operators/filter.ts","../../node_modules/rxjs/src/internal/operators/take.ts","../../node_modules/rxjs/src/internal/operators/switchMap.ts","../../node_modules/rxjs/src/internal/util/noop.ts","../../node_modules/rxjs/src/internal/operators/tap.ts","../../node_modules/rxjs/src/internal/util/TimeoutError.ts","../../node_modules/rxjs/src/internal/operators/timeoutWith.ts","../../node_modules/rxjs/src/internal/operators/timeout.ts","../../node_modules/dreambase-library/dist/common/base64.js","../../src/authentication/interactWithUser.ts","../../src/authentication/authenticate.ts","../../src/authentication/AuthPersistedContext.ts","../../src/errors/HttpError.ts","../../src/authentication/otpFetchTokenCallback.ts","../../src/authentication/setCurrentUser.ts","../../src/authentication/login.ts","../../src/isFirefox.ts","../../src/isSafari.ts","../../src/DISABLE_SERVICEWORKER_STRATEGY.ts","../../src/helpers/dbOnClosed.ts","../../src/helpers/IS_SERVICE_WORKER.ts","../../src/helpers/throwVersionIncrementNeeded.ts","../../node_modules/dreambase-library/dist/common/b64lex.js","../../src/middlewares/createIdGenerationMiddleware.ts","../../src/middlewares/createImplicitPropSetterMiddleware.ts","../../src/helpers/getMutationTable.ts","../../src/helpers/randomString.ts","../../src/helpers/allSettled.ts","../../src/middleware-helpers/guardedTable.ts","../../src/sync/registerSyncEvent.ts","../../src/middlewares/outstandingTransaction.ts","../../src/middlewares/createMutationTrackingMiddleware.ts","../../src/overrideParseStoresSpec.ts","../../src/helpers/date-constants.ts","../../src/sync/myId.ts","../../src/sync/performGuardedJob.ts","../../src/helpers/getSyncableTables.ts","../../src/sync/listSyncifiedChanges.ts","../../src/sync/getTablesToSyncify.ts","../../src/helpers/getTableFromMutationTable.ts","../../src/sync/listClientChanges.ts","../../node_modules/dreambase-library/dist/typeson-simplified/TypesonSimplified.js","../../node_modules/dreambase-library/dist/typeson-simplified/BisonBinaryTypes.js","../../node_modules/dreambase-library/dist/typeson-simplified/types/number.js","../../node_modules/dreambase-library/dist/typeson-simplified/types/bigint.js","../../node_modules/dreambase-library/dist/typeson-simplified/types/Date.js","../../node_modules/dreambase-library/dist/typeson-simplified/types/Set.js","../../node_modules/dreambase-library/dist/typeson-simplified/types/Map.js","../../node_modules/dreambase-library/dist/common/_global.js","../../node_modules/dreambase-library/dist/typeson-simplified/types/TypedArray.js","../../node_modules/dreambase-library/dist/typeson-simplified/types/ArrayBuffer.js","../../node_modules/dreambase-library/dist/typeson-simplified/FakeBlob.js","../../node_modules/dreambase-library/dist/typeson-simplified/readBlobSync.js","../../node_modules/dreambase-library/dist/typeson-simplified/string2arraybuffer.js","../../node_modules/dreambase-library/dist/typeson-simplified/types/Blob.js","../../node_modules/dreambase-library/dist/typeson-simplified/presets/builtin.js","../../node_modules/dreambase-library/dist/typeson-simplified/Bison.js","../../node_modules/dreambase-library/dist/typeson-simplified/types/undefined.js","../../src/TSON.ts","../../src/sync/syncWithServer.ts","../../src/sync/modifyLocalObjectsWithNewUserId.ts","../../src/helpers/bulkUpdate.ts","../../src/helpers/CancelToken.ts","../../src/sync/isOnline.ts","../../src/sync/sync.ts","../../src/performInitialSync.ts","../../src/userIsActive.ts","../../src/authentication/TokenExpiredError.ts","../../src/WSObservable.ts","../../src/sync/triggerSync.ts","../../src/sync/connectWebSocket.ts","../../src/sync/isSyncNeeded.ts","../../src/sync/syncIfPossible.ts","../../src/sync/LocalSyncWorker.ts","../../src/updateSchemaFromOptions.ts","../../src/verifySchema.ts","../../node_modules/preact/src/options.js","../../node_modules/preact/src/component.js","../../node_modules/preact/src/constants.js","../../node_modules/preact/src/util.js","../../node_modules/preact/src/create-element.js","../../node_modules/preact/src/diff/children.js","../../node_modules/preact/src/diff/props.js","../../node_modules/preact/src/diff/index.js","../../node_modules/preact/src/render.js","../../node_modules/preact/src/diff/catch-error.js","../../node_modules/preact/src/create-context.js","../../src/default-ui/Styles.ts","../../src/default-ui/Dialog.tsx","../../node_modules/preact/hooks/src/index.js","../../src/helpers/resolveText.ts","../../src/default-ui/LoginDialog.tsx","../../src/default-ui/index.tsx","../../src/dexie-cloud-client.ts","../../src/service-worker.ts"],"sourcesContent":["import { UserLogin } from '../db/entities/UserLogin';\n\nexport const UNAUTHORIZED_USER: UserLogin = {\n  userId: \"unauthorized\",\n  name: \"Unauthorized\",\n  claims: {\n    sub: \"unauthorized\",\n  },\n  lastLogin: new Date(0)\n}\n\ntry {\n  Object.freeze(UNAUTHORIZED_USER);\n  Object.freeze(UNAUTHORIZED_USER.claims);\n} catch {}\n","const swHolder: { registration?: ServiceWorkerRegistration } = {};\nconst swContainer = self.document && navigator.serviceWorker; // self.document is to verify we're not the SW ourself\nif (swContainer)\n  swContainer.ready.then(\n    (registration) => (swHolder.registration = registration)\n  );\n\nif (typeof self !== 'undefined' && 'clients' in self && !self.document) {\n  // We are the service worker. Propagate messages to all our clients.\n  addEventListener('message', (ev: any) => {\n    if (ev.data?.type?.startsWith('sw-broadcast-')) {\n      [...self['clients'].matchAll({ includeUncontrolled: true })].forEach(\n        (client) => client.id !== ev.source?.id && client.postMessage(ev.data)\n      );\n    }\n  });\n}\n\nexport class SWBroadcastChannel {\n  name: string;\n  constructor(name: string) {\n    this.name = name;\n  }\n  subscribe(listener: (message: any) => void) {\n    if (!swContainer) return ()=>{};\n    const forwarder = (ev: MessageEvent) => {\n      if (ev.data?.type === `sw-broadcast-${this.name}`) {\n        listener(ev.data.message);\n      }\n    };\n    swContainer.addEventListener('message', forwarder);\n    return () =>\n      swContainer.removeEventListener('message', forwarder);\n  }\n  postMessage(message: any) {\n    if (typeof self['clients'] === 'object') {\n      // We're a service worker. Propagate to our browser clients.\n      [...self['clients'].matchAll({ includeUncontrolled: true })].forEach(\n        (client) =>\n          client.postMessage({\n            type: `sw-broadcast-${this.name}`,\n            message\n          })\n      );\n    } else if (swHolder.registration) {\n      // We're a client (browser window or other worker)\n      // Post to SW so it can repost to all its clients and to itself\n      swHolder.registration.active?.postMessage({\n        type: `sw-broadcast-${this.name}`,\n        message\n      });\n    }\n  }\n}\n","import { Observable } from \"rxjs\";\nimport { SWBroadcastChannel } from \"./SWBroadcastChannel\";\n\nexport class BroadcastedAndLocalEvent<T> extends Observable<T>{\n  name: string;\n  bc: BroadcastChannel | SWBroadcastChannel\n\n  constructor(name: string) {\n    const bc = typeof BroadcastChannel === \"undefined\"\n      ? new SWBroadcastChannel(name) : new BroadcastChannel(name);\n    super(subscriber => {\n      function onCustomEvent(ev: CustomEvent) {\n        subscriber.next(ev.detail);\n      }\n      function onMessageEvent(ev: MessageEvent) {\n        console.debug(\"BroadcastedAndLocalEvent: onMessageEvent\", ev);\n        subscriber.next(ev.data);\n      }\n      let unsubscribe: ()=>void;\n      self.addEventListener(`lbc-${name}`, onCustomEvent);  \n      if (bc instanceof SWBroadcastChannel) {\n        unsubscribe = bc.subscribe(message => subscriber.next(message));\n      } else {\n        console.debug(\"BroadcastedAndLocalEvent: bc.addEventListener()\", name, \"bc is a\", bc);\n        bc.addEventListener(\"message\", onMessageEvent);\n      }\n      return () => {\n        self.removeEventListener(`lbc-${name}`, onCustomEvent);\n        if (bc instanceof SWBroadcastChannel) {\n          unsubscribe!();\n        } else {\n          bc.removeEventListener(\"message\", onMessageEvent);\n        }\n      }\n    });\n    this.name = name;\n    this.bc = bc;\n  }\n\n  next(message: T) {\n    console.debug(\"BroadcastedAndLocalEvent: bc.postMessage()\", {...message}, \"bc is a\", this.bc);\n    this.bc.postMessage(message);\n    const ev = new CustomEvent(`lbc-${this.name}`, { detail: message });\n    self.dispatchEvent(ev);\n  }\n}\n","import Dexie, { Table } from 'dexie';\nimport { GuardedJob } from './entities/GuardedJob';\nimport { UserLogin } from './entities/UserLogin';\nimport { PersistedSyncState } from './entities/PersistedSyncState';\nimport { Realm } from './entities/Realm';\nimport { Member } from './entities/Member';\nimport { Role } from './entities/Role';\nimport { UNAUTHORIZED_USER } from '../authentication/UNAUTHORIZED_USER';\nimport { DexieCloudOptions } from '../DexieCloudOptions';\nimport { BehaviorSubject } from 'rxjs';\nimport { BaseRevisionMapEntry } from './entities/BaseRevisionMapEntry';\nimport {\n  DBRealm,\n  DBRealmMember,\n  DBRealmRole,\n  DexieCloudSchema,\n} from 'dexie-cloud-common';\nimport { BroadcastedAndLocalEvent } from '../helpers/BroadcastedAndLocalEvent';\nimport { SyncState } from '../types/SyncState';\n\n/*export interface DexieCloudDB extends Dexie {\n  table(name: string): Table<any, any>;\n  table(name: \"$jobs\"): Table<GuardedJob, string>;\n  table(name: \"$logins\"): Table<UserLogin, string>;\n  table(name: \"$syncState\"): Table<SyncState, \"syncState\">;\n  //table(name: \"$pendingChangesFromServer\"): Table<DBOperationsSet, number>;\n}\n*/\n\ntype SyncStateTable = Table<\n  PersistedSyncState | DexieCloudSchema | DexieCloudOptions,\n  'syncState' | 'options' | 'schema'\n>;\nexport interface DexieCloudDBBase {\n  readonly name: Dexie['name'];\n  readonly close: Dexie['close'];\n  transaction: Dexie['transaction'];\n  table: Dexie['table'];\n  readonly tables: Dexie['tables'];\n  readonly cloud: Dexie['cloud'];\n  readonly $jobs: Table<GuardedJob, string>;\n  readonly $logins: Table<UserLogin, string>;\n  readonly $syncState: SyncStateTable;\n  readonly $baseRevs: Table<BaseRevisionMapEntry, [string, number]>;\n\n  readonly realms: Table<DBRealm, string>;\n  readonly members: Table<DBRealmMember, string>;\n  readonly roles: Table<DBRealmRole, [string, string]>;\n\n  readonly localSyncEvent: BehaviorSubject<any>;\n  readonly syncStateChangedEvent: BroadcastedAndLocalEvent<SyncState>;\n  readonly dx: Dexie;\n  readonly initiallySynced: boolean;\n}\n\nexport interface DexieCloudDB extends DexieCloudDBBase {\n  getCurrentUser(): Promise<UserLogin>;\n  getSchema(): Promise<DexieCloudSchema | undefined>;\n  getOptions(): Promise<DexieCloudOptions | undefined>;\n  getPersistedSyncState(): Promise<PersistedSyncState | undefined>;\n  setInitiallySynced(initiallySynced: boolean): void;\n  reconfigure(): void;\n}\n\nconst wm = new WeakMap<object, DexieCloudDB>();\n\nexport const DEXIE_CLOUD_SCHEMA = {\n  realms: '@realmId',\n  members: '@id',\n  roles: '[realmId+name]',\n  $jobs: '',\n  $syncState: '',\n  $baseRevs: '[tableName+clientRev]',\n  $logins: 'claims.sub, lastLogin',\n};\n\nlet static_counter = 0;\nexport function DexieCloudDB(dx: Dexie): DexieCloudDB {\n  if ('vip' in dx) dx = dx['vip']; // Avoid race condition. Always map to a vipped dexie that don't block during db.on.ready().\n  let db = wm.get(dx.cloud);\n  if (!db) {\n    const localSyncEvent = new BehaviorSubject({});\n    let syncStateChangedEvent = new BroadcastedAndLocalEvent<SyncState>(\n      `syncstatechanged-${dx.name}`\n    );\n    localSyncEvent['id'] = ++static_counter;\n    let initiallySynced = false;\n    db = {\n      get name() {\n        return dx.name;\n      },\n      close() {\n        return dx.close();\n      },\n      transaction: dx.transaction.bind(dx),\n      table: dx.table.bind(dx),\n      get tables() {\n        return dx.tables;\n      },\n      cloud: dx.cloud,\n      get $jobs() {\n        return dx.table('$jobs') as Table<GuardedJob, string>;\n      },\n      get $syncState() {\n        return dx.table('$syncState') as SyncStateTable;\n      },\n      get $baseRevs() {\n        return dx.table('$baseRevs') as Table<\n          BaseRevisionMapEntry,\n          [string, number]\n        >;\n      },\n      get $logins() {\n        return dx.table('$logins') as Table<UserLogin, string>;\n      },\n\n      get realms() {\n        return dx.realms;\n      },\n      get members() {\n        return dx.members;\n      },\n      get roles() {\n        return dx.roles;\n      },\n      get initiallySynced() {\n        return initiallySynced;\n      },\n      localSyncEvent,\n      get syncStateChangedEvent() {\n        return syncStateChangedEvent;\n      },\n      dx,\n    } as DexieCloudDB;\n\n    const helperMethods: Partial<DexieCloudDB> = {\n      getCurrentUser() {\n        return db!.$logins\n          .toArray()\n          .then(\n            (logins) => logins.find((l) => l.isLoggedIn) || UNAUTHORIZED_USER\n          );\n      },\n      getPersistedSyncState() {\n        return db!.$syncState.get('syncState') as Promise<\n          PersistedSyncState | undefined\n        >;\n      },\n      getSchema() {\n        return db!.$syncState.get('schema') as Promise<\n          DexieCloudSchema | undefined\n        >;\n      },\n      getOptions() {\n        return db!.$syncState.get('options') as Promise<\n          DexieCloudOptions | undefined\n        >;\n      },\n      setInitiallySynced(value) {\n        initiallySynced = value;\n      },\n      reconfigure() {\n        syncStateChangedEvent = new BroadcastedAndLocalEvent<SyncState>(\n          `syncstatechanged-${dx.name}`\n        );\n      }\n    };\n\n    Object.assign(db, helperMethods);\n    wm.set(dx.cloud, db);\n  }\n  return db;\n}\n","//@ts-check\nconst _fetch = fetch;\nexport { _fetch as fetch };\nexport const randomFillSync = crypto.getRandomValues;\n","import { randomFillSync } from \"universal-imports\";\nexport function assert(b) {\n    if (!b)\n        throw new Error('Assertion Failed');\n}\nexport function setByKeyPath(obj, keyPath, value) {\n    if (!obj || keyPath === undefined)\n        return;\n    if ('isFrozen' in Object && Object.isFrozen(obj))\n        return;\n    if (typeof keyPath !== 'string' && 'length' in keyPath) {\n        assert(typeof value !== 'string' && 'length' in value);\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            setByKeyPath(obj, keyPath[i], value[i]);\n        }\n    }\n    else {\n        var period = keyPath.indexOf('.');\n        if (period !== -1) {\n            var currentKeyPath = keyPath.substr(0, period);\n            var remainingKeyPath = keyPath.substr(period + 1);\n            if (remainingKeyPath === '')\n                if (value === undefined) {\n                    if (Array.isArray(obj)) {\n                        if (!isNaN(parseInt(currentKeyPath)))\n                            obj.splice(parseInt(currentKeyPath), 1);\n                    }\n                    else\n                        delete obj[currentKeyPath];\n                    // @ts-ignore: even if currentKeyPath would be numeric string and obj would be array - it works.\n                }\n                else\n                    obj[currentKeyPath] = value;\n            else {\n                //@ts-ignore: even if currentKeyPath would be numeric string and obj would be array - it works.\n                var innerObj = obj[currentKeyPath];\n                //@ts-ignore: even if currentKeyPath would be numeric string and obj would be array - it works.\n                if (!innerObj)\n                    innerObj = obj[currentKeyPath] = {};\n                setByKeyPath(innerObj, remainingKeyPath, value);\n            }\n        }\n        else {\n            if (value === undefined) {\n                if (Array.isArray(obj) && !isNaN(parseInt(keyPath)))\n                    // @ts-ignore: even if currentKeyPath would be numeric string and obj would be array - it works.\n                    obj.splice(keyPath, 1);\n                //@ts-ignore: even if currentKeyPath would be numeric string and obj would be array - it works.\n                else\n                    delete obj[keyPath];\n                //@ts-ignore: even if currentKeyPath would be numeric string and obj would be array - it works.\n            }\n            else\n                obj[keyPath] = value;\n        }\n    }\n}\nexport const randomString = typeof self === 'undefined' ? (bytes) => {\n    // Node\n    const buf = Buffer.alloc(bytes);\n    randomFillSync(buf);\n    return buf.toString(\"base64\");\n} : (bytes) => {\n    // Web\n    const buf = new Uint8Array(bytes);\n    crypto.getRandomValues(buf);\n    return btoa(String.fromCharCode.apply(null, buf));\n};\n","const validIDTypes = {\n    Uint8Array,\n};\n/** Verifies that given primary key is valid.\n * The reason we narrow validity for valid keys are twofold:\n *  1: Make sure to only support types that can be used as an object index in DBKeyMutationSet.\n *     For example, ArrayBuffer cannot be used (gives \"object ArrayBuffer\") but Uint8Array can be\n *     used (gives comma-delimited list of included bytes).\n *  2: Avoid using plain numbers and Dates as keys when they are synced, as they are not globally unique.\n *  3: Since we store the key as a VARCHAR server side in current version, try not promote types that stringifies to become very long server side.\n *\n * @param id\n * @returns\n */\nexport function isValidSyncableID(id) {\n    if (typeof id === \"string\")\n        return true;\n    //if (validIDTypes[toStringTag(id)]) return true;\n    //if (Array.isArray(id)) return id.every((part) => isValidSyncableID(part));\n    if (Array.isArray(id) && id.some(key => isValidSyncableID(key)) && id.every(isValidSyncableIDPart))\n        return true;\n    return false;\n}\n/** Verifies that given key part is valid.\n *  1: Make sure that arrays of this types are stringified correclty and works with DBKeyMutationSet.\n *     For example, ArrayBuffer cannot be used (gives \"object ArrayBuffer\") but Uint8Array can be\n *     used (gives comma-delimited list of included bytes).\n *  2: Since we store the key as a VARCHAR server side in current version, try not promote types that stringifies to become very long server side.\n*/\nfunction isValidSyncableIDPart(part) {\n    return typeof part === \"string\" || typeof part === \"number\" || Array.isArray(part) && part.every(isValidSyncableIDPart);\n}\nexport function isValidAtID(id, idPrefix) {\n    return !idPrefix || (typeof id === \"string\" && id.startsWith(idPrefix));\n}\n","import { setByKeyPath } from \"../utils.js\";\nexport function applyOperation(target, table, op) {\n    const tbl = target[table] || (target[table] = {});\n    switch (op.type) {\n        case \"insert\":\n        // TODO: Don't treat insert and upsert the same?\n        case \"upsert\":\n            op.keys.forEach((key, idx) => {\n                tbl[key] = {\n                    type: \"ups\",\n                    val: op.values[idx],\n                };\n            });\n            break;\n        case \"update\":\n        case \"modify\": {\n            op.keys.forEach((key, idx) => {\n                const changeSpec = op.type === \"update\"\n                    ? op.changeSpecs[idx]\n                    : op.changeSpec;\n                const entry = tbl[key];\n                if (!entry) {\n                    tbl[key] = {\n                        type: \"upd\",\n                        mod: changeSpec,\n                    };\n                }\n                else {\n                    switch (entry.type) {\n                        case \"ups\":\n                            // Adjust the existing upsert with additional updates\n                            for (const [propPath, value] of Object.entries(changeSpec)) {\n                                setByKeyPath(entry.val, propPath, value);\n                            }\n                            break;\n                        case \"del\":\n                            // No action.\n                            break;\n                        case \"upd\":\n                            // Adjust existing update with additional updates\n                            Object.assign(entry.mod, changeSpec); // May work for deep props as well - new keys is added later, right? Does the prop order persist along TSON and all? But it will not be 100% when combined with some server code (seach for \"address.city\": \"Stockholm\" comment)\n                            break;\n                    }\n                }\n            });\n            break;\n        }\n        case \"delete\":\n            op.keys.forEach((key) => {\n                tbl[key] = {\n                    type: \"del\",\n                };\n            });\n            break;\n    }\n    return target;\n}\n","import { applyOperation } from \"./applyOperation.js\";\nexport function applyOperations(target, ops) {\n    for (const { table, muts } of ops) {\n        for (const mut of muts) {\n            applyOperation(target, table, mut);\n        }\n    }\n}\n","import { setByKeyPath } from '../utils.js';\nexport function subtractChanges(target, // Server change set\nchangesToSubtract // additional mutations on client during syncWithServer()\n) {\n    var _a, _b, _c;\n    for (const [table, mutationSet] of Object.entries(changesToSubtract)) {\n        for (const [key, mut] of Object.entries(mutationSet)) {\n            switch (mut.type) {\n                case 'ups':\n                    {\n                        const targetMut = (_a = target[table]) === null || _a === void 0 ? void 0 : _a[key];\n                        if (targetMut) {\n                            switch (targetMut.type) {\n                                case 'ups':\n                                    delete target[table][key];\n                                    break;\n                                case 'del':\n                                    // Leave delete operation.\n                                    // (Don't resurrect objects unintenionally (using tx(get, put) pattern locally))\n                                    break;\n                                case 'upd':\n                                    delete target[table][key];\n                                    break;\n                            }\n                        }\n                    }\n                    break;\n                case 'del':\n                    (_b = target[table]) === null || _b === void 0 ? true : delete _b[key];\n                    break;\n                case 'upd': {\n                    const targetMut = (_c = target[table]) === null || _c === void 0 ? void 0 : _c[key];\n                    if (targetMut) {\n                        switch (targetMut.type) {\n                            case 'ups':\n                                // Adjust the server upsert with locally updated values.\n                                for (const [propPath, value] of Object.entries(mut.mod)) {\n                                    setByKeyPath(targetMut.val, propPath, value);\n                                }\n                                break;\n                            case 'del':\n                                // Leave delete.\n                                break;\n                            case 'upd':\n                                // Remove the local update props from the server update mutation.\n                                for (const propPath of Object.keys(mut.mod)) {\n                                    delete targetMut.mod[propPath];\n                                }\n                                break;\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n    }\n}\n","import { randomString } from \"../utils.js\";\n/** Convert a DBKeyMutationSet (which is an internal format capable of looking up changes per ID)\n * ...into a DBOperationsSet (which is more optimal for performing DB operations into DB (bulkAdd() etc))\n *\n * @param inSet\n * @returns DBOperationsSet representing inSet\n */\nexport function toDBOperationSet(inSet) {\n    // Fictive transaction:\n    const txid = randomString(16);\n    // Convert data into a temporary map to collect mutations of same table and type\n    const map = {};\n    for (const [table, ops] of Object.entries(inSet)) {\n        for (const [key, op] of Object.entries(ops)) {\n            const mapEntry = map[table] || (map[table] = {});\n            const ops = mapEntry[op.type] || (mapEntry[op.type] = []);\n            ops.push(Object.assign({ key }, op)); // DBKeyMutation doesn't contain key, so we need to bring it in.\n        }\n    }\n    // Start computing the resulting format:\n    const result = [];\n    for (const [table, ops] of Object.entries(map)) {\n        const resultEntry = {\n            table,\n            muts: [],\n        };\n        for (const [optype, muts] of Object.entries(ops)) {\n            switch (optype) {\n                case \"ups\": {\n                    const op = {\n                        type: \"upsert\",\n                        keys: muts.map(mut => mut.key),\n                        values: muts.map(mut => mut.val),\n                        txid\n                    };\n                    resultEntry.muts.push(op);\n                    break;\n                }\n                case \"upd\": {\n                    const op = {\n                        type: \"update\",\n                        keys: muts.map(mut => mut.key),\n                        changeSpecs: muts.map(mut => mut.mod),\n                        txid\n                    };\n                    resultEntry.muts.push(op);\n                    break;\n                }\n                case \"del\": {\n                    const op = {\n                        type: \"delete\",\n                        keys: muts.map(mut => mut.key),\n                        txid,\n                    };\n                    resultEntry.muts.push(op);\n                    break;\n                }\n            }\n        }\n        result.push(resultEntry);\n    }\n    return result;\n}\n","export function getDbNameFromDbUrl(dbUrl) {\n    const url = new URL(dbUrl);\n    return url.pathname === \"/\"\n        ? url.hostname.split('.')[0]\n        : url.pathname.split('/')[1];\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; }, 0);\n}","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export const isArray = (() => Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number'))();\n","export function isObject(x: any): x is Object {\n  return x !== null && typeof x === 'object';\n}\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parentOrParents: Subscription | Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (this as any)._ctorUnsubscribe = true;\n      (this as any)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parentOrParents, _ctorUnsubscribe, _unsubscribe, _subscriptions } = (this as any);\n\n    this.closed = true;\n    this._parentOrParents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    if (_parentOrParents instanceof Subscription) {\n      _parentOrParents.remove(this);\n    } else if (_parentOrParents !== null) {\n      for (let index = 0; index < _parentOrParents.length; ++index) {\n        const parent = _parentOrParents[index];\n        parent.remove(this);\n      }\n    }\n\n    if (isFunction(_unsubscribe)) {\n      // It's only possible to null _unsubscribe - to release the reference to\n      // any teardown function passed in the constructor - if the property was\n      // actually assigned in the constructor, as there are some classes that\n      // are derived from Subscriber (which derives from Subscription) that\n      // implement an _unsubscribe method as a mechanism for obtaining\n      // unsubscription notifications and some of those subscribers are\n      // recycled. Also, in some of those subscribers, _unsubscribe switches\n      // from a prototype method to an instance property - see notifyNext in\n      // RetryWhenSubscriber.\n      if (_ctorUnsubscribe) {\n        (this as any)._unsubscribe = undefined;\n      }\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      let index = -1;\n      let len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            errors = errors || [];\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (errors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription. Can also be used to add a child subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * When a parent subscription is unsubscribed, any child subscriptions that were added to it are also unsubscribed.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    let subscription = (<Subscription>teardown);\n\n    if (!teardown) {\n      return Subscription.EMPTY;\n    }\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void)>teardown);\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          // This also covers the case where `subscription` is `Subscription.EMPTY`, which is always in `closed` state.\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default: {\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n      }\n    }\n\n    // Add `this` as parent of `subscription` if that's not already the case.\n    let { _parentOrParents } = subscription;\n    if (_parentOrParents === null) {\n      // If we don't have a parent, then set `subscription._parents` to\n      // the `this`, which is the common case that we optimize for.\n      subscription._parentOrParents = this;\n    } else if (_parentOrParents instanceof Subscription) {\n      if (_parentOrParents === this) {\n        // The `subscription` already has `this` as a parent.\n        return subscription;\n      }\n      // If there's already one parent, but not multiple, allocate an\n      // Array to store the rest of the parent Subscriptions.\n      subscription._parentOrParents = [_parentOrParents, this];\n    } else if (_parentOrParents.indexOf(this) === -1) {\n      // Only add `this` to the _parentOrParents list if it's not already there.\n      _parentOrParents.push(this);\n    } else {\n      // The `subscription` already has `this` as a parent.\n      return subscription;\n    }\n\n    // Optimize for the common case when adding the first subscription.\n    const subscriptions = this._subscriptions;\n    if (subscriptions === null) {\n      this._subscriptions = [subscription];\n    } else {\n      subscriptions.push(subscription);\n    }\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber = (() =>\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random())();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const {  _parentOrParents } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { noop } from './noop';\nimport { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   * @deprecated use new Observable() instead\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription;\n  /** @deprecated Use an observer instead of an error callback */\n  subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * );\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  subscriber.complete();\n};\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = (iterable as any)[Symbol_iterator]();\n\n  do {\n    let item: IteratorResult<T>;\n    try {\n      item = iterator.next();\n    } catch (err) {\n      subscriber.error(err);\n      return subscriber;\n    }\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","/**\n * Tests to see if the object is an ES2015 (ES6) Promise\n * @see {@link https://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects}\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return !!value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>): (subscriber: Subscriber<T>) => Subscription | void => {\n  if (!!result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (!!result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","/** @prettier */\nimport { Subscription } from './Subscription';\nimport { Subscriber } from './Subscriber';\nimport { Observable } from './Observable';\nimport { subscribeTo } from './util/subscribeTo';\n\ninterface SimpleOuterSubscriberLike<T> {\n  /**\n   * A handler for inner next notifications from the inner subscription\n   * @param innerValue the value nexted by the inner producer\n   */\n  notifyNext(innerValue: T): void;\n  /**\n   * A handler for inner error notifications from the inner subscription\n   * @param err the error from the inner producer\n   */\n  notifyError(err: any): void;\n  /**\n   * A handler for inner complete notifications from the inner subscription.\n   */\n  notifyComplete(): void;\n}\n\nexport class SimpleInnerSubscriber<T> extends Subscriber<T> {\n  constructor(private parent: SimpleOuterSubscriberLike<any>) {\n    super();\n  }\n\n  protected _next(value: T): void {\n    this.parent.notifyNext(value);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete();\n    this.unsubscribe();\n  }\n}\n\nexport class ComplexInnerSubscriber<T, R> extends Subscriber<R> {\n  constructor(private parent: ComplexOuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n\nexport class SimpleOuterSubscriber<T, R> extends Subscriber<T> implements SimpleOuterSubscriberLike<R> {\n  notifyNext(innerValue: R): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(): void {\n    this.destination.complete();\n  }\n}\n\n/**\n * DO NOT USE (formerly \"OuterSubscriber\")\n * TODO: We want to refactor this and remove it. It is retaining values it shouldn't for long\n * periods of time.\n */\nexport class ComplexOuterSubscriber<T, R> extends Subscriber<T> {\n  /**\n   * @param _outerValue Used by: bufferToggle, delayWhen, windowToggle\n   * @param innerValue Used by: subclass default, combineLatest, race, bufferToggle, windowToggle, withLatestFrom\n   * @param _outerIndex Used by: combineLatest, race, withLatestFrom\n   * @param _innerSub Used by: delayWhen\n   */\n  notifyNext(_outerValue: T, innerValue: R, _outerIndex: number, _innerSub: ComplexInnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any): void {\n    this.destination.error(error);\n  }\n\n  /**\n   * @param _innerSub Used by: race, bufferToggle, delayWhen, windowToggle, windowWhen\n   */\n  notifyComplete(_innerSub: ComplexInnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n\nexport function innerSubscribe(result: any, innerSubscriber: Subscriber<any>): Subscription | undefined {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  let subscription: Subscription;\n  try {\n    subscription = subscribeTo(result)(innerSubscriber) as Subscription;\n  } catch (error) {\n    innerSubscriber.error(error);\n  }\n  return subscription;\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated renamed. Use {@link asyncScheduler}\n */\nexport const async = asyncScheduler;","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(selector: (err: any, caught: Observable<T>) => O): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * ![](catch.png)\n *\n * ## Examples\n * Continues with a different Observable when there's an error\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *   \t   if (n === 4) {\n * \t       throw 'four!';\n *       }\n *\t     return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V')),\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retries the caught source Observable again in case of error, similar to retry() operator\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError, take } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *   \t   if (n === 4) {\n *   \t     throw 'four!';\n *       }\n * \t     return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30),\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throws a new error when the source Observable throws an error\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     }),\n *   )\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n *  @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | ObservedValueOf<O>> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends SimpleOuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      const innerSubscriber = new SimpleInnerSubscriber(this);\n      this.add(innerSubscriber);\n      const innerSubscription = innerSubscribe(result, innerSubscriber);\n      // The returned subscription will usually be the subscriber that was\n      // passed. However, interop subscribers will be wrapped and for\n      // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n      if (innerSubscription !== innerSubscriber) {\n        this.add(innerSubscription);\n      }\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let i = 0;\n    sub.add(scheduler.schedule(function () {\n      if (i === input.length) {\n        subscriber.complete();\n        return;\n      }\n      subscriber.next(input[i++]);\n      if (!subscriber.closed) {\n        sub.add(this.schedule());\n      }\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\nexport function fromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToArray(input));\n  } else {\n    return scheduleArray(input, scheduler);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => {\n      const observable: Subscribable<T> = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n        error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n        complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => input.then(\n      value => {\n        sub.add(scheduler.schedule(() => {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(() => subscriber.complete()));\n        }));\n      },\n      err => {\n        sub.add(scheduler.schedule(() => subscriber.error(err)));\n      }\n    )));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let iterator: Iterator<T>;\n    sub.add(() => {\n      // Finalize generators\n      if (iterator && typeof iterator.return === 'function') {\n        iterator.return();\n      }\n    });\n    sub.add(scheduler.schedule(() => {\n      iterator = input[Symbol_iterator]();\n      sub.add(scheduler.schedule(function () {\n        if (subscriber.closed) {\n          return;\n        }\n        let value: T;\n        let done: boolean;\n        try {\n          const result = iterator.next();\n          value = result.value;\n          done = result.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      }));\n    }));\n    return sub;\n  });\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { ObservableInput, SchedulerLike, Observable } from 'rxjs';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see from\n * @see of\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated use {@link scheduled} instead. */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * ### Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * ---\n *\n * ### With async scheduler\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start\n * // end\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  } else {\n    return scheduled(input, scheduler);\n  }\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { Observable } from '../Observable';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T>(a: T, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2>(a: T, b: T2, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3>(a: T, b: T2, c: T3, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: (T | SchedulerLike)[]): Observable<T>;\n\n// TODO(benlesh): Update the typings for this when we can switch to TS 3.x\nexport function of<T>(a: T): Observable<T>;\nexport function of<T, T2>(a: T, b: T2): Observable<T | T2>;\nexport function of<T, T2, T3>(a: T, b: T2, c: T3): Observable<T | T2 | T3>;\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4): Observable<T | T2 | T3 | T4>;\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5): Observable<T | T2 | T3 | T4 | T5>;\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: T[]): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: 10'\n * // 'next: 20'\n * // 'next: 30'\n *\n * ```\n *\n * Emit the array `[1,2,3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1,2,3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: [1,2,3]'\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n * @method of\n * @owner Observable\n */\n\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  let scheduler = args[args.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    args.pop();\n    return scheduleArray(args as T[], scheduler);\n  } else {\n    return fromArray(args as T[]);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: R;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then complete\n * ```ts\n * import { empty } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n * ```ts\n * import { empty, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return An \"empty\" Observable: emits only the complete\n * notification.\n * @deprecated Deprecated in favor of using {@link EMPTY} constant, or {@link scheduled} (e.g. `scheduled([], scheduler)`)\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * ![](throw.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then emit an error\n * ```ts\n * import { throwError, concat, of } from 'rxjs';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // 7\n * // Error: oops!\n * ```\n *\n * ---\n *\n * ### Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 2\n * ```ts\n * import { throwError, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 2\n *     ? throwError('Twos are bad')\n *     : of('a', 'b', 'c')\n *   ),\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // a\n * // b\n * // c\n * // a\n * // b\n * // c\n * // Twos are bad\n * ```\n *\n * @see {@link Observable}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throwError\n * @owner Observable\n */\nexport function throwError(error: any, scheduler?: SchedulerLike): Observable<never> {\n  if (!scheduler) {\n    return new Observable(subscriber => subscriber.error(error));\n  } else {\n    return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n  }\n}\n\ninterface DispatchArg {\n  error: any;\n  subscriber: Subscriber<any>;\n}\n\nfunction dispatch({ error, subscriber }: DispatchArg) {\n  subscriber.error(error);\n}\n","import { PartialObserver } from './types';\nimport { Observable } from './Observable';\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { deprecate } from 'util';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated NotificationKind is deprecated as const enums are not compatible with isolated modules. Use a string literal instead.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: 'N' | 'E' | 'C', public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return of(this.value);\n      case 'E':\n        return throwError(this.error);\n      case 'C':\n        return empty();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.png)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n * Delay each click by one second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { delay } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { delay } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: SchedulerLike;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: SchedulerAction<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: SchedulerLike): void {\n    this.active = true;\n    const destination = this.destination as Subscription;\n    destination.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","export interface ArgumentOutOfRangeError extends Error {\n}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  new(): ArgumentOutOfRangeError;\n}\n\nconst ArgumentOutOfRangeErrorImpl = (() => {\n  function ArgumentOutOfRangeErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n  }\n\n  ArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ArgumentOutOfRangeErrorImpl;\n})();\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = ArgumentOutOfRangeErrorImpl as any;","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n * Emit only click events whose target was a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { filter } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => ev.target.tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n * Take the first 5 seconds of an infinite 1-second interval Observable\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n * Generate new Observable according to source Observable values\n * ```typescript\n * import { of } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const switched = of(1, 2, 3).pipe(switchMap((x: number) => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // ... and so on\n * ```\n *\n * Rerun an interval Observable on every click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap((ev) => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    return (source: Observable<T>) => source.pipe(\n      switchMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii))\n      ))\n    );\n  }\n  return (source: Observable<T>) => source.lift(new SwitchMapOperator(project));\n}\n\nclass SwitchMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private index = 0;\n  private innerSubscription?: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error!(error);\n      return;\n    }\n    this._innerSub(result);\n  }\n\n  private _innerSub(result: ObservableInput<R>) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    const innerSubscriber = new SimpleInnerSubscriber(this);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    this.innerSubscription = innerSubscribe(result, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (this.innerSubscription !== innerSubscriber) {\n      destination.add(this.innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n    this.unsubscribe();\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = undefined;\n  }\n\n  notifyComplete(): void {\n    this.innerSubscription = undefined;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(innerValue: R): void {\n      this.destination.next!(innerValue);\n  }\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, TeardownLogic } from '../types';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use an observer instead of a complete callback */\nexport function tap<T>(next: null | undefined, error: null | undefined, complete: () => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Use an observer instead of an error callback */\nexport function tap<T>(next: null | undefined, error: (error: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Use an observer instead of a complete callback */\nexport function tap<T>(next: (value: T) => void, error: null | undefined, complete: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(next?: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * ![](do.png)\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `tap` is not subscribed, the side effects specified by the\n * Observer will never happen. `tap` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * ## Example\n * Map every click to the clientX position of that click, while also logging the click event\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { tap, map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(\n *   tap(ev => console.log(ev)),\n *   map(ev => ev.clientX),\n * );\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n * @see {@link Observable#subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nclass TapSubscriber<T> extends Subscriber<T> {\n  private _context: any;\n\n  private _tapNext: ((value: T) => void) = noop;\n\n  private _tapError: ((err: any) => void) = noop;\n\n  private _tapComplete: (() => void) = noop;\n\n  constructor(destination: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n      super(destination);\n      this._tapError = error || noop;\n      this._tapComplete = complete || noop;\n      if (isFunction(observerOrNext)) {\n        this._context = this;\n        this._tapNext = observerOrNext;\n      } else if (observerOrNext) {\n        this._context = observerOrNext;\n        this._tapNext = observerOrNext.next || noop;\n        this._tapError = observerOrNext.error || noop;\n        this._tapComplete = observerOrNext.complete || noop;\n      }\n    }\n\n  _next(value: T) {\n    try {\n      this._tapNext.call(this._context, value);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(value);\n  }\n\n  _error(err: any) {\n    try {\n      this._tapError.call(this._context, err);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.error(err);\n  }\n\n  _complete() {\n    try {\n      this._tapComplete.call(this._context, );\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    return this.destination.complete();\n  }\n}\n","export interface TimeoutError extends Error {\n}\n\nexport interface TimeoutErrorCtor {\n  new(): TimeoutError;\n}\n\nconst TimeoutErrorImpl = (() => {\n  function TimeoutErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    return this;\n  }\n\n  TimeoutErrorImpl.prototype = Object.create(Error.prototype);\n\n  return TimeoutErrorImpl;\n})();\n\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link operators/timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = TimeoutErrorImpl as any;\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { ObservableInput, OperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T, R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * ![](timeoutWith.png)\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * ## Example\n * Add fallback observable\n * ```ts\n * import { interval } from 'rxjs';\n * import { timeoutWith } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n * const minutes = interval(60 * 1000);\n *\n * seconds.pipe(timeoutWith(900, minutes))\n *   .subscribe(\n *     value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                  // since first value of `seconds` will not arrive fast enough.\n *     err => console.log(err),     // Would be called after 900ms in case of `timeout`,\n *                                  // but here will never be called.\n *   );\n * ```\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {SchedulerLike} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: SchedulerLike = async): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => {\n    let absoluteTimeout = isDate(due);\n    let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n\n  private action?: SchedulerAction<TimeoutWithSubscriber<T, R>>;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T, R>(subscriber: TimeoutWithSubscriber<T, R>): void {\n    const { withObservable } = subscriber;\n    subscriber._unsubscribeAndRecycle();\n    subscriber.add(innerSubscribe(withObservable, new SimpleInnerSubscriber(subscriber)));\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<SchedulerAction<TimeoutWithSubscriber<T, R>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<SchedulerAction<TimeoutWithSubscriber<T, R>>> this.scheduler.schedule<TimeoutWithSubscriber<T, R>>(\n        TimeoutWithSubscriber.dispatchTimeout as any, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.action = undefined;\n    this.scheduler = null!;\n    this.withObservable = null!;\n  }\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\nimport { timeoutWith } from './timeoutWith';\nimport { throwError } from '../observable/throwError';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * ## Examples\n * Check if ticks are emitted within certain timespan\n * ```ts\n * import { interval } from 'rxjs';\n * import { timeout } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n *\n * seconds.pipe(timeout(1100))      // Let's use bigger timespan to be safe,\n *                                  // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err),     // Will never be called.\n * );\n *\n * seconds.pipe(timeout(900))\n * .subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err),     // Will emit error before even first value is emitted,\n *                                  // since it did not arrive within 900ms period.\n * );\n * ```\n *\n * Use Date to check if Observable completed\n * ```ts\n * import { interval } from 'rxjs';\n * import { timeout } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n *\n * seconds.pipe(\n *   timeout(new Date(\"December 17, 2020 03:24:00\")),\n * )\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err)      // On December 17, 2020 at 03:24:00 it will emit an error,\n *                                  // since Observable did not complete by then.\n * );\n * ```\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {SchedulerLike} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return timeoutWith(due, throwError(new TimeoutError()), scheduler);\n}\n","export const b64decode = typeof Buffer !== \"undefined\"\n    ? (base64) => Buffer.from(base64, \"base64\")\n    : (base64) => {\n        const binary_string = atob(base64);\n        const len = binary_string.length;\n        const bytes = new Uint8Array(len);\n        for (var i = 0; i < len; i++) {\n            bytes[i] = binary_string.charCodeAt(i);\n        }\n        return bytes;\n    };\nexport const b64encode = typeof Buffer !== \"undefined\"\n    ? (b) => ArrayBuffer.isView(b)\n        ? Buffer.from(b.buffer, b.byteOffset, b.byteLength).toString(\"base64\")\n        : Buffer.from(b).toString(\"base64\")\n    : (b) => btoa(String.fromCharCode.apply(null, b));\n","import Dexie from 'dexie';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { DXCAlert } from '../types/DXCAlert';\nimport { DXCInputField } from '../types/DXCInputField';\nimport { DXCUserInteraction } from '../types/DXCUserInteraction';\n\nexport interface DXCUserInteractionRequest {\n  type: DXCUserInteraction['type'];\n  title: string;\n  alerts: DXCAlert[];\n  fields: { [name: string]: DXCInputField };\n}\n\nexport function interactWithUser<T extends DXCUserInteractionRequest>(\n  userInteraction: BehaviorSubject<DXCUserInteraction | undefined>,\n  req: T\n): Promise<\n  {\n    [P in keyof T['fields']]: string;\n  }\n> {\n  let done = false;\n  return new Promise<\n    {\n      [P in keyof T['fields']]: string;\n    }\n  >((resolve, reject) => {\n    const interactionProps = {\n      ...req,\n      onSubmit: (\n        res: {\n          [P in keyof T['fields']]: string;\n        }\n      ) => {\n        userInteraction.next(undefined);\n        done = true;\n        resolve(res);\n      },\n      onCancel: () => {\n        userInteraction.next(undefined);\n        done = true;\n        reject(new Dexie.AbortError(\"User cancelled\"));\n      },\n    } as DXCUserInteraction;\n    userInteraction.next(interactionProps);\n    // Start subscribing for external updates to db.cloud.userInteraction, and if so, cancel this request.\n    /*const subscription = userInteraction.subscribe((currentInteractionProps) => {\n      if (currentInteractionProps !== interactionProps) {\n        if (subscription) subscription.unsubscribe();\n        if (!done) {\n          reject(new Dexie.AbortError(\"User cancelled\"));\n        }\n      }\n    });*/\n  });\n}\n\nexport function alertUser(\n  userInteraction: BehaviorSubject<DXCUserInteraction | undefined>,\n  title: string,\n  ...alerts: DXCAlert[]\n) {\n  return interactWithUser(userInteraction, {\n    type: 'message-alert',\n    title,\n    alerts,\n    fields: {}\n  });\n}\n\nexport async function promptForEmail(\n  userInteraction: BehaviorSubject<DXCUserInteraction | undefined>,\n  title: string,\n  emailHint?: string\n) {\n  let email = emailHint || '';\n  while (!email || !/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,10}$/.test(email)) {\n    email = (\n      await interactWithUser(userInteraction, {\n        type: 'email',\n        title,\n        alerts: email\n          ? [\n              {\n                type: 'error',\n                messageCode: 'INVALID_EMAIL',\n                message: 'Please enter a valid email address',\n                messageParams: {},\n              },\n            ]\n          : [],\n        fields: {\n          email: {\n            type: 'email',\n            placeholder: 'you@somedomain.com',\n          },\n        },\n      })\n    ).email;\n  }\n  return email;\n}\n\nexport async function promptForOTP(\n  userInteraction: BehaviorSubject<DXCUserInteraction | undefined>,\n  email: string,\n  alert?: DXCAlert\n) {\n  const alerts: DXCAlert[] = [\n    {\n      type: 'info',\n      messageCode: 'OTP_SENT',\n      message: `A One-Time password has been sent to {email}`,\n      messageParams: { email },\n    },\n  ];\n  if (alert) {\n    alerts.push(alert);\n  }\n  const { otp } = await interactWithUser(userInteraction, {\n    type: 'otp',\n    title: 'Enter OTP',\n    alerts,\n    fields: {\n      otp: {\n        type: 'otp',\n        label: 'OTP',\n        placeholder: 'Paste OTP here',\n      },\n    },\n  });\n  return otp;\n}\n","import type {\n  RefreshTokenRequest,\n  TokenFinalResponse,\n} from 'dexie-cloud-common';\nimport { b64encode } from 'dreambase-library/dist/common/base64';\nimport { BehaviorSubject } from 'rxjs';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { UserLogin } from '../db/entities/UserLogin';\nimport { DXCAlert } from '../types/DXCAlert';\nimport {\n  DXCMessageAlert,\n  DXCUserInteraction,\n} from '../types/DXCUserInteraction';\nimport { alertUser, interactWithUser } from './interactWithUser';\n\nexport type FetchTokenCallback = (tokenParams: {\n  public_key: string;\n  hints?: { userId?: string; email?: string; grant_type?: string };\n}) => Promise<TokenFinalResponse>;\n\nexport async function loadAccessToken(\n  db: DexieCloudDB\n): Promise<string | undefined> {\n  const currentUser = await db.getCurrentUser();\n  const {\n    accessToken,\n    accessTokenExpiration,\n    refreshToken,\n    refreshTokenExpiration,\n    claims,\n  } = currentUser;\n  if (!accessToken) return;\n  const expTime = accessTokenExpiration?.getTime() ?? Infinity;\n  if (expTime > Date.now()) {\n    return accessToken;\n  }\n  if (!refreshToken) {\n    throw new Error(`Refresh token missing`);\n  }\n  const refreshExpTime = refreshTokenExpiration?.getTime() ?? Infinity;\n  if (refreshExpTime <= Date.now()) {\n    throw new Error(`Refresh token has expired`);\n  }\n  const refreshedLogin = await refreshAccessToken(\n    db.cloud.options!.databaseUrl,\n    currentUser\n  );\n  await db.table('$logins').update(claims.sub, {\n    accessToken: refreshedLogin.accessToken,\n    accessTokenExpiration: refreshedLogin.accessTokenExpiration,\n  });\n  return refreshedLogin.accessToken;\n}\n\nexport async function authenticate(\n  url: string,\n  context: UserLogin,\n  fetchToken: FetchTokenCallback,\n  userInteraction: BehaviorSubject<DXCUserInteraction | undefined>,\n  hints?: { userId?: string; email?: string; grant_type?: string }\n): Promise<UserLogin> {\n  if (\n    context.accessToken &&\n    context.accessTokenExpiration!.getTime() > Date.now()\n  ) {\n    return context;\n  } else if (\n    context.refreshToken &&\n    (!context.refreshTokenExpiration ||\n      context.refreshTokenExpiration.getTime() > Date.now())\n  ) {\n    return await refreshAccessToken(url, context);\n  } else {\n    return await userAuthenticate(context, fetchToken, userInteraction, hints);\n  }\n}\n\nexport async function refreshAccessToken(\n  url: string,\n  login: UserLogin\n): Promise<UserLogin> {\n  if (!login.refreshToken)\n    throw new Error(`Cannot refresh token - refresh token is missing.`);\n  if (!login.nonExportablePrivateKey)\n    throw new Error(\n      `login.nonExportablePrivateKey is missing - cannot sign refresh token without a private key.`\n    );\n\n  const time_stamp = Date.now();\n  const signing_algorithm = 'RSASSA-PKCS1-v1_5';\n  const textEncoder = new TextEncoder();\n  const data = textEncoder.encode(login.refreshToken + time_stamp);\n  const binarySignature = await crypto.subtle.sign(\n    signing_algorithm,\n    login.nonExportablePrivateKey,\n    data\n  );\n  const signature = b64encode(binarySignature);\n\n  const tokenRequest: RefreshTokenRequest = {\n    grant_type: 'refresh_token',\n    refresh_token: login.refreshToken,\n    scopes: ['ACCESS_DB'],\n    signature,\n    signing_algorithm,\n    time_stamp,\n  };\n  const res = await fetch(`${url}/token`, {\n    body: JSON.stringify(tokenRequest),\n    method: 'post',\n    headers: { 'Content-Type': 'application/json' },\n    mode: 'cors',\n  });\n  if (res.status !== 200)\n    throw new Error(`RefreshToken: Status ${res.status} from ${url}/token`);\n  const response: TokenFinalResponse = await res.json();\n  login.accessToken = response.accessToken;\n  login.accessTokenExpiration = response.accessTokenExpiration\n    ? new Date(response.accessTokenExpiration)\n    : undefined;\n  return login;\n}\n\nasync function userAuthenticate(\n  context: UserLogin,\n  fetchToken: FetchTokenCallback,\n  userInteraction: BehaviorSubject<DXCUserInteraction | undefined>,\n  hints?: { userId?: string; email?: string; grant_type?: string }\n) {\n  const { privateKey, publicKey } = await crypto.subtle.generateKey(\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      modulusLength: 2048,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n      hash: { name: 'SHA-256' },\n    },\n    false, // Non-exportable...\n    ['sign', 'verify']\n  );\n  context.nonExportablePrivateKey = privateKey; //...but storable!\n  const publicKeySPKI = await crypto.subtle.exportKey('spki', publicKey);\n  const publicKeyPEM = spkiToPEM(publicKeySPKI);\n  context.publicKey = publicKey;\n\n  try {\n    const response2 = await fetchToken({\n      public_key: publicKeyPEM,\n      hints,\n    });\n\n    if (response2.type !== 'tokens')\n      throw new Error(\n        `Unexpected response type from token endpoint: ${response2.type}`\n      );\n\n    context.accessToken = response2.accessToken;\n    context.accessTokenExpiration = new Date(response2.accessTokenExpiration);\n    context.refreshToken = response2.refreshToken;\n    if (response2.refreshTokenExpiration) {\n      context.refreshTokenExpiration = new Date(\n        response2.refreshTokenExpiration\n      );\n    }\n    context.userId = response2.claims.sub;\n    context.email = response2.claims.email;\n    context.name = response2.claims.name;\n    context.claims = response2.claims;\n\n    if (response2.alerts && response2.alerts.length > 0) {\n      await interactWithUser(userInteraction, {\n        type: 'message-alert',\n        title: 'Authentication Alert',\n        fields: {},\n        alerts: response2.alerts as DXCAlert[],\n      });\n    }\n    return context;\n  } catch (error) {\n    await alertUser(userInteraction, 'Authentication Failed', {\n      type: 'error',\n      messageCode: 'GENERIC_ERROR',\n      message: `We're having a problem to authenticate rigth now.`,\n      messageParams: {}\n    }).catch(()=>{});\n    throw error;\n  }\n}\n\nfunction spkiToPEM(keydata: ArrayBuffer) {\n  const keydataB64 = b64encode(keydata);\n  const keydataB64Pem = formatAsPem(keydataB64);\n  return keydataB64Pem;\n}\n\nfunction formatAsPem(str: string) {\n  let finalString = '-----BEGIN PUBLIC KEY-----\\n';\n\n  while (str.length > 0) {\n    finalString += str.substring(0, 64) + '\\n';\n    str = str.substring(64);\n  }\n\n  finalString = finalString + '-----END PUBLIC KEY-----';\n\n  return finalString;\n}\n","import { DexieCloudDB } from \"../db/DexieCloudDB\";\nimport { UserLogin } from \"../db/entities/UserLogin\";\n\nexport interface AuthPersistedContext extends UserLogin {\n  save(): Promise<void>;\n}\n\n// Emulate true-private property db. Why? So it's not stored in DB.\nconst wm = new WeakMap<AuthPersistedContext, DexieCloudDB>();\n\nexport class AuthPersistedContext {\n  constructor(db: DexieCloudDB, userLogin: UserLogin) {\n    wm.set(this, db);\n    Object.assign(this, userLogin);\n  }\n\n  static load(db: DexieCloudDB, userId: string) {\n    return db\n      .table(\"$logins\")\n      .get(userId)\n      .then(\n        (userLogin) => new AuthPersistedContext(db, userLogin || {\n          userId,\n          claims: {\n            sub: userId\n          },\n          lastLogin: new Date(0)\n        })\n      );\n  }\n\n  async save() {\n    const db = wm.get(this)!;\n    db.table(\"$logins\").put(this);\n  }\n}\n","export class HttpError extends Error {\n  httpStatus: number;\n  constructor(\n    res: Response,\n    message?: string)\n  {\n    super(message || `${res.status} ${res.statusText}`);\n    this.httpStatus = res.status;\n  }\n\n  get name() {\n    return \"HttpError\";\n  }\n}\n","import {\n  TokenFinalResponse,\n  TokenRequest,\n  TokenResponse,\n} from 'dexie-cloud-common';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { HttpError } from '../errors/HttpError';\nimport { FetchTokenCallback } from './authenticate';\nimport { alertUser, promptForEmail, promptForOTP } from './interactWithUser';\n\nexport function otpFetchTokenCallback(db: DexieCloudDB): FetchTokenCallback {\n  const { userInteraction } = db.cloud;\n  return async function otpAuthenticate({ public_key, hints }) {\n    let tokenRequest: TokenRequest;\n    const url = db.cloud.options?.databaseUrl;\n    if (!url) throw new Error(`No database URL given.`);\n    if (hints?.grant_type === 'demo') {\n      const demo_user = await promptForEmail(\n        userInteraction,\n        'Enter a demo user email',\n        hints?.email || hints?.userId\n      );\n      tokenRequest = {\n        demo_user,\n        grant_type: 'demo',\n        scopes: ['ACCESS_DB'],\n        public_key,\n      };\n    } else {\n      const email = await promptForEmail(\n        userInteraction,\n        'Enter email address',\n        hints?.email\n      );\n      tokenRequest = {\n        email,\n        grant_type: 'otp',\n        scopes: ['ACCESS_DB'],\n        public_key,\n      };\n    }\n    const res1 = await fetch(`${url}/token`, {\n      body: JSON.stringify(tokenRequest),\n      method: 'post',\n      headers: { 'Content-Type': 'application/json', mode: 'cors' },\n    });\n    if (res1.status !== 200) {\n      const errMsg = await res1.text();\n      await alertUser(userInteraction, \"Token request failed\", {\n        type: 'error',\n        messageCode: 'GENERIC_ERROR',\n        message: errMsg,\n        messageParams: {}\n      }).catch(()=>{});\n      throw new HttpError(res1, errMsg);\n    }\n    const response: TokenResponse = await res1.json();\n    if (response.type === 'tokens') {\n      // Demo user request can get a \"tokens\" response right away\n      return response;\n    } else if (tokenRequest.grant_type === 'otp') {\n      if (response.type !== 'otp-sent')\n        throw new Error(`Unexpected response from ${url}/token`);\n      const otp = await promptForOTP(userInteraction, tokenRequest.email);\n      tokenRequest.otp = otp || '';\n      tokenRequest.otp_id = response.otp_id;\n\n      let res2 = await fetch(`${url}/token`, {\n        body: JSON.stringify(tokenRequest),\n        method: 'post',\n        headers: { 'Content-Type': 'application/json' },\n        mode: 'cors',\n      });\n      while (res2.status === 401) {\n        const errorText = await res2.text();\n        tokenRequest.otp = await promptForOTP(userInteraction, tokenRequest.email, {\n          type: 'error',\n          messageCode: 'INVALID_OTP',\n          message: errorText,\n          messageParams: {}\n        });\n        res2 = await fetch(`${url}/token`, {\n          body: JSON.stringify(tokenRequest),\n          method: 'post',\n          headers: { 'Content-Type': 'application/json' },\n          mode: 'cors',\n        });\n      }\n      if (res2.status !== 200) {\n        const errMsg = await res2.text();\n        await alertUser(userInteraction, \"OTP Authentication Failed\", {\n          type: 'error',\n          messageCode: 'GENERIC_ERROR',\n          message: errMsg,\n          messageParams: {}\n        }).catch(()=>{});\n        throw new HttpError(res2, errMsg);\n      }\n      const response2: TokenFinalResponse = await res2.json();\n      return response2;\n    } else {\n      throw new Error(`Unexpected response from ${url}/token`);\n    }\n  };\n}\n","import { DexieCloudDB } from \"../db/DexieCloudDB\";\nimport { AuthPersistedContext } from \"./AuthPersistedContext\";\n\n/** This function changes or sets the current user as requested.\n * \n * Use cases:\n * * Initially on db.ready after reading the current user from db.$logins.\n *   This will make sure that any unsynced operations from the previous user is synced before\n *   changing the user.\n * * Upon user request\n * \n * @param db \n * @param newUser \n */\nexport async function setCurrentUser(db: DexieCloudDB, user: AuthPersistedContext) {\n  if (user.userId === db.cloud.currentUserId) return; // Already this user.\n\n  const $logins = db.table('$logins');\n  await db.transaction('rw', $logins, async tx => {\n    const existingLogins = await $logins.toArray();\n    await Promise.all(existingLogins.filter(login => login.userId !== user.userId && login.isLoggedIn).map(login => {\n      login.isLoggedIn = false;\n      return $logins.put(login);\n    }));\n    user.isLoggedIn = true;\n    user.lastLogin = new Date();\n    await user.save();\n    console.debug(\"Saved new user\", user.email);\n  });\n  await new Promise(resolve=>{\n    if (db.cloud.currentUserId === user.userId) {\n      resolve(null);\n    } else {\n      const subscription = db.cloud.currentUser.subscribe(currentUser=>{\n        if (currentUser.userId === user.userId) {\n          subscription.unsubscribe();\n          resolve(null);\n        }\n      });\n    }\n  });\n\n  // TANKAR!!!!\n  // V: Service workern kommer inte ha tillgång till currentUserObservable om den inte istället härrör från ett liveQuery.\n  // V: Samma med andra windows.\n  // V: Så kanske göra om den till att häröra från liveQuery som läser $logins.orderBy('lastLogin').last().\n  // V: Då bara vara medveten om:\n  //    V: En sån observable börjar hämta data vid första subscribe\n  //    V: Vi har inget \"inital value\" men kan emulera det till att vara ANONYMOUS_USER\n  //    V: Om requireAuth är true, så borde db.on(ready) hålla databasen stängd för alla utom denna observable.\n  //    V: Om inte så behöver den inte blocka.\n\n  // Andra tankar:\n  //    * Man kan inte byta användare när man är offline. Skulle gå att flytta realms till undanstuff-tabell vid user-change.\n  //      men troligen inte värt det.\n  //    * Istället: sälj inte inte switch-user funktionalitet utan tala enbart om inloggat vs icke inloggat läge.\n  //    * populate $logins med ANONYMOUS så att en påbörjad inloggning inte räknas, alternativt ha en boolean prop!\n  //      Kanske bäst ha en boolean prop!\n  //    * Alternativ switch-user funktionalitet:\n  //      * DBCore gömmer data från realms man inte har tillgång till.\n  //      * Cursor impl behövs också då.\n  //      * Då blir det snabba user switch.\n  //      * claims-settet som skickas till servern blir summan av alla claims. Då måste servern stödja multipla tokens eller\n  //        att ens token är ett samlad.\n}\n","import { DexieCloudDB } from '../db/DexieCloudDB';\nimport { authenticate } from './authenticate';\nimport { AuthPersistedContext } from './AuthPersistedContext';\nimport { otpFetchTokenCallback } from './otpFetchTokenCallback';\nimport { setCurrentUser } from './setCurrentUser';\n\nexport async function login(\n  db: DexieCloudDB,\n  hints?: { email?: string; userId?: string; grant_type?: string }\n) {\n  const currentUser = await db.getCurrentUser();\n  if (currentUser.isLoggedIn) {\n    if (hints) {\n      if (hints.email && db.cloud.currentUser.value.email !== hints.email) {\n        throw new Error(`Must logout before changing user`);\n      }\n      if (hints.userId && db.cloud.currentUserId !== hints.userId) {\n        throw new Error(`Must logout before changing user`);\n      }\n    }\n    // Already authenticated according to given hints.\n    return;\n  }\n  const context = new AuthPersistedContext(db, {\n    claims: {},\n    lastLogin: new Date(0),\n  });\n  await authenticate(\n    db.cloud.options!.databaseUrl,\n    context,\n    db.cloud.options!.fetchTokens || otpFetchTokenCallback(db),\n    db.cloud.userInteraction,\n    hints\n  );\n  await context.save();\n  await setCurrentUser(db, context);\n}\n","// @ts-ignore\nexport const isFirefox = typeof InstallTrigger !== 'undefined';\n","export const isSafari =\n  typeof navigator !== 'undefined' &&\n  /Safari\\//.test(navigator.userAgent) &&\n  !/Chrom(e|ium)\\/|Edge\\//.test(navigator.userAgent);\n\nexport const safariVersion = isSafari\n  ? // @ts-ignore\n    [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1]\n  : NaN;\n","import { isFirefox } from './isFirefox';\nimport { isSafari, safariVersion } from './isSafari';\n\n// What we know: Safari 14.1 (version 605) crashes when using dexie-cloud's service worker.\n// We don't know what exact call is causing this. Have tried safari-14-idb-fix with no luck.\n// Something we do in the service worker is triggering the crash.\n// When next Safari version (606) is out we will start enabling SW again, hoping that the bug is solved.\n// If not, we might increment 605 to 606.\nexport const DISABLE_SERVICEWORKER_STRATEGY =\n  (isSafari && safariVersion <= 605) || // Disable for Safari for now.\n  isFirefox; // Disable for Firefox for now. Seems to have a bug in reading CryptoKeys from IDB from service workers\n","import Dexie from \"dexie\";\n\n/* Helper function to subscribe to database close no matter if it was unexpectedly closed or manually using db.close()\n */\nexport function dbOnClosed(db: Dexie, handler: () => void) {\n  db.on.close.subscribe(handler);\n  const origClose = db.close;\n  db.close = function () {\n    origClose.call(this);\n    handler();\n  };\n  return () => {\n    db.on.close.unsubscribe(handler);\n    db.close = origClose;\n  };\n}\n","export const IS_SERVICE_WORKER =\n  typeof self !== \"undefined\" && \"clients\" in self && !self.document;\n","import Dexie from \"dexie\";\n\nexport function throwVersionIncrementNeeded() {\n  throw new Dexie.SchemaError(\n    `Version increment needed to allow dexie-cloud change tracking`\n  );\n}\n","import { b64decode, b64encode } from \"./base64.js\";\nexport function b64LexEncode(b) {\n    return b64ToLex(b64encode(b));\n}\nexport function b64LexDecode(b64Lex) {\n    return b64decode(lexToB64(b64Lex));\n}\nexport function b64ToLex(base64) {\n    var encoded = \"\";\n    for (var i = 0, length = base64.length; i < length; i++) {\n        encoded += ENCODE_TABLE[base64[i]];\n    }\n    return encoded;\n}\nexport function lexToB64(base64lex) {\n    // only accept string input\n    if (typeof base64lex !== \"string\") {\n        throw new Error(\"invalid decoder input: \" + base64lex);\n    }\n    var base64 = \"\";\n    for (var i = 0, length = base64lex.length; i < length; i++) {\n        base64 += DECODE_TABLE[base64lex[i]];\n    }\n    return base64;\n}\nconst DECODE_TABLE = {\n    \"-\": \"=\",\n    \"0\": \"A\",\n    \"1\": \"B\",\n    \"2\": \"C\",\n    \"3\": \"D\",\n    \"4\": \"E\",\n    \"5\": \"F\",\n    \"6\": \"G\",\n    \"7\": \"H\",\n    \"8\": \"I\",\n    \"9\": \"J\",\n    A: \"K\",\n    B: \"L\",\n    C: \"M\",\n    D: \"N\",\n    E: \"O\",\n    F: \"P\",\n    G: \"Q\",\n    H: \"R\",\n    I: \"S\",\n    J: \"T\",\n    K: \"U\",\n    L: \"V\",\n    M: \"W\",\n    N: \"X\",\n    O: \"Y\",\n    P: \"Z\",\n    Q: \"a\",\n    R: \"b\",\n    S: \"c\",\n    T: \"d\",\n    U: \"e\",\n    V: \"f\",\n    W: \"g\",\n    X: \"h\",\n    Y: \"i\",\n    Z: \"j\",\n    _: \"k\",\n    a: \"l\",\n    b: \"m\",\n    c: \"n\",\n    d: \"o\",\n    e: \"p\",\n    f: \"q\",\n    g: \"r\",\n    h: \"s\",\n    i: \"t\",\n    j: \"u\",\n    k: \"v\",\n    l: \"w\",\n    m: \"x\",\n    n: \"y\",\n    o: \"z\",\n    p: \"0\",\n    q: \"1\",\n    r: \"2\",\n    s: \"3\",\n    t: \"4\",\n    u: \"5\",\n    v: \"6\",\n    w: \"7\",\n    x: \"8\",\n    y: \"9\",\n    z: \"+\",\n    \"|\": \"/\",\n};\nconst ENCODE_TABLE = {};\nfor (const c of Object.keys(DECODE_TABLE)) {\n    ENCODE_TABLE[DECODE_TABLE[c]] = c;\n}\n","import Dexie, {\n  DBCore,\n  DBCoreAddRequest,\n  DBCoreDeleteRequest,\n  DBCoreIndex,\n  DBCoreMutateRequest,\n  DBCorePutRequest,\n  Middleware\n} from 'dexie';\nimport { isValidSyncableID } from 'dexie-cloud-common';\nimport { b64LexEncode } from 'dreambase-library/dist/common/b64lex';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\n\nconst { toString } = {};\nexport function toStringTag(o: Object) {\n  return toString.call(o).slice(8, -1);\n}\n\nexport function getEffectiveKeys(\n  primaryKey: DBCoreIndex,\n  req:\n    | (Pick<DBCoreAddRequest | DBCorePutRequest, 'type' | 'values'> & {\n        keys?: any[];\n      })\n    | Pick<DBCoreDeleteRequest, 'keys' | 'type'>\n) {\n  if (req.type === 'delete') return req.keys;\n  return req.keys?.slice() || req.values.map(primaryKey.extractKey!);\n}\n\nfunction applyToUpperBitFix(orig: string, bits: number) {\n  return (\n    (bits & 1 ? orig[0].toUpperCase() : orig[0].toLowerCase()) +\n    (bits & 2 ? orig[1].toUpperCase() : orig[1].toLowerCase()) +\n    (bits & 4 ? orig[2].toUpperCase() : orig[2].toLowerCase())\n  );\n}\n\nconst consonants = /b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|x|y|z/i;\n\nfunction isUpperCase(ch: string) {\n  return ch >= 'A' && ch <= 'Z';\n}\n\nexport function generateTablePrefix(\n  tableName: string,\n  allPrefixes: Set<string>\n) {\n  let rv = tableName[0].toLocaleLowerCase(); // \"users\" = \"usr\", \"friends\" = \"frn\", \"realms\" = \"rlm\", etc.\n  for (let i = 1, l = tableName.length; i < l && rv.length < 3; ++i) {\n    if (consonants.test(tableName[i]) || isUpperCase(tableName[i]))\n      rv += tableName[i].toLowerCase();\n  }\n  while (allPrefixes.has(rv)) {\n    if (/\\d/g.test(rv)) {\n      rv = rv.substr(0, rv.length - 1) + (rv[rv.length - 1] + 1);\n      if (rv.length > 3) rv = rv.substr(0, 3);\n      else continue;\n    } else if (rv.length < 3) {\n      rv = rv + '2';\n      continue;\n    }\n    let bitFix = 1;\n    let upperFixed = rv;\n    while (allPrefixes.has(upperFixed) && bitFix < 8) {\n      upperFixed = applyToUpperBitFix(rv, bitFix);\n      ++bitFix;\n    }\n    if (bitFix < 8) rv = upperFixed;\n    else {\n      let nextChar = (rv.charCodeAt(2) + 1) & 127;\n      rv = rv.substr(0, 2) + String.fromCharCode(nextChar);\n      // Here, in theory we could get an infinite loop if having 127*8 table names with identical 3 first consonants.\n    }\n  }\n  return rv;\n}\n\nlet time = 0;\n/**\n *\n * @param prefix A unique 3-letter short-name of the table.\n * @param shardKey 3 last letters from another ID if colocation is requested. Verified on server on inserts - guarantees unique IDs across shards.\n *  The shardKey part of the key represent the shardId where it was first created. An object with this\n *  primary key can later on be moved to another shard without being altered. The reason for having\n *  the origin shardKey as part of the key, is that the server will not need to check uniqueness constraint\n *  across all shards on every insert. Updates / moves across shards are already controlled by the server\n *  in the sense that the objects needs to be there already - we only need this part for inserts.\n * @returns\n */\nfunction generateKey(prefix: string, shardKey?: string) {\n  const a = new Uint8Array(18);\n  const timePart = new Uint8Array(a.buffer, 0, 6);\n  const now = Date.now(); // Will fit into 6 bytes until year 10 895.\n  if (time >= now) {\n    // User is bulk-creating objects the same millisecond.\n    // Increment the time part by one millisecond for each item.\n    // If bulk-creating 1,000,000 rows client-side in 10 seconds,\n    // the last time-stamp will be 990 seconds in future, which is no biggie at all.\n    // The point is to create a nice order of the generated IDs instead of\n    // using random ids.\n    ++time;\n  } else {\n    time = now;\n  }\n  timePart[0] = time / 0x1_00_00_00_00_00; // Normal division (no bitwise operator) --> works with >= 32 bits.\n  timePart[1] = time / 0x1_00_00_00_00;\n  timePart[2] = time / 0x1_00_00_00;\n  timePart[3] = time / 0x1_00_00;\n  timePart[4] = time / 0x1_00;\n  timePart[5] = time;\n  const randomPart = new Uint8Array(a.buffer, 6);\n  crypto.getRandomValues(randomPart);\n  const id = new Uint8Array(a.buffer);\n  return prefix + b64LexEncode(id) + (shardKey || '');\n}\n\nexport function createIdGenerationMiddleware(\n  db: DexieCloudDB\n): Middleware<DBCore> {\n  return {\n    stack: 'dbcore',\n    name: 'idGenerationMiddleware',\n    level: 1,\n    create: (core) => {\n      return {\n        ...core,\n        table: (tableName) => {\n          const table = core.table(tableName);\n\n          function generateOrVerifyAtKeys(req: DBCoreAddRequest | DBCorePutRequest, idPrefix: string) {\n            let valueClones: null | object[] = null;\n            const keys = getEffectiveKeys(table.schema.primaryKey, req);\n            keys.forEach((key, idx) => {\n              if (key === undefined) {\n                // Generate the key\n                const colocatedId =\n                  req.values[idx].realmId || db.cloud.currentUserId;\n                const shardKey = colocatedId.substr(colocatedId.length - 3);\n                keys[idx] = generateKey(idPrefix, shardKey);\n                if (!table.schema.primaryKey.outbound) {\n                  if (!valueClones) valueClones = req.values.slice();\n                  valueClones[idx] = Dexie.deepClone(valueClones[idx]);\n                  Dexie.setByKeyPath(\n                    valueClones[idx],\n                    table.schema.primaryKey.keyPath as any, // TODO: fix typings in dexie-constructor.d.ts!\n                    keys[idx]\n                  );\n                }\n              } else if (\n                typeof key !== 'string' ||\n                !key.startsWith(idPrefix)\n              ) {\n                // Key was specified by caller. Verify it complies with id prefix.\n                throw new Dexie.ConstraintError(\n                  `The ID \"${key}\" is not valid for table \"${tableName}\". ` +\n                    `Primary '@' keys requires the key to be prefixed with \"${idPrefix}.\\n\"` +\n                    `If you want to generate IDs programmatically, remove '@' from the schema to get rid of this constraint. Dexie Cloud supports custom IDs as long as they are random and globally unique.`\n                );\n              }\n            });\n            return table.mutate({\n              ...req,\n              keys,\n              values: valueClones || req.values\n            });\n          }\n\n          return {\n            ...table,\n            mutate: (req) => {\n              // @ts-ignore\n              if (req.trans.disableChangeTracking) {\n                // Disable ID policy checks and ID generation\n                return table.mutate(req);\n              }\n              if (req.type === 'add' || req.type === 'put') {\n                const cloudTableSchema = db.cloud.schema?.[tableName];\n                if (!cloudTableSchema?.generatedGlobalId) {\n                  if (cloudTableSchema?.markedForSync) {\n                    // Just make sure primary key is of a supported type:\n                    const keys = getEffectiveKeys(table.schema.primaryKey, req);\n                    keys.forEach((key, idx) => {\n                      if (!isValidSyncableID(key)) {\n                        const type = Array.isArray(key) ? key.map(toStringTag).join(',') : toStringTag(key);\n                        throw new Dexie.ConstraintError(\n                          `Invalid primary key type ${type} for table ${tableName}. Tables marked for sync has primary keys of type string or Array of string (and optional numbers)`\n                        );\n                      }\n                    });\n                  }\n                } else {\n                  if (db.cloud.options?.databaseUrl && !db.initiallySynced) {\n                    // A database URL is configured but no initial sync has been performed.\n                    const keys = getEffectiveKeys(table.schema.primaryKey, req);\n                    // Check if the operation would yield any INSERT. If so, complain! We never want wrong ID prefixes stored.\n                    return table.getMany({keys, trans: req.trans, cache: \"immutable\"}).then(results => {\n                      if (results.length < keys.length) {\n                        // At least one of the given objects would be created. Complain since\n                        // the generated ID would be based on a locally computed ID prefix only - we wouldn't\n                        // know if the server would give the same ID prefix until an initial sync has been\n                        // performed.\n                        throw new Error(`Unable to create new objects without an initial sync having been performed.`);\n                      }\n                      return table.mutate(req);\n                    });\n                  }\n                  return generateOrVerifyAtKeys(req, cloudTableSchema.idPrefix!);\n                }\n              }\n              return table.mutate(req);\n            }\n          };\n        }\n      };\n    }\n  };\n}\n","import { DBCore, DBCoreTransaction, Middleware } from 'dexie';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { TXExpandos } from '../types/TXExpandos';\n\nexport function createImplicitPropSetterMiddleware(\n  db: DexieCloudDB\n): Middleware<DBCore> {\n  return {\n    stack: 'dbcore',\n    name: 'implicitPropSetterMiddleware',\n    level: 1,\n    create: (core) => {\n      return {\n        ...core,\n        table: (tableName) => {\n          const table = core.table(tableName);\n          return {\n            ...table,\n            mutate: (req) => {\n              const trans = req.trans as DBCoreTransaction & TXExpandos;\n              if (\n                db.cloud.schema?.[tableName]?.markedForSync &&\n                trans.currentUser?.isLoggedIn\n              ) {\n                if (req.type === 'add' || req.type === 'put') {\n                  // If user is logged in, make sure \"owner\" and \"realmId\" props are set properly.\n                  // If not logged in, this will be set upon syncification of the tables (next sync after login)\n                  for (const obj of req.values) {\n                    if (!('owner' in obj)) {\n                      obj.owner = trans.currentUser.userId;\n                    }\n                    if (!('realmId' in obj)) {\n                      obj.realmId = trans.currentUser.userId;\n                    }\n                  }\n                }\n              }\n              return table.mutate(req);\n            }\n          };\n        }\n      };\n    }\n  };\n}\n","\n\nexport function getMutationTable(tableName: string) {\n  return `$${tableName}_mutations`;\n}\n","export function randomString(bytes: number) {\n  const buf = new Uint8Array(bytes);\n  crypto.getRandomValues(buf);\n  return btoa(String.fromCharCode.apply(null, buf));\n}","\nexport function allSettled(possiblePromises: any[]) {\n  return new Promise(resolve => {\n      if (possiblePromises.length === 0) resolve([]);\n      let remaining = possiblePromises.length;\n      const results = new Array(remaining);\n      possiblePromises.forEach((p, i) => Promise.resolve(p).then(\n          value => results[i] = {status: \"fulfilled\", value},\n          reason => results[i] = {status: \"rejected\", reason})\n          .then(()=>--remaining || resolve(results)));\n  });\n}\n","import { DBCoreTable, DBCoreTransaction } from \"dexie\";\nimport { allSettled } from \"../helpers/allSettled\";\n\nlet counter = 0;\n\nexport function guardedTable(table: DBCoreTable) {\n  const prop = \"$lock\"+ (++counter);\n  return {\n    ...table,\n    count: readLock(table.count, prop),\n    get: readLock(table.get, prop),\n    getMany: readLock(table.getMany, prop),\n    openCursor: readLock(table.openCursor, prop),\n    query: readLock(table.query, prop),\n    mutate: writeLock(table.mutate, prop),\n  };\n}\n\nfunction readLock<TReq extends { trans: DBCoreTransaction }, TRes>(\n  fn: (req: TReq) => Promise<TRes>,\n  prop: string\n): (req: TReq) => Promise<TRes> {\n  return function readLocker(req): Promise<TRes> {\n    const {\n      readers,\n      writers,\n    }: { writers: Promise<any>[]; readers: Promise<any>[] } =\n      req.trans[prop] || (req.trans[prop] = { writers: [], readers: [] });\n    const numWriters = writers.length;\n    const promise = (numWriters > 0\n      ? writers[numWriters - 1].then(() => fn(req), () => fn(req))\n      : fn(req)\n    ).finally(() => readers.splice(readers.indexOf(promise)));\n    readers.push(promise);\n    return promise;\n  };\n}\n\nfunction writeLock<TReq extends { trans: DBCoreTransaction }, TRes>(\n  fn: (req: TReq) => Promise<TRes>,\n  prop: string\n): (req: TReq) => Promise<TRes> {\n  return function writeLocker(req): Promise<TRes> {\n    const {\n      readers,\n      writers,\n    }: { writers: Promise<any>[]; readers: Promise<any>[] } =\n      req.trans[prop] || (req.trans[prop] = { writers: [], readers: [] });\n    let promise = (writers.length > 0\n      ? writers[writers.length - 1].then(() => fn(req), () => fn(req))\n      : readers.length > 0\n      ? allSettled(readers).then(() => fn(req))\n      : fn(req)\n    ).finally(() => writers.shift());\n    writers.push(promise);\n    return promise;\n  };\n}\n","import Dexie from 'dexie';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\n\n//const hasSW = 'serviceWorker' in navigator;\nlet hasComplainedAboutSyncEvent = false;\n\nexport async function registerSyncEvent(db: DexieCloudDB) {\n  try {\n    // Send sync event to SW:\n    const sw = await navigator.serviceWorker.ready;\n    if (sw.sync) {\n      await sw.sync.register(`dexie-cloud:${db.name}`);\n    } else if (sw.active) {\n      // Fallback to postMessage (Firefox, Safari):\n      sw.active.postMessage({\n        type: 'dexie-cloud-sync',\n        dbName: db.name\n      });\n    } else {\n      console.error(`Dexie Cloud: There's no active service worker. Can this ever happen??`);\n    }\n    return;\n  } catch (e) {\n    if (!hasComplainedAboutSyncEvent) {\n      console.debug(`Dexie Cloud: Could not register sync event`, e);\n      hasComplainedAboutSyncEvent = true;\n    }\n  }\n}\n\nexport async function registerPeriodicSyncEvent(db: DexieCloudDB) {\n  try {\n    // Register periodicSync event to SW:\n    // @ts-ignore\n    const { periodicSync } = await navigator.serviceWorker.ready;\n    if (periodicSync) {\n      try {\n        await periodicSync.register(\n          `dexie-cloud:${db.name}`,\n          db.cloud.options?.periodicSync\n        );\n        console.debug(\n          `Dexie Cloud: Successfully registered periodicsync event for ${db.name}`\n        );\n      } catch (e) {\n        console.debug(`Dexie Cloud: Failed to register periodic sync. Your PWA must be installed to allow background sync.`, e);\n      }\n    } else {\n      console.debug(`Dexie Cloud: periodicSync not supported.`);\n    }\n  } catch (e) {\n    console.debug(\n      `Dexie Cloud: Could not register periodicSync for ${db.name}`,\n      e\n    );\n  }\n}\n","import { DBCoreTransaction } from 'dexie';\nimport { BehaviorSubject } from 'rxjs';\nimport { TXExpandos } from '../types/TXExpandos';\n\nexport const outstandingTransactions = new BehaviorSubject<Set<DBCoreTransaction & IDBTransaction & TXExpandos>>(new Set());\n","import {\n  DBCore,\n  DBCoreAddRequest,\n  DBCoreDeleteRequest,\n  DBCoreMutateResponse,\n  DBCorePutRequest,\n  DBCoreTable,\n  DBCoreTransaction,\n  Middleware\n} from 'dexie';\nimport { DBOperation } from 'dexie-cloud-common';\nimport { BehaviorSubject } from 'rxjs';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { UserLogin } from '../db/entities/UserLogin';\nimport { getMutationTable } from '../helpers/getMutationTable';\nimport { randomString } from '../helpers/randomString';\nimport { throwVersionIncrementNeeded } from '../helpers/throwVersionIncrementNeeded';\nimport { guardedTable } from '../middleware-helpers/guardedTable';\nimport { registerSyncEvent } from '../sync/registerSyncEvent';\nimport { TXExpandos } from '../types/TXExpandos';\nimport { outstandingTransactions } from './outstandingTransaction';\n\nexport interface MutationTrackingMiddlewareArgs {\n  currentUserObservable: BehaviorSubject<UserLogin>;\n  db: DexieCloudDB;\n}\n\n/** Tracks all mutations in the same transaction as the mutations -\n * so it is guaranteed that no mutation goes untracked - and if transaction\n * aborts, the mutations won't be tracked.\n *\n * The sync job will use the tracked mutations as the source of truth when pushing\n * changes to server and cleanup the tracked mutations once the server has\n * ackowledged that it got them.\n */\nexport function createMutationTrackingMiddleware({\n  currentUserObservable,\n  db\n}: MutationTrackingMiddlewareArgs): Middleware<DBCore> {\n  return {\n    stack: 'dbcore',\n    name: 'MutationTrackingMiddleware',\n    level: 1,\n    create: (core) => {\n      const ordinaryTables = core.schema.tables.filter(\n        (t) => !/^\\$/.test(t.name)\n      );\n      let mutTableMap: Map<string, DBCoreTable>;\n      try {\n        mutTableMap = new Map(\n          ordinaryTables.map((tbl) => [\n            tbl.name,\n            core.table(`$${tbl.name}_mutations`)\n          ])\n        );\n      } catch {\n        throwVersionIncrementNeeded();\n      }\n\n      return {\n        ...core,\n        transaction: (tables, mode) => {\n          let tx: DBCoreTransaction & IDBTransaction & TXExpandos;\n          if (mode === 'readwrite') {\n            const mutationTables = tables\n              .filter((tbl) => db.cloud.schema?.[tbl]?.markedForSync)\n              .map((tbl) => getMutationTable(tbl));\n            tx = core.transaction(\n              [...tables, ...mutationTables],\n              mode\n            ) as DBCoreTransaction & IDBTransaction & TXExpandos;\n          } else {\n            tx = core.transaction(tables, mode) as DBCoreTransaction &\n              IDBTransaction &\n              TXExpandos;\n          }\n\n          if (mode === 'readwrite') {\n            // Give each transaction a globally unique id.\n            tx.txid = randomString(16);\n            // Introduce the concept of current user that lasts through the entire transaction.\n            // This is important because the tracked mutations must be connected to the user.\n            tx.currentUser = currentUserObservable.value;\n            outstandingTransactions.value.add(tx);\n            outstandingTransactions.next(outstandingTransactions.value);\n            const removeTransaction = () => {\n              tx.removeEventListener('complete', txComplete);\n              tx.removeEventListener('error', removeTransaction);\n              tx.removeEventListener('abort', removeTransaction);\n              outstandingTransactions.value.delete(tx);\n              outstandingTransactions.next(outstandingTransactions.value);\n            };\n            const txComplete = () => {\n              if (tx.mutationsAdded && db.cloud.options?.databaseUrl) {\n                if (db.cloud.usingServiceWorker) {\n                  console.debug('registering sync event');\n                  registerSyncEvent(db);\n                } else {\n                  db.localSyncEvent.next({});\n                }\n              }\n              removeTransaction();\n            };\n            tx.addEventListener('complete', txComplete);\n            tx.addEventListener('error', removeTransaction);\n            tx.addEventListener('abort', removeTransaction);\n          }\n          return tx;\n        },\n        table: (tableName) => {\n          const table = core.table(tableName);\n          if (/^\\$/.test(tableName)) {\n            if (tableName.endsWith('_mutations')) {\n              // In case application code adds items to ..._mutations tables,\n              // make sure to set the mutationsAdded flag on transaction.\n              // This is also done in mutateAndLog() as that function talks to a\n              // lower level DBCore and wouldn't be catched by this code.\n              return {\n                ...table,\n                mutate: (req) => {\n                  if (req.type === 'add' || req.type === 'put') {\n                    (\n                      req.trans as DBCoreTransaction & TXExpandos\n                    ).mutationsAdded = true;\n                  }\n                  return table.mutate(req);\n                }\n              };\n            } else if (tableName === '$logins') {\n              return {\n                ...table,\n                mutate: (req) => {\n                  console.debug('Mutating $logins table', req);\n                  return table\n                    .mutate(req)\n                    .then((res) => {\n                      console.debug('Mutating $logins');\n                      (\n                        req.trans as DBCoreTransaction & TXExpandos\n                      ).mutationsAdded = true;\n                      console.debug('$logins mutated');\n                      return res;\n                    })\n                    .catch((err) => {\n                      console.debug('Failed mutation $logins', err);\n                      return Promise.reject(err);\n                    });\n                }\n              };\n            } else {\n              return table;\n            }\n          }\n          const { schema } = table;\n          const mutsTable = mutTableMap.get(tableName)!;\n          return guardedTable({\n            ...table,\n            mutate: (req) => {\n              const trans = req.trans as DBCoreTransaction & TXExpandos;\n              if (!trans.txid) return table.mutate(req); // Upgrade transactions not guarded by us.\n              if (trans.disableChangeTracking) return table.mutate(req);\n              if (!trans.currentUser?.isLoggedIn) {\n                // Unauthorized user should not log mutations.\n                // Instead, after login all local data should be logged at once.\n                return table.mutate(req);\n              }\n\n              return req.type === 'deleteRange'\n                ? table\n                    // Query the actual keys (needed for server sending correct rollback to us)\n                    .query({\n                      query: { range: req.range, index: schema.primaryKey },\n                      trans: req.trans,\n                      values: false\n                    })\n                    // Do a delete request instead, but keep the criteria info for the server to execute\n                    .then((res) => {\n                      return mutateAndLog({\n                        type: 'delete',\n                        keys: res.result,\n                        trans: req.trans,\n                        criteria: { index: null, range: req.range }\n                      });\n                    })\n                : mutateAndLog(req);\n            }\n          });\n\n          function mutateAndLog(\n            req: DBCoreDeleteRequest | DBCoreAddRequest | DBCorePutRequest\n          ): Promise<DBCoreMutateResponse> {\n            const trans = req.trans as DBCoreTransaction & TXExpandos;\n            trans.mutationsAdded = true;\n            const {\n              txid,\n              currentUser: { userId }\n            } = trans;\n            const { type } = req;\n\n            return table.mutate(req).then((res) => {\n              const { numFailures: hasFailures, failures } = res;\n              let keys = type === 'delete' ? req.keys! : res.results!;\n              let values = 'values' in req ? req.values : [];\n              let changeSpecs = 'changeSpecs' in req ? req.changeSpecs! : [];\n              if (hasFailures) {\n                keys = keys.filter((_, idx) => !failures[idx]);\n                values = values.filter((_, idx) => !failures[idx]);\n                changeSpecs = changeSpecs.filter((_, idx) => !failures[idx]);\n              }\n              const ts = Date.now();\n\n              const mut: DBOperation =\n                req.type === 'delete'\n                  ? {\n                      type: 'delete',\n                      ts,\n                      keys,\n                      criteria: req.criteria,\n                      txid,\n                      userId\n                    }\n                  : req.type === 'add'\n                  ? {\n                      type: 'insert',\n                      ts,\n                      keys,\n                      txid,\n                      userId,\n                      values\n                    }\n                  : req.criteria && req.changeSpec\n                  ? {\n                      // Common changeSpec for all keys\n                      type: 'modify',\n                      ts,\n                      keys,\n                      criteria: req.criteria,\n                      changeSpec: req.changeSpec,\n                      txid,\n                      userId\n                    }\n                  : req.changeSpecs\n                  ? {\n                      // One changeSpec per key\n                      type: 'update',\n                      ts,\n                      keys,\n                      changeSpecs,\n                      txid,\n                      userId\n                    }\n                  : {\n                      type: 'upsert',\n                      ts,\n                      keys,\n                      values,\n                      txid,\n                      userId\n                    };\n              return keys.length > 0 || ('criteria' in req && req.criteria)\n                ? mutsTable\n                    .mutate({ type: 'add', trans, values: [mut] }) // Log entry\n                    .then(() => res) // Return original response\n                : res;\n            });\n          }\n        }\n      };\n    }\n  };\n}\n","import Dexie, { DbSchema } from 'dexie';\nimport { DEXIE_CLOUD_SCHEMA } from './db/DexieCloudDB';\nimport { generateTablePrefix } from './middlewares/createIdGenerationMiddleware';\n\nexport function overrideParseStoresSpec(origFunc: Function, dexie: Dexie) {\n  return function(stores: {[tableName: string]: string}, dbSchema: DbSchema) {\n    const storesClone = {\n      ...DEXIE_CLOUD_SCHEMA,\n      ...stores,\n    };\n    const cloudSchema = dexie.cloud.schema || (dexie.cloud.schema = {});\n    const allPrefixes = new Set<string>();\n    Object.keys(storesClone).forEach(tableName => {\n      const schemaSrc = storesClone[tableName];\n      const cloudTableSchema = cloudSchema[tableName] || (cloudSchema[tableName] = {});\n      if (schemaSrc != null) {\n        if (/^\\@/.test(schemaSrc)) {\n          storesClone[tableName] = storesClone[tableName].substr(1);\n          cloudTableSchema.generatedGlobalId = true;\n          cloudTableSchema.idPrefix = generateTablePrefix(tableName, allPrefixes);\n          allPrefixes.add(cloudTableSchema.idPrefix);\n        }\n        if (!/^\\$/.test(tableName)) {\n          storesClone[`$${tableName}_mutations`] = '++rev';\n          cloudTableSchema.markedForSync = true;\n        }\n        if (cloudTableSchema.deleted) {\n          cloudTableSchema.deleted = false;\n        }\n      } else {\n        cloudTableSchema.deleted = true;\n        cloudTableSchema.markedForSync = false;\n        storesClone[`$${tableName}_mutations`] = null;\n      }\n    });\n    const rv = origFunc.call(this, storesClone, dbSchema);\n    return rv;\n  }\n}\n","export const SECONDS = 1000;\nexport const MINUTES = 60 * SECONDS;\nexport const HOURS = 60 * MINUTES;\nexport const DAYS = 24 * HOURS;\nexport const WEEKS = 7 * DAYS;\n","import { randomString } from \"../helpers/randomString\";\n\nexport const myId = randomString(16);\n","import { liveQuery, Table } from 'dexie';\nimport { MINUTES, SECONDS } from '../helpers/date-constants';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { GuardedJob } from '../db/entities/GuardedJob';\nimport { myId } from './myId';\nimport { from } from 'rxjs';\nimport { filter, timeout } from 'rxjs/operators';\n\nconst GUARDED_JOB_HEARTBEAT = 1 * SECONDS;\nconst GUARDED_JOB_TIMEOUT = 1 * MINUTES;\n\nexport async function performGuardedJob(\n  db: DexieCloudDB,\n  jobName: string,\n  jobsTableName: string,\n  job: () => Promise<any>,\n  { awaitRemoteJob }: { awaitRemoteJob?: boolean } = {}\n): Promise<void> {\n  // Start working.\n  //\n  // Check if someone else is working on this already.\n  //\n  const jobsTable = db.table(jobsTableName) as Table<GuardedJob, string>;\n\n  async function aquireLock() {\n    const gotTheLock = await db.transaction('rw!', jobsTableName, async () => {\n      const currentWork = await jobsTable.get(jobName);\n      if (!currentWork) {\n        // No one else is working. Let's record that we are.\n        await jobsTable.add(\n          {\n            nodeId: myId,\n            started: new Date(),\n            heartbeat: new Date()\n          },\n          jobName\n        );\n        return true;\n      } else if (\n        currentWork.heartbeat.getTime() <\n        Date.now() - GUARDED_JOB_TIMEOUT\n      ) {\n        console.warn(\n          `Latest ${jobName} worker seem to have died.\\n`,\n          `The dead job started:`,\n          currentWork.started,\n          `\\n`,\n          `Last heart beat was:`,\n          currentWork.heartbeat,\n          '\\n',\n          `We're now taking over!`\n        );\n        // Now, take over!\n        await jobsTable.put(\n          {\n            nodeId: myId,\n            started: new Date(),\n            heartbeat: new Date()\n          },\n          jobName\n        );\n        return true;\n      }\n      return false;\n    });\n\n    if (gotTheLock) return true;\n\n    // Someone else took the job.\n    if (awaitRemoteJob) {\n      try {\n        const jobDoneObservable = from(\n          liveQuery(() => jobsTable.get(jobName))\n        ).pipe(\n          timeout(GUARDED_JOB_TIMEOUT),\n          filter((job) => !job)\n        ); // Wait til job is not there anymore.\n        await jobDoneObservable.toPromise();\n        return false;\n      } catch (err) {\n        if (err.name !== 'TimeoutError') {\n          throw err;\n        }\n        // Timeout stopped us! Try aquire the lock now.\n        // It will likely succeed this time unless\n        // another client took it.\n        return await aquireLock();\n      }\n    }\n    return false;\n  }\n\n  if (await aquireLock()) {\n    // We own the lock entry and can do our job undisturbed.\n    // We're not within a transaction, but these type of locks\n    // spans over transactions.\n\n    // Start our heart beat during the job.\n    // Use setInterval to make sure we are updating heartbeat even during long-lived fetch calls.\n    const heartbeat = setInterval(() => {\n      jobsTable.update(\n        jobName,\n        (job: GuardedJob) => job.nodeId === myId && (job.heartbeat = new Date())\n      );\n    }, GUARDED_JOB_HEARTBEAT);\n\n    try {\n      return await job();\n    } finally {\n      // Stop heartbeat\n      clearInterval(heartbeat);\n      // Remove the persisted job state:\n      await db.transaction('rw!', jobsTableName, async () => {\n        const currentWork = await jobsTable.get(jobName);\n        if (currentWork && currentWork.nodeId === myId) {\n          jobsTable.delete(jobName);\n        }\n      });\n    }\n  }\n}\n","import { IndexableType, Table } from \"dexie\";\nimport { DexieCloudDB } from \"../db/DexieCloudDB\";\nimport { EntityCommon } from \"../db/entities/EntityCommon\";\n\nexport function getSyncableTables(db: DexieCloudDB): Table<EntityCommon>[] {\n  return Object.entries(db.cloud.schema || {})\n    .filter(([, { markedForSync }]) => markedForSync)\n    .map(([tbl]) => db.table(tbl));\n}\n","import { DexieCloudDB } from \"../db/DexieCloudDB\";\nimport { PersistedSyncState } from \"../db/entities/PersistedSyncState\";\nimport { UserLogin } from \"../db/entities/UserLogin\";\nimport { randomString } from \"../helpers/randomString\";\nimport { EntityCommon } from \"../db/entities/EntityCommon\";\nimport { Table } from \"dexie\";\nimport { DBInsertOperation, DBOperationsSet, DexieCloudSchema, isValidAtID, isValidSyncableID } from \"dexie-cloud-common\";\n\nexport async function listSyncifiedChanges(\n  tablesToSyncify: Table<EntityCommon>[],\n  currentUser: UserLogin,\n  schema: DexieCloudSchema,\n  alreadySyncedRealms?: string[]\n): Promise<DBOperationsSet> {\n  if (currentUser.isLoggedIn) {\n    if (tablesToSyncify.length > 0) {\n      const ignoredRealms = new Set(alreadySyncedRealms || []);\n      const inserts = await Promise.all(\n        tablesToSyncify.map(async (table) => {\n          const { extractKey } = table.core.schema.primaryKey;\n          if (!extractKey) return { table: table.name, muts: [] }; // Outbound tables are not synced.\n\n          const dexieCloudTableSchema = schema[table.name];\n          const query = dexieCloudTableSchema?.generatedGlobalId\n            ? table.filter(\n                (item) => !ignoredRealms.has(item.realmId || \"\") && isValidSyncableID(extractKey(item))\n              )\n            : table.filter(\n                (item) => !ignoredRealms.has(item.realmId || \"\") && isValidAtID(extractKey(item), dexieCloudTableSchema?.idPrefix)\n              );\n          const unsyncedObjects = await query.toArray();\n          if (unsyncedObjects.length > 0) {\n            const mut: DBInsertOperation = {\n              type: \"insert\",\n              values: unsyncedObjects,\n              keys: unsyncedObjects.map(extractKey),\n              userId: currentUser.userId,\n            };\n            return {\n              table: table.name,\n              muts: [mut],\n            };\n          } else {\n            return {\n              table: table.name,\n              muts: []\n            }\n          }\n        })\n      );\n      return inserts.filter(op => op.muts.length > 0);\n    }\n  }\n  return [];\n}\n","import { getSyncableTables } from \"../helpers/getSyncableTables\";\nimport { DexieCloudDB } from \"../db/DexieCloudDB\";\nimport { PersistedSyncState } from \"../db/entities/PersistedSyncState\";\n\nexport function getTablesToSyncify(db: DexieCloudDB, syncState: PersistedSyncState | undefined) {\n  const syncedTables = syncState?.syncedTables || [];\n  const syncableTables = getSyncableTables(db);\n  const tablesToSyncify = syncableTables.filter(\n    (tbl) => !syncedTables.includes(tbl.name)\n  );\n  return tablesToSyncify;\n}\n","\n\nexport function getTableFromMutationTable(mutationTable: string) {\n  const tableName = /^\\$(.*)_mutations$/.exec(mutationTable)?.[1];\n  if (!tableName) throw new Error(`Given mutationTable ${mutationTable} is not correct`);\n  return tableName;\n}\n","import { Table } from \"dexie\";\nimport { getTableFromMutationTable } from \"../helpers/getTableFromMutationTable\";\nimport { DexieCloudDB } from \"../db/DexieCloudDB\";\nimport { DBOperation, DBOperationsSet } from \"dexie-cloud-common\";\n\nexport async function listClientChanges(\n  mutationTables: Table[],\n  db: DexieCloudDB,\n  { since = {} as {[table: string]: number}, limit = Infinity } = {}): Promise<DBOperationsSet> {\n  const allMutsOnTables = await Promise.all(\n    mutationTables.map(async (mutationTable) => {\n      const tableName = getTableFromMutationTable(mutationTable.name);\n      const lastRevision = since[tableName];\n\n      let query = lastRevision\n        ? mutationTable.where(\"rev\").above(lastRevision)\n        : mutationTable;\n\n      if (limit < Infinity) query = query.limit(limit);\n      \n      const muts: DBOperation[] = await query.toArray();\n\n      //const objTable = db.table(tableName);\n      /*for (const mut of muts) {\n        if (mut.type === \"insert\" || mut.type === \"upsert\") {\n          mut.values = await objTable.bulkGet(mut.keys);\n        }\n      }*/\n      return {\n        table: tableName,\n        muts,\n      };\n    })\n  );\n\n  // Filter out those tables that doesn't have any mutations:\n  return allMutsOnTables.filter(({ muts }) => muts.length > 0);\n}\n","const { toString: toStr } = {};\nfunction getToStringTag(val) {\n    return toStr.call(val).slice(8, -1);\n}\nexport function escapeDollarProps(value) {\n    const keys = Object.keys(value);\n    let dollarKeys = null;\n    for (let i = 0, l = keys.length; i < l; ++i) {\n        if (keys[i][0] === \"$\") {\n            dollarKeys = dollarKeys || [];\n            dollarKeys.push(keys[i]);\n        }\n    }\n    if (!dollarKeys)\n        return value;\n    const clone = { ...value };\n    for (const k of dollarKeys) {\n        delete clone[k];\n        clone[\"$\" + k] = value[k];\n    }\n    return clone;\n}\nconst ObjectDef = {\n    replace: escapeDollarProps,\n};\nexport function TypesonSimplified(...typeDefsInputs) {\n    const typeDefs = typeDefsInputs.reduce((p, c) => ({ ...p, ...c }), typeDefsInputs.reduce((p, c) => ({ ...c, ...p }), {}));\n    const protoMap = new WeakMap();\n    return {\n        stringify(value, alternateChannel, space) {\n            const json = JSON.stringify(value, function (key) {\n                const realVal = this[key];\n                const typeDef = getTypeDef(realVal);\n                return typeDef\n                    ? typeDef.replace(realVal, alternateChannel, typeDefs)\n                    : realVal;\n            }, space);\n            return json;\n        },\n        parse(tson, alternateChannel) {\n            let parent = null;\n            let unescapeParentKeys = [];\n            return JSON.parse(tson, function (key, value) {\n                //\n                // Parent Part\n                //\n                const type = value === null || value === void 0 ? void 0 : value.$t;\n                if (type) {\n                    const typeDef = typeDefs[type];\n                    value = typeDef\n                        ? typeDef.revive(value, alternateChannel, typeDefs)\n                        : value;\n                }\n                if (value === parent) {\n                    // Do what the kid told us to\n                    if (unescapeParentKeys.length > 0) {\n                        // Unescape dollar props\n                        value = { ...value };\n                        for (const k of unescapeParentKeys) {\n                            value[k.substr(1)] = value[k];\n                            delete value[k];\n                        }\n                    }\n                    unescapeParentKeys = [];\n                    return value;\n                }\n                //\n                // Child part\n                //\n                if (key[0] === \"$\" && key !== \"$t\") {\n                    parent = this;\n                    unescapeParentKeys.push(key);\n                }\n                return value;\n            });\n        },\n    };\n    function getTypeDef(realVal) {\n        const type = typeof realVal;\n        switch (typeof realVal) {\n            case \"object\":\n            case \"function\": {\n                // \"object\", \"function\", null\n                if (realVal === null)\n                    return null;\n                const proto = Object.getPrototypeOf(realVal);\n                if (!proto)\n                    return ObjectDef;\n                let typeDef = protoMap.get(proto);\n                if (typeDef !== undefined)\n                    return typeDef; // Null counts to! So the caching of Array.prototype also counts.\n                const toStringTag = getToStringTag(realVal);\n                const entry = Object.entries(typeDefs).find(([typeName, typeDef]) => { var _a, _b; return (_b = (_a = typeDef === null || typeDef === void 0 ? void 0 : typeDef.test) === null || _a === void 0 ? void 0 : _a.call(typeDef, realVal, toStringTag)) !== null && _b !== void 0 ? _b : typeName === toStringTag; });\n                typeDef = entry === null || entry === void 0 ? void 0 : entry[1];\n                if (!typeDef) {\n                    typeDef = Array.isArray(realVal)\n                        ? null\n                        : typeof realVal === \"function\"\n                            ? typeDefs.function || null\n                            : ObjectDef;\n                }\n                protoMap.set(proto, typeDef);\n                return typeDef;\n            }\n            default:\n                return typeDefs[type];\n        }\n    }\n}\n","export const BisonBinaryTypes = {\n    Blob: {\n        test: (blob, toStringTag) => toStringTag === \"Blob\",\n        replace: (blob, altChannel) => {\n            const i = altChannel.length;\n            altChannel.push(blob);\n            return {\n                $t: \"Blob\",\n                mimeType: blob.type,\n                i,\n            };\n        },\n        revive: ({ i, mimeType }, altChannel) => new Blob([altChannel[i]], { type: mimeType }),\n    },\n};\n","export default {\n    number: {\n        replace: (num) => {\n            switch (true) {\n                case isNaN(num):\n                    return { $t: \"number\", v: \"NaN\" };\n                case num === Infinity:\n                    return { $t: \"number\", v: \"Infinity\" };\n                case num === -Infinity:\n                    return { $t: \"number\", v: \"-Infinity\" };\n                default:\n                    return num;\n            }\n        },\n        revive: ({ v }) => Number(v),\n    },\n};\n","const bigIntDef = {\n    bigint: {\n        replace: (realVal) => {\n            return { $t: \"bigint\", v: \"\" + realVal };\n        },\n        revive: (obj) => BigInt(obj.v),\n    },\n};\nexport default bigIntDef;\n","export default {\n    Date: {\n        replace: (date) => ({\n            $t: \"Date\",\n            v: isNaN(date.getTime()) ? \"NaN\" : date.toISOString(),\n        }),\n        revive: ({ v }) => new Date(v === \"NaN\" ? NaN : Date.parse(v)),\n    },\n};\n","export default {\n    Set: {\n        replace: (set) => ({\n            $t: \"Set\",\n            v: Array.from(set.entries()),\n        }),\n        revive: ({ v }) => new Set(v),\n    },\n};\n","export default {\n    Map: {\n        replace: (map) => ({\n            $t: \"Map\",\n            v: Array.from(map.entries()),\n        }),\n        revive: ({ v }) => new Map(v),\n    },\n};\n","export const _global = typeof globalThis !== \"undefined\"\n    ? globalThis\n    : typeof self !== \"undefined\"\n        ? self\n        : typeof global === \"undefined\"\n            ? global\n            : this;\n","import { _global } from \"../../common/_global.js\";\nexport default [\n    \"Int8Array\",\n    \"Uint8Array\",\n    \"Uint8ClampedArray\",\n    \"Int16Array\",\n    \"Uint16Array\",\n    \"Int32Array\",\n    \"Uint32Array\",\n    \"Float32Array\",\n    \"Float64Array\",\n    \"DataView\",\n    \"BigInt64Array\",\n    \"BigUint64Array\",\n].reduce((specs, typeName) => ({\n    ...specs,\n    [typeName]: {\n        // Replace passes the the typed array into $t, buffer so that\n        // the ArrayBuffer typedef takes care of further handling of the buffer:\n        // {$t:\"Uint8Array\",buffer:{$t:\"ArrayBuffer\",idx:0}}\n        // CHANGED ABOVE! Now shortcutting that for more sparse format of the typed arrays\n        // to contain the b64 property directly.\n        replace: (a, _, typeDefs) => {\n            const result = {\n                $t: typeName,\n                v: typeDefs.ArrayBuffer.replace(a.byteOffset === 0 && a.byteLength === a.buffer.byteLength\n                    ? a.buffer\n                    : a.buffer.slice(a.byteOffset, a.byteOffset + a.byteLength), _, typeDefs).v,\n            };\n            return result;\n        },\n        revive: ({ v }, _, typeDefs) => {\n            const TypedArray = _global[typeName];\n            return (TypedArray &&\n                new TypedArray(typeDefs.ArrayBuffer.revive({ v }, _, typeDefs)));\n        },\n    },\n}), {});\n","import { b64LexDecode, b64LexEncode } from \"../../common/b64lex.js\";\nexport default {\n    ArrayBuffer: {\n        replace: (ab) => ({\n            $t: \"ArrayBuffer\",\n            v: b64LexEncode(ab),\n        }),\n        revive: ({ v }) => {\n            const ba = b64LexDecode(v);\n            return ba.buffer.byteLength === ba.byteLength\n                ? ba.buffer\n                : ba.buffer.slice(ba.byteOffset, ba.byteOffset + ba.byteLength);\n        },\n    },\n};\n","export class FakeBlob {\n    constructor(buf, type) {\n        this.buf = buf;\n        this.type = type;\n    }\n}\n","export function readBlobSync(b) {\n    const req = new XMLHttpRequest();\n    req.overrideMimeType(\"text/plain; charset=x-user-defined\");\n    req.open(\"GET\", URL.createObjectURL(b), false); // Sync\n    req.send();\n    if (req.status !== 200 && req.status !== 0) {\n        throw new Error(\"Bad Blob access: \" + req.status);\n    }\n    return req.responseText;\n}\n","export function string2ArrayBuffer(str) {\n    const array = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; ++i) {\n        array[i] = str.charCodeAt(i); // & 0xff;\n    }\n    return array.buffer;\n}\nexport function arrayBuffer2String(buf) {\n    // TODO: Optimize\n    return new Uint8Array(buf).reduce((s, byte) => s + String.fromCharCode(byte), \"\");\n}\n","import { b64decode, b64encode } from \"../../common/base64.js\";\nimport { FakeBlob } from \"../FakeBlob.js\";\nimport { readBlobSync } from \"../readBlobSync.js\";\nimport { string2ArrayBuffer } from \"../string2arraybuffer.js\";\nexport default {\n    Blob: {\n        test: (blob, toStringTag) => toStringTag === \"Blob\" || blob instanceof FakeBlob,\n        replace: (blob) => ({\n            $t: \"Blob\",\n            v: blob instanceof FakeBlob\n                ? b64encode(blob.buf)\n                : b64encode(string2ArrayBuffer(readBlobSync(blob))),\n            type: blob.type,\n        }),\n        revive: ({ type, v }) => {\n            const ab = b64decode(v);\n            return typeof Blob !== undefined\n                ? new Blob([ab])\n                : new FakeBlob(ab.buffer, type);\n        },\n    },\n};\n","import numberDef from \"../types/number.js\";\nimport bigintDef from \"../types/bigint.js\";\nimport DateDef from \"../types/Date.js\";\nimport SetDef from \"../types/Set.js\";\nimport MapDef from \"../types/Map.js\";\nimport TypedArraysDefs from \"../types/TypedArray.js\";\nimport ArrayBufferDef from \"../types/ArrayBuffer.js\";\nimport BlobDef from \"../types/Blob.js\";\nconst builtin = {\n    ...numberDef,\n    ...bigintDef,\n    ...DateDef,\n    ...SetDef,\n    ...MapDef,\n    ...TypedArraysDefs,\n    ...ArrayBufferDef,\n    ...BlobDef,\n};\nexport default builtin;\n","import { BisonBinaryTypes } from \"./BisonBinaryTypes.js\";\nimport builtin from \"./presets/builtin.js\";\nimport { TypesonSimplified } from \"./TypesonSimplified.js\";\nexport function Bison(...typeDefsInputs) {\n    const tson = TypesonSimplified(builtin, BisonBinaryTypes, ...typeDefsInputs);\n    return {\n        toBinary(value) {\n            const [blob, json] = this.stringify(value);\n            const lenBuf = new ArrayBuffer(4);\n            new DataView(lenBuf).setUint32(0, blob.size);\n            return new Blob([lenBuf, blob, json]);\n        },\n        stringify(value) {\n            const binaries = [];\n            const json = tson.stringify(value, binaries);\n            const blob = new Blob(binaries.map((b) => {\n                const lenBuf = new ArrayBuffer(4);\n                new DataView(lenBuf).setUint32(0, \"byteLength\" in b ? b.byteLength : b.size);\n                return new Blob([lenBuf, b]);\n            }));\n            return [blob, json];\n        },\n        async parse(json, binData) {\n            let pos = 0;\n            const arrayBuffers = [];\n            const buf = await readBlobBinary(binData);\n            const view = new DataView(buf);\n            while (pos < buf.byteLength) {\n                const len = view.getUint32(pos);\n                pos += 4;\n                const ab = buf.slice(pos, pos + len);\n                pos += len;\n                arrayBuffers.push(ab);\n            }\n            return tson.parse(json, arrayBuffers);\n        },\n        async fromBinary(blob) {\n            const len = new DataView(await readBlobBinary(blob.slice(0, 4))).getUint32(0);\n            const binData = blob.slice(4, len + 4);\n            const json = await readBlob(blob.slice(len + 4));\n            return await this.parse(json, binData);\n        },\n    };\n}\nexport function readBlob(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onabort = (ev) => reject(new Error(\"file read aborted\"));\n        reader.onerror = (ev) => reject(ev.target.error);\n        reader.onload = (ev) => resolve(ev.target.result);\n        reader.readAsText(blob);\n    });\n}\nexport function readBlobBinary(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onabort = (ev) => reject(new Error(\"file read aborted\"));\n        reader.onerror = (ev) => reject(ev.target.error);\n        reader.onload = (ev) => resolve(ev.target.result);\n        reader.readAsArrayBuffer(blob);\n    });\n}\n","/** The undefined type is not part of builtin but can be manually added.\n * The reason for supporting undefined is if the following object should be revived correctly:\n *\n *    {foo: undefined}\n *\n * Without including this typedef, the revived object would just be {}.\n * If including this typedef, the revived object would be {foo: undefined}.\n */\nexport default {\n    undefined: {\n        replace: () => {\n            $t: \"undefined\";\n        },\n        revive: () => undefined,\n    },\n};\n","import { TypesonSimplified } from 'dreambase-library/dist/typeson-simplified/TypesonSimplified';\nimport { Bison } from \"dreambase-library/dist/typeson-simplified/Bison\";\nimport undefinedDef from 'dreambase-library/dist/typeson-simplified/types/undefined.js';\nimport tsonBuiltinDefs from 'dreambase-library/dist/typeson-simplified/presets/builtin.js';\nimport { TypeDefSet } from 'dreambase-library/dist/typeson-simplified/TypeDefSet';\n\n// Since server revisions are stored in bigints, we need to handle clients without\n// bigint support to not fail when serverRevision is passed over to client.\n// We need to not fail when reviving it and we need to somehow store the information.\n// Since the revived version will later on be put into indexedDB we have another\n// issue: When reading it back from indexedDB we will get a poco object that we\n// cannot replace correctly when sending it to server. So we will also need\n// to do an explicit workaround in the protocol where a bigint is supported.\n// The workaround should be there regardless if browser supports BigInt or not, because\n// the serverRev might have been stored in IDB before the browser was upgraded to support bigint.\n//\n// if (typeof serverRev.rev !== \"bigint\")\n//   if (hasBigIntSupport)\n//     serverRev.rev = bigIntDef.bigint.revive(server.rev)\n//   else\n//     serverRev.rev = new FakeBigInt(server.rev)\nexport const hasBigIntSupport = typeof BigInt !== 'undefined';\n\nexport class FakeBigInt {\n  v: string;\n  static compare(a: bigint | FakeBigInt, b:bigint | FakeBigInt) {\n    if (typeof a === \"bigint\") return a < b ? -1 : a > b ? 1 : 0;\n    if (typeof b === \"bigint\") throw new TypeError(\"Can't compare real bigint with FakeBigInt\");\n    // Here, we can only compare in best effort.\n    return Number(a) < Number(b) ? -1 : Number(a) > Number(b) ? 1 : 0;\n  }\n  toString() {\n    return this.v;\n  }\n  constructor(value: string) {\n    this.v = value;\n  }\n}\n\nconst defs: TypeDefSet = {\n  ...undefinedDef,\n  ...(hasBigIntSupport\n    ? {}\n    : {\n        bigint: {\n          test: (val: any) => val instanceof FakeBigInt,\n          replace: (fakeBigInt: any) => {\n            return {\n              $t: 'bigint',\n              ...fakeBigInt\n            };\n          },\n          revive: ({\n            v,\n          }: {\n            $t: 'bigint';\n            v: string;\n          }) => new FakeBigInt(v) as any as bigint\n        }\n      })\n};\n\nexport const TSON = TypesonSimplified(tsonBuiltinDefs, defs);\n\nexport const BISON = Bison(defs);\n","import { DexieCloudDB } from '../db/DexieCloudDB';\nimport { PersistedSyncState } from '../db/entities/PersistedSyncState';\nimport { loadAccessToken } from '../authentication/authenticate';\nimport { BISON, TSON } from '../TSON';\nimport { getSyncableTables } from '../helpers/getSyncableTables';\nimport { BaseRevisionMapEntry } from '../db/entities/BaseRevisionMapEntry';\nimport { HttpError } from '../errors/HttpError';\nimport {\n  DBOperationsSet,\n  DexieCloudSchema,\n  SyncRequest,\n  SyncResponse\n} from 'dexie-cloud-common';\n//import {BisonWebStreamReader} from \"dreambase-library/dist/typeson-simplified/BisonWebStreamReader\";\n\nexport async function syncWithServer(\n  changes: DBOperationsSet,\n  syncState: PersistedSyncState | undefined,\n  baseRevs: BaseRevisionMapEntry[],\n  db: DexieCloudDB,\n  databaseUrl: string,\n  schema: DexieCloudSchema | null\n): Promise<SyncResponse> {\n  //\n  // Push changes to server using fetch\n  //\n  const headers: HeadersInit = {\n    Accept: 'application/json, application/x-bison, application/x-bison-stream',\n    'Content-Type': 'application/tson'\n  };\n  const accessToken = await loadAccessToken(db);\n  if (accessToken) {\n    headers.Authorization = `Bearer ${accessToken}`;\n  }\n\n  const syncRequest: SyncRequest = {\n    dbID: syncState?.remoteDbId,\n    schema: schema || {},\n    lastPull: syncState ? {\n      serverRevision: syncState.serverRevision!,\n      realms: syncState.realms,\n      inviteRealms: syncState.inviteRealms\n    } : undefined,\n    baseRevs,\n    //baseRevisions: syncState?.baseRevisions || [],\n    changes\n  };\n  console.debug(\"Sync request\", syncRequest);\n  db.syncStateChangedEvent.next({\n    phase: 'pushing',\n  });\n  const res = await fetch(`${databaseUrl}/sync`, {\n    method: 'post',\n    headers,\n    body: TSON.stringify(syncRequest)\n  });\n  //const contentLength = Number(res.headers.get('content-length'));\n  db.syncStateChangedEvent.next({\n    phase: 'pulling'\n  });\n\n  if (!res.ok) {\n    throw new HttpError(res);\n  }\n\n  switch (res.headers.get('content-type')) {\n    case 'application/x-bison':\n      return BISON.fromBinary(await res.blob());\n    case 'application/x-bison-stream': //return BisonWebStreamReader(BISON, res);\n    default:\n    case 'application/json': {\n      const text = await res.text();\n      const syncRes = TSON.parse(text);\n      return syncRes;\n    }\n  }\n}\n","import { Table } from \"dexie\";\nimport { EntityCommon } from \"../db/entities/EntityCommon\";\nimport { UserLogin } from \"../db/entities/UserLogin\";\nimport { Member } from \"../db/entities/Member\";\nimport { UNAUTHORIZED_USER } from \"../authentication/UNAUTHORIZED_USER\";\nimport { Realm } from \"../db/entities/Realm\";\n\nexport async function modifyLocalObjectsWithNewUserId(\n  syncifiedTables: Table<EntityCommon>[],\n  currentUser: UserLogin,\n  alreadySyncedRealms?: string[]) {\n  const ignoredRealms = new Set(alreadySyncedRealms || []);\n  for (const table of syncifiedTables) {\n    if (table.name === \"members\") {\n      // members\n      await table.toCollection().modify((member: Member) => {\n        if (!ignoredRealms.has(member.realmId) && member.userId === UNAUTHORIZED_USER.userId) {\n          member.userId = currentUser.userId;\n        }\n      });\n    } else if (table.name === \"roles\") {\n      // roles\n      // No changes needed.\n    } else if (table.name === \"realms\") {\n      // realms\n      await table.toCollection().modify((realm: Realm) => {\n        if (!ignoredRealms.has(realm.realmId) && !realm.owner || realm.owner === UNAUTHORIZED_USER.userId) {\n          realm.owner = currentUser.userId;\n        }\n      });\n    } else {\n      // application entities\n      await table.toCollection().modify((obj) => {\n        if (!obj.realmId || !ignoredRealms.has(obj.realmId)) {\n          if (!obj.owner || obj.owner === UNAUTHORIZED_USER.userId)\n            obj.owner = currentUser.userId;\n          if (!obj.realmId || obj.realmId === UNAUTHORIZED_USER.userId) {\n            obj.realmId = currentUser.userId;\n          }\n        }\n      });\n    }\n  }\n}\n","import Dexie, { Table } from 'dexie';\n\nexport async function bulkUpdate(\n  table: Table,\n  keys: any[],\n  changeSpecs: { [keyPath: string]: any }[]\n) {\n  const objs = await table.bulkGet(keys);\n  const resultKeys: any[] = [];\n  const resultObjs: any[] = [];\n  keys.forEach((key, idx) => {\n    const obj = objs[idx];\n    if (obj) {\n      for (const [keyPath, value] of Object.entries(changeSpecs[idx])) {\n        if (keyPath === table.schema.primKey.keyPath) {\n          throw new Error(`Cannot change primary key`);\n        }\n        Dexie.setByKeyPath(obj, keyPath, value);\n      }\n      resultKeys.push(key);\n      resultObjs.push(obj);\n    }\n  });\n  await (table.schema.primKey.keyPath == null\n    ? table.bulkPut(resultObjs, resultKeys)\n    : table.bulkPut(resultObjs));\n}\n","import Dexie from \"dexie\";\n\nexport interface CancelToken {\n  cancelled: boolean;\n}\n\nexport function throwIfCancelled(cancelToken?: CancelToken) {\n  if (cancelToken?.cancelled) throw new Dexie.AbortError(`Operation was cancelled`);\n}\n","/* Need this because navigator.onLine seems to say \"false\" when it is actually online.\n  This function relies initially on navigator.onLine but then uses online and offline events\n  which seem to be more reliable.\n*/\nexport let isOnline = navigator.onLine;\nself.addEventListener('online', ()=>isOnline = true);\nself.addEventListener('offline', ()=>isOnline = false);\n","import { getMutationTable } from '../helpers/getMutationTable';\nimport { getSyncableTables } from '../helpers/getSyncableTables';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { listSyncifiedChanges } from './listSyncifiedChanges';\nimport { getTablesToSyncify } from './getTablesToSyncify';\nimport { listClientChanges } from './listClientChanges';\nimport { syncWithServer } from './syncWithServer';\nimport Dexie from 'dexie';\nimport { modifyLocalObjectsWithNewUserId } from './modifyLocalObjectsWithNewUserId';\nimport { bulkUpdate } from '../helpers/bulkUpdate';\nimport { throwIfCancelled } from '../helpers/CancelToken';\nimport { DexieCloudOptions } from '../DexieCloudOptions';\nimport { BaseRevisionMapEntry } from '../db/entities/BaseRevisionMapEntry';\nimport { getTableFromMutationTable } from '../helpers/getTableFromMutationTable';\nimport {\n  applyOperations,\n  DBKeyMutationSet,\n  DBOperationsSet,\n  DexieCloudSchema,\n  subtractChanges,\n  SyncResponse,\n  toDBOperationSet,\n} from 'dexie-cloud-common';\nimport { PersistedSyncState } from '../db/entities/PersistedSyncState';\nimport { isOnline } from './isOnline';\n\nexport const isSyncing = new WeakSet<DexieCloudDB>();\nexport const CURRENT_SYNC_WORKER = 'currentSyncWorker';\n\n/*\n  TODO:\n    1. V: Rätta flödet och gör det persistent mellan transaktioner\n    2. Sync-requestet ska autenticera sig med nuvarande användare.\n       MEN:\n        Vissa medskickade operationer kan vara gjorda av annan användare.\n        Därför: Om några av client-changes är andra användare, så måste de användarnas\n        tokens följa med som extra parameter till fetch-requestet.\n        Servern skall då validera och genomföra dessa operationer baserat på alternativt token.\n        Kanske kan vi skita i det flödet just nu och hindra att det uppstår istället.\n        Hur? Jo, genom:\n          1. Användare är ANONYMOUS\n          2. Data laddas ned.\n          3. Data modifieras.\n          4. Användare loggar in.\n          5. Sync: Några inledande requests är ANONYMOUS men autenticeras som användaren.\n\n    X: Se till att vi förhandlar initialt sync state eller uppdaterat sync state (tabell aliases etc)\n\n    Y: Använd Bison hjälpare för streamad BISON?\n\n*/\n\nexport interface SyncOptions {\n  isInitialSync?: boolean;\n  cancelToken?: { cancelled: boolean };\n  justCheckIfNeeded?: boolean;\n  retryImmediatelyOnFetchError?: boolean;\n}\n\nexport function sync(\n  db: DexieCloudDB,\n  options: DexieCloudOptions,\n  schema: DexieCloudSchema,\n  syncOptions?: SyncOptions\n): Promise<boolean> {\n  return _sync\n    .apply(this, arguments)\n    .then(() => {\n      db.syncStateChangedEvent.next({\n        phase: 'in-sync',\n      });\n    })\n    .catch(async (error: any) => {\n      console.debug('Error from _sync', {\n        isOnline,\n        syncOptions,\n        error,\n      });\n      if (\n        isOnline &&\n        syncOptions?.retryImmediatelyOnFetchError &&\n        error?.name === 'TypeError' &&\n        /fetch/.test(error?.message)\n      ) {\n        db.syncStateChangedEvent.next({\n          phase: 'error',\n          error\n        });\n        // Retry again in 500 ms but if it fails again, don't retry.\n        await new Promise((resolve) => setTimeout(resolve, 500));\n        return await sync(db, options, schema, {\n          ...syncOptions,\n          retryImmediatelyOnFetchError: false,\n        });\n      }\n      // Make sure that no matter whether sync() explodes or not,\n      // always update the timestamp. Also store the error.\n      await db.$syncState.update('syncState', {\n        timestamp: new Date(),\n        error: '' + error,\n      });\n      db.syncStateChangedEvent.next({\n        phase: isOnline ? 'error' : 'offline',\n        error\n      });\n      return Promise.reject(error);\n    });\n}\n\nasync function _sync(\n  db: DexieCloudDB,\n  options: DexieCloudOptions,\n  schema: DexieCloudSchema,\n  { isInitialSync, cancelToken, justCheckIfNeeded }: SyncOptions = {\n    isInitialSync: false,\n  }\n): Promise<boolean> {\n  if (!justCheckIfNeeded) {\n    console.debug('SYNC STARTED', { isInitialSync });\n  }\n  if (!db.cloud.options?.databaseUrl)\n    throw new Error(\n      `Internal error: sync must not be called when no databaseUrl is configured`\n    );\n  const { databaseUrl } = options;\n  const currentUser = await db.getCurrentUser(); // Keep same value across entire sync flow:\n  const tablesToSync = currentUser.isLoggedIn ? getSyncableTables(db) : [];\n\n  const mutationTables = tablesToSync.map((tbl) =>\n    db.table(getMutationTable(tbl.name))\n  );\n\n  // If this is not the initial sync,\n  // go through tables that were previously not synced but should now be according to\n  // logged in state and the sync table whitelist in db.cloud.options.\n  //\n  // Prepare for syncification by modifying locally unauthorized objects:\n  //\n  const persistedSyncState = await db.getPersistedSyncState();\n  const tablesToSyncify =\n    !isInitialSync && currentUser.isLoggedIn\n      ? getTablesToSyncify(db, persistedSyncState)\n      : [];\n  throwIfCancelled(cancelToken);\n  const doSyncify = tablesToSyncify.length > 0;\n\n  if (doSyncify) {\n    if (justCheckIfNeeded) return true;\n    console.debug('sync doSyncify is true');\n    await db.transaction('rw', tablesToSyncify, async (tx) => {\n      // @ts-ignore\n      tx.idbtrans.disableChangeTracking = true;\n      // @ts-ignore\n      tx.idbtrans.disableAccessControl = true; // TODO: Take care of this flag in access control middleware!\n      await modifyLocalObjectsWithNewUserId(\n        tablesToSyncify,\n        currentUser,\n        persistedSyncState?.realms\n      );\n    });\n    throwIfCancelled(cancelToken);\n  }\n  //\n  // List changes to sync\n  //\n  const [clientChangeSet, syncState, baseRevs] = await db.transaction(\n    'r',\n    db.tables,\n    async () => {\n      const syncState = await db.getPersistedSyncState();\n      const baseRevs = await db.$baseRevs.toArray();\n      let clientChanges = await listClientChanges(mutationTables, db);\n      throwIfCancelled(cancelToken);\n      if (doSyncify) {\n        const syncificationInserts = await listSyncifiedChanges(\n          tablesToSyncify,\n          currentUser,\n          schema!,\n          persistedSyncState?.realms\n        );\n        throwIfCancelled(cancelToken);\n        clientChanges = clientChanges.concat(syncificationInserts);\n        return [clientChanges, syncState, baseRevs];\n      }\n      return [clientChanges, syncState, baseRevs];\n    }\n  );\n\n  if (justCheckIfNeeded) {\n    const syncIsNeeded = clientChangeSet.some((set) =>\n      set.muts.some((mut) => mut.keys.length > 0)\n    );\n    console.debug('Sync is needed:', syncIsNeeded);\n    return syncIsNeeded;\n  }\n\n  const latestRevisions = getLatestRevisionsPerTable(\n    clientChangeSet,\n    syncState?.latestRevisions\n  );\n\n  //\n  // Push changes to server\n  //\n  throwIfCancelled(cancelToken);\n  const res = await syncWithServer(\n    clientChangeSet,\n    syncState,\n    baseRevs,\n    db,\n    databaseUrl,\n    schema\n  );\n  console.debug('Sync response', res);\n\n  //\n  // Apply changes locally and clear old change entries:\n  //\n  const done = await db.transaction('rw', db.tables, async (tx) => {\n    // @ts-ignore\n    tx.idbtrans.disableChangeTracking = true;\n    // @ts-ignore\n    tx.idbtrans.disableAccessControl = true; // TODO: Take care of this flag in access control middleware!\n\n    // Update db.cloud.schema from server response.\n    // Local schema MAY include a subset of tables, so do not force all tables into local schema.\n    for (const tableName of Object.keys(schema)) {\n      if (res.schema[tableName]) {\n        // Write directly into configured schema. This code can only be executed alone.\n        schema[tableName] = res.schema[tableName];\n      }\n    }\n    await db.$syncState.put(schema, 'schema');\n\n    // List mutations that happened during our exchange with the server:\n    const addedClientChanges = await listClientChanges(mutationTables, db, {\n      since: latestRevisions,\n    });\n\n    //\n    // Delete changes now as server has return success\n    // (but keep changes that haven't reached server yet)\n    //\n    for (const mutTable of mutationTables) {\n      const tableName = getTableFromMutationTable(mutTable.name);\n      if (\n        !addedClientChanges.some(\n          (ch) => ch.table === tableName && ch.muts.length > 0\n        )\n      ) {\n        // No added mutations for this table during the time we sent changes\n        // to the server.\n        // It is therefore safe to clear all changes (which is faster than\n        // deleting a range)\n        await Promise.all([\n          mutTable.clear(),\n          db.$baseRevs.where({ tableName }).delete(),\n        ]);\n      } else if (latestRevisions[mutTable.name]) {\n        const latestRev = latestRevisions[mutTable.name] || 0;\n        //await mutTable.where('rev').belowOrEqual(latestRev).reverse().offset(1).delete();\n        await Promise.all([\n          mutTable.where('rev').belowOrEqual(latestRev).delete(),\n          db.$baseRevs\n            .where(':id')\n            .between(\n              [tableName, -Infinity],\n              [tableName, latestRev + 1],\n              true,\n              true\n            )\n            .reverse()\n            .offset(1) // Keep one entry (the one mapping muts that came during fetch --> previous server revision)\n            .delete(),\n        ]);\n      } else {\n        // In this case, the mutation table only contains added items after sending empty changeset to server.\n        // We should not clear out anything now.\n      }\n    }\n\n    // Update latestRevisions object according to additional changes:\n    getLatestRevisionsPerTable(addedClientChanges, latestRevisions);\n\n    // Update/add new entries into baseRevs map.\n    // * On tables without mutations since last serverRevision,\n    //   this will update existing entry.\n    // * On tables where mutations have been recorded since last\n    //   serverRevision, this will create a new entry.\n    // The purpose of this operation is to mark a start revision (per table)\n    // so that all client-mutations that come after this, will be mapped to current\n    // server revision.\n    await db.$baseRevs.bulkPut(\n      Object.keys(schema)\n        .filter((table) => schema[table].markedForSync)\n        .map((tableName) => {\n          const lastClientRevOnPreviousServerRev =\n            latestRevisions[tableName] || 0;\n          return {\n            tableName,\n            clientRev: lastClientRevOnPreviousServerRev + 1,\n            serverRev: res.serverRevision,\n          };\n        })\n    );\n\n    const syncState = await db.getPersistedSyncState();\n\n    //\n    // Delete objects from removed realms\n    //\n    await deleteObjectsFromRemovedRealms(db, res, syncState);\n\n    //\n    // Update syncState\n    //\n    const newSyncState = syncState || {\n      syncedTables: [],\n      latestRevisions: {},\n      realms: [],\n      inviteRealms: [],\n    };\n    newSyncState.syncedTables = tablesToSync\n      .map((tbl) => tbl.name)\n      .concat(tablesToSyncify.map((tbl) => tbl.name));\n    newSyncState.latestRevisions = latestRevisions;\n    newSyncState.remoteDbId = res.dbId;\n    newSyncState.initiallySynced = true;\n    newSyncState.realms = res.realms;\n    newSyncState.inviteRealms = res.inviteRealms;\n    newSyncState.serverRevision = res.serverRevision;\n    newSyncState.timestamp = new Date();\n    delete newSyncState.error;\n\n    const filteredChanges = filterServerChangesThroughAddedClientChanges(\n      res.changes,\n      addedClientChanges\n    );\n\n    //\n    // apply server changes\n    //\n    await applyServerChanges(filteredChanges, db);\n\n    //\n    // Update syncState\n    //\n    db.$syncState.put(newSyncState, 'syncState');\n\n    return addedClientChanges.length === 0;\n  });\n  if (!done) {\n    console.debug('MORE SYNC NEEDED. Go for it again!');\n    return await _sync(db, options, schema, { isInitialSync, cancelToken });\n  }\n  console.debug('SYNC DONE', { isInitialSync });\n  return false; // Not needed anymore\n}\n\nasync function deleteObjectsFromRemovedRealms(\n  db: DexieCloudDB,\n  res: SyncResponse,\n  prevState: PersistedSyncState | undefined\n) {\n  const deletedRealms: string[] = [];\n  const previousRealmSet = prevState\n    ? prevState.realms.concat(prevState.inviteRealms)\n    : [];\n  const updatedRealmSet = new Set([...res.realms, ...res.inviteRealms]);\n  for (const realmId of previousRealmSet) {\n    if (!updatedRealmSet.has(realmId)) deletedRealms.push(realmId);\n  }\n  if (deletedRealms.length > 0) {\n    const deletedRealmSet = new Set(deletedRealms);\n    const tables = getSyncableTables(db);\n    for (const table of tables) {\n      if (\n        table.schema.indexes.some(\n          (idx) =>\n            idx.keyPath === 'realmId' ||\n            (Array.isArray(idx.keyPath) && idx.keyPath[0] === 'realmId')\n        )\n      ) {\n        // There's an index to use:\n        await table.where('realmId').anyOf(deletedRealms).delete();\n      } else {\n        // No index to use:\n        await table\n          .filter((obj) => !!obj?.realmId && deletedRealmSet.has(obj.realmId))\n          .delete();\n      }\n    }\n  }\n}\n\nfunction getLatestRevisionsPerTable(\n  clientChangeSet: DBOperationsSet,\n  lastRevisions = {} as { [table: string]: number }\n) {\n  for (const { table, muts } of clientChangeSet) {\n    const lastRev = muts.length > 0 ? muts[muts.length - 1].rev || 0 : 0;\n    lastRevisions[table] = lastRev;\n  }\n  return lastRevisions;\n}\n\nexport async function applyServerChanges(\n  changes: DBOperationsSet,\n  db: DexieCloudDB\n) {\n  console.debug('Applying server changes', changes, Dexie.currentTransaction);\n  for (const { table: tableName, muts } of changes) {\n    const table = db.table(tableName);\n    const { primaryKey } = table.core.schema;\n    for (const mut of muts) {\n      switch (mut.type) {\n        case 'insert':\n          if (primaryKey.outbound) {\n            await table.bulkAdd(mut.values, mut.keys);\n          } else {\n            mut.keys.forEach((key, i) => {\n              Dexie.setByKeyPath(mut.values[i], primaryKey.keyPath as any, key);\n            });\n            await table.bulkAdd(mut.values);\n          }\n          break;\n        case 'upsert':\n          if (primaryKey.outbound) {\n            await table.bulkPut(mut.values, mut.keys);\n          } else {\n            mut.keys.forEach((key, i) => {\n              Dexie.setByKeyPath(mut.values[i], primaryKey.keyPath as any, key);\n            });\n            await table.bulkPut(mut.values);\n          }\n          break;\n        case 'modify':\n          if (mut.keys.length === 1) {\n            await table.update(mut.keys[0], mut.changeSpec);\n          } else {\n            await table.where(':id').anyOf(mut.keys).modify(mut.changeSpec);\n          }\n          break;\n        case 'update':\n          await bulkUpdate(table, mut.keys, mut.changeSpecs);\n          break;\n        case 'delete':\n          await table.bulkDelete(mut.keys);\n          break;\n      }\n    }\n  }\n}\n\nfunction filterServerChangesThroughAddedClientChanges(\n  serverChanges: DBOperationsSet,\n  addedClientChanges: DBOperationsSet\n): DBOperationsSet {\n  const changes: DBKeyMutationSet = {};\n  applyOperations(changes, serverChanges);\n  const localPostChanges: DBKeyMutationSet = {};\n  applyOperations(localPostChanges, addedClientChanges);\n  subtractChanges(changes, localPostChanges);\n  return toDBOperationSet(changes);\n}\n","import { DexieCloudSchema } from 'dexie-cloud-common';\nimport { DexieCloudDB } from './db/DexieCloudDB';\nimport { DexieCloudOptions } from './DexieCloudOptions';\nimport { performGuardedJob } from './sync/performGuardedJob';\nimport { sync } from './sync/sync';\n\nexport async function performInitialSync(\n  db: DexieCloudDB,\n  cloudOptions: DexieCloudOptions,\n  cloudSchema: DexieCloudSchema\n) {\n  console.debug(\"Performing initial sync\");\n  await performGuardedJob(\n    db,\n    'initialSync',\n    '$jobs',\n    async () => {\n      // Even though caller has already checked it,\n      // Do check again (now within a transaction) that we really do not have a sync state:\n      const syncState = await db.getPersistedSyncState();\n      if (!syncState?.initiallySynced) {\n        await sync(db, cloudOptions, cloudSchema, {isInitialSync: true});\n      }\n    },\n    { awaitRemoteJob: true } // Don't return until the job is done!\n  );\n  console.debug(\"Done initial sync\");\n}\n","import { BehaviorSubject, fromEvent, merge, of } from 'rxjs';\nimport { delay, filter, map, skip, switchMap, tap } from 'rxjs/operators';\n\nconst USER_INACTIVITY_TIMEOUT = 300_000; // 300_000;\n\n// This observable will be emitted to later down....\nexport const userIsActive = new BehaviorSubject<boolean>(true);\n\n//\n// First create some corner-stone observables to build the flow on\n//\n\n// document.onvisibilitychange:\nexport const visibilityStateIsChanged =\n  typeof document !== 'undefined'\n    ? fromEvent(document, 'visibilitychange')\n    : of({});\n\n// document.onvisibilitychange makes document hidden:\nexport const documentBecomesHidden = visibilityStateIsChanged.pipe(\n  filter(() => document.visibilityState === 'hidden')\n);\n\n// document.onvisibilitychange makes document visible\nexport const documentBecomesVisible = visibilityStateIsChanged.pipe(\n  filter(() => document.visibilityState === 'hidden')\n);\n\n// Any of various user-activity-related events happen:\nexport const userDoesSomething =\n  typeof window !== 'undefined'\n    ? merge(\n        documentBecomesVisible,\n        fromEvent(window, 'mousemove'),\n        fromEvent(window, 'keydown'),\n        fromEvent(window, 'wheel'),\n        fromEvent(window, 'touchmove')\n      )\n    : of({});\n\nif (typeof document !== 'undefined') {\n  //\n  // Now, create a final observable and start subscribing to it in order\n  // to make it emit values to userIsActive BehaviourSubject (which is the\n  // most important global hot observable we have here)\n  //\n  // Live test: https://jsitor.com/LboCDHgbn\n  //\n  merge(\n    of(true), // Make sure something is always emitted from start\n    documentBecomesHidden, // so that we can eagerly emit false!\n    userDoesSomething\n  )\n    .pipe(\n      // No matter event source, compute whether user is visible using visibilityState:\n      map(() => document.visibilityState === 'visible'),\n      // Make sure to emit it\n      tap((isActive) => {\n        if (userIsActive.value !== isActive) {\n          // Emit new value unless it already has that value\n          userIsActive.next(isActive);\n        }\n      }),\n      // Now, if true was emitted, make sure to set a timeout to emit false\n      // unless new user activity things happen (in that case, the timeout will be cancelled!)\n      switchMap((isActive) =>\n        isActive\n          ? of(true).pipe(\n              delay(USER_INACTIVITY_TIMEOUT),\n              tap(() => userIsActive.next(false))\n            )\n          : of(false)\n      )\n    )\n    .subscribe(() => {}); // Unless we subscribe nothing will be propagated to userIsActive observable\n}\n","export class TokenExpiredError extends Error {\n  name = \"TokenExpiredError\";\n}\n","import { Observable, Subscriber, Subscription } from 'rxjs';\nimport { TokenExpiredError } from './authentication/TokenExpiredError';\n\nconst SERVER_PING_TIMEOUT = 20000;\nconst CLIENT_PING_INTERVAL = 30000;\nconst FAIL_RETRY_WAIT_TIME = 60000;\n\nexport type WSConnectionMsg =\n  | RevisionChangedMessage\n  | RealmAddedMessage\n  | RealmRemovedMessage;\ninterface PingMessage {\n  type: 'ping';\n}\n\ninterface PongMessage {\n  type: 'pong';\n}\n\ninterface ErrorMessage {\n  type: 'error';\n  error: string;\n}\nexport interface RevisionChangedMessage {\n  type: 'rev';\n  rev: string;\n}\n\nexport interface RealmAddedMessage {\n  type: 'realm-added';\n  realm: string;\n}\n\nexport interface RealmRemovedMessage {\n  type: 'realm-removed';\n  realm: string;\n}\n\nexport class WSObservable extends Observable<WSConnectionMsg> {\n  constructor(\n    databaseUrl: string,\n    rev: string,\n    token?: string,\n    tokenExpiration?: Date\n  ) {\n    super(\n      (subscriber) =>\n        new WSConnection(databaseUrl, rev, token, tokenExpiration, subscriber)\n    );\n  }\n}\n\nlet counter = 0;\n\nexport class WSConnection extends Subscription {\n  ws: WebSocket | null;\n  lastServerActivity: Date;\n  lastUserActivity: Date;\n  lastPing: Date;\n  databaseUrl: string;\n  rev: string;\n  token: string | undefined;\n  tokenExpiration: Date | undefined;\n  subscriber: Subscriber<WSConnectionMsg>;\n  pauseUntil?: Date;\n  id = ++counter;\n\n  private pinger: any;\n\n  constructor(\n    databaseUrl: string,\n    rev: string,\n    token: string | undefined,\n    tokenExpiration: Date | undefined,\n    subscriber: Subscriber<WSConnectionMsg>\n  ) {\n    super(() => this.teardown());\n    console.debug(\n      'New WebSocket Connection',\n      this.id,\n      token ? 'authorized' : 'unauthorized'\n    );\n    this.databaseUrl = databaseUrl;\n    this.rev = rev;\n    this.token = token;\n    this.tokenExpiration = tokenExpiration;\n    this.subscriber = subscriber;\n    this.lastUserActivity = new Date();\n    this.connect();\n  }\n\n  private teardown() {\n    this.disconnect();\n    console.debug('Teardown WebSocket Connection', this.id);\n  }\n\n  private disconnect() {\n    if (this.pinger) {\n      clearInterval(this.pinger);\n      this.pinger = null;\n    }\n    if (this.ws) {\n      try {\n        this.ws.close();\n      } catch {}\n    }\n    this.ws = null;\n  }\n\n  reconnect() {\n    this.disconnect();\n    this.connect();\n  }\n\n  async connect() {\n    this.lastServerActivity = new Date();\n    if (this.pauseUntil && this.pauseUntil > new Date()) return;\n    if (this.ws) {\n      throw new Error(`Called connect() when a connection is already open`);\n    }\n    if (!this.databaseUrl)\n      throw new Error(`Cannot connect without a database URL`);\n    if (this.closed) {\n      return;\n    }\n    if (this.tokenExpiration && this.tokenExpiration < new Date()) {\n      this.subscriber.error(new TokenExpiredError()); // Will be handled in connectWebSocket.ts.\n      return;\n    }\n    this.pinger = setInterval(async () => {\n      if (this.closed) {\n        console.debug('pinger check', this.id, 'CLOSED.');\n        this.teardown();\n        return;\n      }\n      console.debug('pinger check', this.id, 'user is active');\n      if (this.ws) {\n        try {\n          this.ws.send(JSON.stringify({ type: 'ping' } as PingMessage));\n          setTimeout(() => {\n            console.debug(\n              'pinger setTimeout',\n              this.id,\n              this.pinger ? `alive` : 'dead'\n            );\n            if (!this.pinger) return;\n            if (this.closed) {\n              console.debug(\n                'pinger setTimeout',\n                this.id,\n                'subscription is closed'\n              );\n              this.teardown();\n              return;\n            }\n            if (\n              this.lastServerActivity <\n              new Date(Date.now() - SERVER_PING_TIMEOUT)\n            ) {\n              // Server inactive. Reconnect if user is active.\n              console.debug('pinger: server is inactive');\n              console.debug('pinger reconnecting');\n              this.reconnect();\n            } else {\n              console.debug('pinger: server still active');\n            }\n          }, SERVER_PING_TIMEOUT);\n        } catch {\n          console.debug('pinger catch error', this.id, 'reconnecting');\n          this.reconnect();\n        }\n      } else {\n        console.debug('pinger', this.id, 'reconnecting');\n        this.reconnect();\n      }\n    }, CLIENT_PING_INTERVAL);\n\n    // The following vars are needed because we must know which callback to ack when server sends it's ack to us.\n    const wsUrl = new URL(this.databaseUrl);\n    wsUrl.protocol = wsUrl.protocol === 'http:' ? 'ws' : 'wss';\n    const searchParams = new URLSearchParams();\n    if (this.subscriber.closed) return;\n    searchParams.set('rev', this.rev);\n    if (this.token) {\n      searchParams.set('token', this.token);\n    }\n\n    // Connect the WebSocket to given url:\n    console.debug('dexie-cloud WebSocket create');\n    const ws = (this.ws = new WebSocket(`${wsUrl}/revision?${searchParams}`));\n    //ws.binaryType = \"arraybuffer\"; // For future when subscribing to actual changes.\n\n    ws.onclose = (event: Event) => {\n      if (!this.pinger) return;\n      console.debug('dexie-cloud WebSocket onclosed');\n      this.reconnect();\n    };\n\n    ws.onmessage = (event: MessageEvent) => {\n      if (!this.pinger) return;\n      console.debug('dexie-cloud WebSocket onmessage', event.data);\n      \n      this.lastServerActivity = new Date();\n      try {\n        const msg = JSON.parse(event.data) as\n          | WSConnectionMsg\n          | PongMessage\n          | ErrorMessage;\n        if (msg.type === 'error') {\n          throw new Error(`dexie-cloud WebSocket Error ${msg.error}`);\n        }\n        if (msg.type === 'rev') {\n          this.rev = msg.rev; // No meaning but seems reasonable.\n        }\n        if (msg.type !== 'pong') {\n          this.subscriber.next(msg);\n        }\n      } catch (e) {\n        this.disconnect();\n        this.pauseUntil = new Date(Date.now() + FAIL_RETRY_WAIT_TIME);\n      }\n    };\n\n    try {\n      await new Promise((resolve, reject) => {\n        ws.onopen = (event) => {\n          console.debug('dexie-cloud WebSocket onopen');\n          resolve(null);\n        };\n        ws.onerror = (event: ErrorEvent) => {\n          const error = event.error || new Error('WebSocket Error');\n          console.debug('dexie-cloud WebSocket error', error);\n          this.disconnect();\n          reject(error);\n        };\n      });\n    } catch (error) {\n      this.pauseUntil = new Date(Date.now() + FAIL_RETRY_WAIT_TIME);\n    }\n  }\n}\n","import { DexieCloudDB } from \"../db/DexieCloudDB\";\nimport { registerSyncEvent } from \"./registerSyncEvent\";\n\nexport function triggerSync(db: DexieCloudDB) {\n  if (db.cloud.usingServiceWorker) {\n    registerSyncEvent(db);\n  } else {\n    db.localSyncEvent.next({});\n  }\n}","import { from, of } from 'rxjs';\nimport {\n  catchError,\n  delay,\n  filter,\n  switchMap,\n  take\n} from 'rxjs/operators';\nimport {\n  refreshAccessToken\n} from '../authentication/authenticate';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { FakeBigInt } from '../TSON';\nimport {\n  userDoesSomething, userIsActive\n} from '../userIsActive';\nimport { WSObservable } from '../WSObservable';\nimport { triggerSync } from './triggerSync';\n\nexport function connectWebSocket(db: DexieCloudDB) {\n  if (!db.cloud.options?.databaseUrl) {\n    throw new Error(`No database URL to connect WebSocket to`);\n  }\n\n  function createObservable() {\n    return userIsActive.pipe(\n      filter((isActive) => isActive), // Reconnect when user becomes active\n      switchMap(() => db.cloud.currentUser), // Reconnect whenever current user changes\n      filter(() => db.cloud.persistedSyncState?.value?.serverRevision), // Don't connect before there's no initial sync performed.\n      switchMap(\n        (userLogin) =>\n          new WSObservable(\n            db.cloud.options!.databaseUrl,\n            db.cloud.persistedSyncState?.value?.serverRevision,\n            userLogin.accessToken,\n            userLogin.accessTokenExpiration\n          )\n      ),\n      catchError((error) => {\n        return from(handleError(error)).pipe(\n          switchMap(() => createObservable()),\n          catchError((error) => {\n            // Failed to refresh token (network error or so)\n            console.error(\n              `WebSocket observable: error but revive when user does some active thing...`,\n              error\n            );\n            return of(true).pipe(\n              delay(3000), // Give us some breath between errors\n              switchMap(()=>userDoesSomething),\n              take(1), // Don't reconnect whenever user does something\n              switchMap(() => createObservable()) // Relaunch the flow\n            );\n          })\n        );\n\n        async function handleError(error: any) {\n          if (error?.name === 'TokenExpiredError') {\n            console.debug(\n              'WebSocket observable: Token expired. Refreshing token...'\n            );\n            const user = db.cloud.currentUser.value;\n            const refreshedLogin = await refreshAccessToken(\n              db.cloud.options!.databaseUrl,\n              user\n            );\n            await db.table('$logins').update(user.userId, {\n              accessToken: refreshedLogin.accessToken,\n              accessTokenExpiration: refreshedLogin.accessTokenExpiration,\n            });\n          } else {\n            console.error('WebSocket observable:', error);\n            throw error;\n          }\n        }\n      })\n    );\n  }\n\n  return createObservable().subscribe(async (msg) => {\n    const syncState = await db.getPersistedSyncState();\n    switch (msg.type) {\n      case 'rev':\n        if (\n          !syncState?.serverRevision ||\n          FakeBigInt.compare(\n            syncState.serverRevision,\n            typeof BigInt === 'undefined'\n              ? new FakeBigInt(msg.rev)\n              : BigInt(msg.rev)\n          ) < 0\n        ) {\n          triggerSync(db);\n        }\n        break;\n      case 'realm-added':\n        {\n          if (!syncState?.realms?.includes(msg.realm)) {\n            triggerSync(db);\n          }\n        }\n        break;\n      case 'realm-removed':\n        if (syncState?.realms?.includes(msg.realm)) {\n          triggerSync(db);\n        }\n        break;\n    }\n  });\n}\n","import { DexieCloudDB } from \"../db/DexieCloudDB\";\nimport { sync } from \"./sync\";\n\nexport async function isSyncNeeded(db: DexieCloudDB) {\n  return db.cloud.options?.databaseUrl && db.cloud.schema\n    ? await sync(db, db.cloud.options, db.cloud.schema, {justCheckIfNeeded: true})\n    : false;\n}\n","import { IS_SERVICE_WORKER } from '../helpers/IS_SERVICE_WORKER';\nimport { performGuardedJob } from './performGuardedJob';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { isSyncing, sync, CURRENT_SYNC_WORKER, SyncOptions } from './sync';\nimport { DexieCloudOptions } from '../DexieCloudOptions';\nimport { DexieCloudSchema } from 'dexie-cloud-common';\n\nexport async function syncIfPossible(\n  db: DexieCloudDB,\n  cloudOptions: DexieCloudOptions,\n  cloudSchema: DexieCloudSchema,\n  options?: SyncOptions\n) {\n  if (isSyncing.has(db)) {\n    // Still working. Existing work will make sure to complete its job\n    // and after that, check if new mutations have arrived, and if so complete\n    // those as well. So if isSyncing.has(db) is true, we can rely that nothing at\n    // all will be needed to perform at this time.\n    // Exceptions: If onling sync throws an exception, it's caller will take care of\n    // the retry procedure - we shouldn't do that also (would be redundant).\n    return;\n  }\n  // Skipping check for navigator.onLine - turns out to be false in Opera even when online.\n  /*if (typeof navigator !== 'undefined' && !navigator.onLine) {\n    // We're not online.\n    // If LocalSyncWorker is used, a retry will automatically happen when we become\n    // online.\n    return;\n  }*/\n  /*if (typeof document !== 'undefined' && document.visibilityState !== 'visible') {\n    console.debug(\"syncIfPossible: not visible\", options);\n    return; // We're a window but not visible\n  }*/\n\n  isSyncing.add(db);\n  try {\n    if (db.cloud.usingServiceWorker) {\n      if (IS_SERVICE_WORKER) {\n        await sync(db, cloudOptions, cloudSchema, options);\n      }\n    } else {\n      // We use a flow that is better suited for the case when multiple workers want to\n      // do the same thing.\n      await performGuardedJob(db, CURRENT_SYNC_WORKER, '$jobs', () => sync(db, cloudOptions, cloudSchema, options));\n    }\n    isSyncing.delete(db);\n    console.debug(\"Done sync\");\n  } catch (error) {\n    isSyncing.delete(db);\n    console.error(`Failed to sync client changes`, error);\n    throw error; // Make sure we rethrow error so that sync event is retried.\n    // I don't think we should setTimout or so here.\n    // Unless server tells us to in some response.\n    // Then we could follow that advice but not by waiting here but by registering\n    // Something that triggers an event listened to in startPushWorker()\n  }\n}\n","import { Subscription } from 'rxjs';\nimport { syncIfPossible } from './syncIfPossible';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { MINUTES } from '../helpers/date-constants';\nimport { DexieCloudOptions } from '../DexieCloudOptions';\nimport { DexieCloudSchema } from 'dexie-cloud-common';\n\nexport function LocalSyncWorker(\n  db: DexieCloudDB,\n  cloudOptions: DexieCloudOptions,\n  cloudSchema: DexieCloudSchema\n) {\n  let localSyncEventSubscription: Subscription | null = null;\n  //let syncHandler: ((event: Event) => void) | null = null;\n  //let periodicSyncHandler: ((event: Event) => void) | null = null;\n  let cancelToken = { cancelled: false };\n\n  function syncAndRetry(retryNum = 1) {\n    syncIfPossible(db, cloudOptions, cloudSchema, {\n      cancelToken,\n      retryImmediatelyOnFetchError: true, // workaround for \"net::ERR_NETWORK_CHANGED\" in chrome.\n    }).catch((e) => {\n      console.error('error in syncIfPossible()', e);\n      if (cancelToken.cancelled) {\n        stop();\n      } else if (retryNum < 3) {\n        // Mimic service worker sync event: retry 3 times\n        // * first retry after 5 minutes\n        // * second retry 15 minutes later\n        setTimeout(\n          () => syncAndRetry(retryNum + 1),\n          [0, 5, 15][retryNum] * MINUTES\n        );\n      }\n    });\n  }\n\n  const start = () => {\n    // Sync eagerly whenever a change has happened (+ initially when there's no syncState yet)\n    // This initial subscribe will also trigger an sync also now.\n    console.debug('Starting LocalSyncWorker', db.localSyncEvent['id']);\n    localSyncEventSubscription = db.localSyncEvent.subscribe(() => {\n      try {\n        syncAndRetry();\n      } catch (err) {\n        console.error('What-the....', err);\n      }\n    });\n    //setTimeout(()=>db.localSyncEvent.next({}), 5000);\n  };\n\n  const stop = () => {\n    console.debug('Stopping LocalSyncWorker');\n    cancelToken.cancelled = true;\n    if (localSyncEventSubscription) localSyncEventSubscription.unsubscribe();\n  };\n\n  return {\n    start,\n    stop,\n  };\n}\n","import { DexieCloudSchema } from \"dexie-cloud-common\";\nimport { DexieCloudOptions } from \"./DexieCloudOptions\";\n\nexport function updateSchemaFromOptions(schema?: DexieCloudSchema | null, options?: DexieCloudOptions | null) {\n  if (schema && options) {\n    if (options.unsyncedTables) {\n      for (const tableName of options.unsyncedTables) {\n        if (schema[tableName]) {\n          schema[tableName].markedForSync = false;\n        }\n      }\n    }\n  }\n}","import Dexie from \"dexie\";\nimport { DexieCloudDB } from \"./db/DexieCloudDB\";\n\nexport function verifySchema(db: DexieCloudDB) {\n  for (const table of db.tables) {\n    if (db.cloud.schema?.[table.name]?.markedForSync) {\n      if (table.schema.primKey.auto) {\n        throw new Dexie.SchemaError(\n          `Table ${table.name} is both autoIncremented and synced. ` +\n            `Use db.cloud.configure({unsyncedTables: [${JSON.stringify(\n              table.name\n            )}]}) to blacklist it from sync`\n        );\n      }\n      if (!table.schema.primKey.keyPath) {\n        throw new Dexie.SchemaError(\n          `Table ${table.name} cannot be both synced and outbound. ` +\n            `Use db.cloud.configure({unsyncedTables: [${JSON.stringify(\n              table.name\n            )}]}) to blacklist it from sync`\n        );\n      }\n    }\n  }\n}\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError,\n\t_vnodeId: 0\n};\n\nexport default options;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import options from './options';\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++options._vnodeId : original\n\t};\n\n\tif (options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children != null && // Can be null if childVNode suspended\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t// there are probably some internal data structures that aren't\n\t\t\t// updated properly.\n\t\t\t//\n\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t// value check in `diff()` won't be skipped.\n\t\t\tif (!isHydrating && newParentVNode.type === 'option') {\n\t\t\t\t// @ts-ignore We have validated that the type of parentDOM is 'option'\n\t\t\t\t// in the above check\n\t\t\t\tparentDom.value = '';\n\t\t\t} else if (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\tfor (let tmp = 0; tmp < childVNode._children.length; tmp++) {\n\t\tlet vnode = childVNode._children[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tchildVNode._children,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t(child === dom ||\n\t\t\t\t\t(nodeType ? child.localName == nodeType : child.nodeType == 3))\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren =\n\t\t\texcessDomChildren && EMPTY_ARR.slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (let i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tdom.firstChild,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value || (nodeType === 'progress' && !i))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type != 'function') {\n\t\tskipRemove = (dom = vnode._dom) != null;\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom != null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? EMPTY_ARR.slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n","export const Styles: { [styleAlias: string]: Partial<CSSStyleDeclaration> | any} = {\n  Error: {\n    color: \"red\",\n  },\n  Alert: {\n    error: {\n      color: \"red\"\n    },\n    warning: {\n      color: \"yellow\"\n    },\n    info: {\n      color: \"black\"\n    }\n  },\n  Darken: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    opacity: 0.5,\n    backgroundColor: \"#000\",\n    width: \"100vw\",\n    height: \"100vh\",\n    zIndex: 150,\n    webkitBackdropFilter: \"blur(2px)\",\n    backdropFilter: \"blur(2px)\",\n  },\n  DialogOuter: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: \"100vw\",\n    height: \"100vh\",\n    zIndex: 150,\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  DialogInner: {\n    position: \"relative\",\n    color: \"#222\",\n    backgroundColor: \"#fff\",\n    padding: \"30px\",\n    marginBottom: \"2em\",\n    maxWidth: \"90%\",\n    maxHeight: \"90%\",\n    overflowY: \"auto\",\n    border: \"3px solid #3d3d5d\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 0 80px 10px #666\",\n    width: \"auto\"\n  },\n  Input: {\n    height: \"35px\",\n    width: \"17em\",\n    borderColor: \"#ccf4\",\n    outline: \"none\",\n    fontSize: \"17pt\",\n    padding: \"8px\"\n  \n  }\n};\n","import { Styles } from './Styles';\nimport { ComponentChildren, h } from 'preact';\n\nexport function Dialog({ children }: { children?: ComponentChildren }) {\n  return (\n    <div>\n      <div style={Styles.Darken} />\n      <div style={Styles.DialogOuter}>\n        <div style={Styles.DialogInner}>{children}</div>\n      </div>\n    </div>\n  );\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n/**\n * Keep track of the previous component so that we can set\n * `currentComponent` to `null` and throw when a hook is invoked\n * outside of render\n * @type {import('./internal').Component}\n */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = previousComponent;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\ttry {\n\t\t\tc.__hooks._list.forEach(invokeCleanup);\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.forEach(component => {\n\t\tif (component._parentDom) {\n\t\t\ttry {\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t} catch (e) {\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t\toptions._catchError(e, component._vnode);\n\t\t\t}\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tif (typeof hook._cleanup == 'function') hook._cleanup();\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","import { DXCAlert } from \"../types/DXCAlert\";\n\nexport function resolveText({message, messageCode, messageParams}: DXCAlert) {\n  return message.replace(/\\{\\w+\\}/ig, n => messageParams[n.substr(1, n.length-2)]);\n}\n","import { Dialog } from './Dialog';\nimport { Styles } from './Styles';\nimport { h, Fragment } from 'preact';\nimport { useEffect, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport {\n  DXCGenericUserInteraction,\n  DXCUserInteraction,\n} from '../types/DXCUserInteraction';\nimport { resolveText } from '../helpers/resolveText';\nimport { DXCInputField } from '../types/DXCInputField';\n\nexport function LoginDialog({\n  title,\n  alerts,\n  fields,\n  onCancel,\n  onSubmit,\n}: DXCGenericUserInteraction<string, { [name: string]: DXCInputField }>) {\n  const [params, setParams] = useState<{ [param: string]: string }>({});\n\n  const firstFieldRef = useRef<HTMLInputElement>();\n  useLayoutEffect(()=>firstFieldRef.current?.focus(), []);\n\n  return (\n    <Dialog>\n      <>\n        <h3 style={Styles.WindowHeader}>{title}</h3>\n        {alerts.map((alert) => (\n          <p style={Styles.Alert[alert.type]}>{resolveText(alert)}</p>\n        ))}\n        <form onSubmit={ev => {\n          ev.preventDefault();\n          onSubmit(params);\n        }}>\n        {Object.entries(fields).map(\n          ([fieldName, { type, label, placeholder }], idx) => (\n            <label style={Styles.Label}>\n              {label ? `${label}: ` : ''}\n              <input\n                ref={idx === 0 ? firstFieldRef : undefined}\n                type={type}\n                name={fieldName}\n                autoComplete=\"on\"\n                style={Styles.Input}\n                autoFocus\n                placeholder={placeholder}\n                value={params[fieldName] || ''}\n                onInput={(ev) =>\n                  setParams({ ...params, [fieldName]: valueTransformer(type, ev.target?.['value']) })\n                }\n              />\n            </label>\n          )\n        )}\n        </form>\n      </>\n      <div style={Styles.ButtonsDiv}>\n        <button type=\"submit\" style={Styles.Button} onClick={() => onSubmit(params)}>\n          Submit\n        </button>\n        <button style={Styles.Button} onClick={onCancel}>\n          Cancel\n        </button>\n      </div>\n    </Dialog>\n  );\n}\n\nfunction valueTransformer(type: string, value: string) {\n  switch(type) {\n    case \"email\": return value.toLowerCase();\n    case \"otp\": return value.toUpperCase();\n    default: return value;\n  }\n}","import Dexie from \"dexie\";\nimport \"../extend-dexie-interface\";\nimport { h, Component } from \"preact\";\nimport { from, Observer, Subscription } from \"rxjs\";\nimport { LoginDialog } from './LoginDialog';\nimport { Styles } from \"./Styles\";\nimport { DXCGenericUserInteraction, DXCUserInteraction } from \"../types/DXCUserInteraction\";\nimport { DXCInputField } from \"../types/DXCInputField\";\nimport { DexieCloudDB } from \"../db/DexieCloudDB\";\nimport * as preact from \"preact\";\n\nexport interface Props {\n  db: Dexie;\n}\n\ninterface State {\n  userInteraction: DXCUserInteraction | undefined;\n}\n\nexport default class LoginGui extends Component<Props, State> {\n  subscription?: Subscription;\n  observer = (userInteraction: DXCUserInteraction | undefined) => this.setState({userInteraction});\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { userInteraction: undefined };\n  }\n\n  componentDidMount() {\n    this.subscription = from(this.props.db.cloud.userInteraction).subscribe(this.observer);\n  }\n\n  componentWillUnmount() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      delete this.subscription;\n    }\n  }\n\n  render(props: Props, {userInteraction}: State) {\n    if (!userInteraction) return null;\n    //if (props.db.cloud.userInteraction.observers.length > 1) return null; // Someone else subscribes.\n    return <LoginDialog {...userInteraction as DXCGenericUserInteraction<string, {[name: string]: DXCInputField}>} />;\n  }\n}\n\nexport function setupDefaultGUI(db: Dexie) {\n  const el = document.createElement('div');\n  document.body.appendChild(el);\n  preact.render(<LoginGui db={db.vip} />, el);\n\n  let closed = false;\n\n  return {\n    unsubscribe() {\n      el.remove();\n      closed = true;\n    },\n    get closed() {\n      return closed;\n    }\n  }\n}\n\n// TODO:\n/*\n    * Gjort klart allt kring user interaction förutom att mounta default-ui på ett element.\n    * Också att kolla först om nån annan subscribar och i så fall inte göra nåt.\n*/","import Dexie, { liveQuery, Subscription } from 'dexie';\nimport { getDbNameFromDbUrl } from 'dexie-cloud-common';\nimport { BehaviorSubject, from, fromEvent } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { login } from './authentication/login';\nimport { UNAUTHORIZED_USER } from './authentication/UNAUTHORIZED_USER';\nimport { DexieCloudDB } from './db/DexieCloudDB';\nimport { PersistedSyncState } from './db/entities/PersistedSyncState';\nimport { DexieCloudOptions } from './DexieCloudOptions';\nimport { DISABLE_SERVICEWORKER_STRATEGY } from './DISABLE_SERVICEWORKER_STRATEGY';\nimport './extend-dexie-interface';\nimport { DexieCloudSyncOptions } from './extend-dexie-interface';\nimport { dbOnClosed } from './helpers/dbOnClosed';\nimport { IS_SERVICE_WORKER } from './helpers/IS_SERVICE_WORKER';\nimport { throwVersionIncrementNeeded } from './helpers/throwVersionIncrementNeeded';\nimport { createIdGenerationMiddleware } from './middlewares/createIdGenerationMiddleware';\nimport { createImplicitPropSetterMiddleware } from './middlewares/createImplicitPropSetterMiddleware';\nimport { createMutationTrackingMiddleware } from './middlewares/createMutationTrackingMiddleware';\n//import { dexieCloudSyncProtocol } from \"./dexieCloudSyncProtocol\";\nimport { overrideParseStoresSpec } from './overrideParseStoresSpec';\nimport { performInitialSync } from './performInitialSync';\nimport { connectWebSocket } from './sync/connectWebSocket';\nimport { isSyncNeeded } from './sync/isSyncNeeded';\nimport { LocalSyncWorker } from './sync/LocalSyncWorker';\nimport {\n  registerPeriodicSyncEvent,\n  registerSyncEvent,\n} from './sync/registerSyncEvent';\nimport { triggerSync } from './sync/triggerSync';\nimport { DXCUserInteraction } from './types/DXCUserInteraction';\nimport { SyncState } from './types/SyncState';\nimport { updateSchemaFromOptions } from './updateSchemaFromOptions';\nimport { verifySchema } from './verifySchema';\nimport { setupDefaultGUI } from './default-ui';\n\nexport { DexieCloudTable } from './extend-dexie-interface';\n\nexport function dexieCloud(dexie: Dexie) {\n  const origIdbName = dexie.name;\n  //\n  //\n  //\n  const currentUserEmitter = new BehaviorSubject(UNAUTHORIZED_USER);\n  const subscriptions: Subscription[] = [];\n\n  // local sync worker - used when there's no service worker.\n  let localSyncWorker: { start: () => void; stop: () => void } | null = null;\n  dexie.on(\n    'ready',\n    async (dexie: Dexie) => {\n      try {\n        await onDbReady(dexie);\n      } catch (error) {\n        console.error(error);\n        // Make sure to succeed with database open even if network is down.\n      }\n    },\n    true // true = sticky\n  );\n\n  /** Void starting subscribers after a close has happened. */\n  let closed = false;\n  function throwIfClosed() {\n    if (closed) throw new Dexie.DatabaseClosedError();\n  }\n\n  dbOnClosed(dexie, () => {\n    subscriptions.forEach((subscription) => subscription.unsubscribe());\n    closed = true;\n    localSyncWorker && localSyncWorker.stop();\n    localSyncWorker = null;\n    currentUserEmitter.next(UNAUTHORIZED_USER);\n  });\n\n  dexie.cloud = {\n    version: '{version}',\n    options: null,\n    schema: null,\n    serverState: null,\n    get currentUserId() {\n      return currentUserEmitter.value.userId || UNAUTHORIZED_USER.userId!;\n    },\n    currentUser: currentUserEmitter,\n    syncState: new BehaviorSubject<SyncState>({ phase: 'initial' }),\n    persistedSyncState: new BehaviorSubject<PersistedSyncState | undefined>(\n      undefined\n    ),\n    userInteraction: new BehaviorSubject<DXCUserInteraction | undefined>(\n      undefined\n    ),\n    async login(hint) {\n      const db = DexieCloudDB(dexie);\n      await db.cloud.sync();\n      await login(db, hint);\n    },\n    configure(options: DexieCloudOptions) {\n      dexie.cloud.options = options;\n      if (options.databaseUrl) {\n        // @ts-ignore\n        dexie.name = `${origIdbName}-${getDbNameFromDbUrl(\n          options.databaseUrl\n        )}`;\n        DexieCloudDB(dexie).reconfigure(); // Update observable from new dexie.name\n      }\n      updateSchemaFromOptions(dexie.cloud.schema, dexie.cloud.options);\n    },\n    async sync(\n      { wait, force }: DexieCloudSyncOptions = { wait: true, force: false }\n    ) {\n      if (wait === undefined) wait = true;\n      const db = DexieCloudDB(dexie);\n      if (force) {\n        const syncState = db.cloud.persistedSyncState.value;\n        triggerSync(db);\n        if (wait) {\n          const newSyncState = await db.cloud.persistedSyncState\n            .pipe(\n              filter(\n                (newSyncState) =>\n                  newSyncState?.timestamp != null &&\n                  (!syncState || newSyncState.timestamp > syncState.timestamp!)\n              ),\n              take(1)\n            )\n            .toPromise();\n          if (newSyncState?.error) {\n            throw new Error(`Sync error: ` + newSyncState.error);\n          }\n        }\n      } else if (await isSyncNeeded(db)) {\n        const syncState = db.cloud.persistedSyncState.value;\n        triggerSync(db);\n        if (wait) {\n          console.debug('db.cloud.login() is waiting for sync completion...');\n          await from(\n            liveQuery(async () => {\n              const syncNeeded = await isSyncNeeded(db);\n              const newSyncState = await db.getPersistedSyncState();\n              if (\n                newSyncState?.timestamp !== syncState?.timestamp &&\n                newSyncState?.error\n              )\n                throw new Error(`Sync error: ` + newSyncState.error);\n              return syncNeeded;\n            })\n          )\n            .pipe(\n              filter((isNeeded) => !isNeeded),\n              take(1)\n            )\n            .toPromise();\n          console.debug(\n            'Done waiting for sync completion because we have nothing to push anymore'\n          );\n        }\n      }\n    },\n  };\n\n  dexie.Version.prototype['_parseStoresSpec'] = Dexie.override(\n    dexie.Version.prototype['_parseStoresSpec'],\n    (origFunc) => overrideParseStoresSpec(origFunc, dexie)\n  );\n\n  dexie.use(\n    createMutationTrackingMiddleware({\n      currentUserObservable: dexie.cloud.currentUser,\n      db: DexieCloudDB(dexie),\n    })\n  );\n  dexie.use(createImplicitPropSetterMiddleware(DexieCloudDB(dexie)));\n  dexie.use(createIdGenerationMiddleware(DexieCloudDB(dexie)));\n\n  async function onDbReady(dexie: Dexie) {\n    closed = false; // As Dexie calls us, we are not closed anymore. Maybe reopened? Remember db.ready event is registered with sticky flag!\n    const db = DexieCloudDB(dexie);\n    // Setup default GUI:\n    if (!IS_SERVICE_WORKER) {\n      if (!db.cloud.options?.customLoginGui) {\n        subscriptions.push(setupDefaultGUI(dexie));\n      }\n      subscriptions.push(\n        db.syncStateChangedEvent.subscribe(dexie.cloud.syncState)\n      );\n    }\n\n    //verifyConfig(db.cloud.options); Not needed (yet at least!)\n    // Verify the user has allowed version increment.\n    if (!db.tables.every((table) => table.core)) {\n      throwVersionIncrementNeeded();\n    }\n    const swRegistrations =\n      'serviceWorker' in navigator\n        ? await navigator.serviceWorker.getRegistrations()\n        : [];\n\n    const initiallySynced = await db.transaction(\n      'rw',\n      db.$syncState,\n      async () => {\n        const { options, schema } = db.cloud;\n        const [persistedOptions, persistedSchema, persistedSyncState] =\n          await Promise.all([\n            db.getOptions(),\n            db.getSchema(),\n            db.getPersistedSyncState(),\n          ]);\n        if (!options) {\n          // Options not specified programatically (use case for SW!)\n          // Take persisted options:\n          db.cloud.options = persistedOptions || null;\n        } else if (\n          !persistedOptions ||\n          JSON.stringify(persistedOptions) !== JSON.stringify(options)\n        ) {\n          // Update persisted options:\n          await db.$syncState.put(options, 'options');\n        }\n        if (\n          db.cloud.options?.tryUseServiceWorker &&\n          'serviceWorker' in navigator &&\n          swRegistrations.length > 0 &&\n          !DISABLE_SERVICEWORKER_STRATEGY\n        ) {\n          // * Configured for using service worker if available.\n          // * Browser supports service workers\n          // * There are at least one service worker registration\n          console.debug('Dexie Cloud Addon: Using service worker');\n          db.cloud.usingServiceWorker = true;\n        } else {\n          // Not configured for using service worker or no service worker\n          // registration exists. Don't rely on service worker to do any job.\n          // Use LocalSyncWorker instead.\n          if (db.cloud.options?.tryUseServiceWorker && !IS_SERVICE_WORKER) {\n            console.debug(\n              'dexie-cloud-addon: Not using service worker.',\n              swRegistrations.length === 0\n                ? 'No SW registrations found.'\n                : 'serviceWorker' in navigator && DISABLE_SERVICEWORKER_STRATEGY\n                ? \"Avoiding SW background sync and SW periodic bg sync for this browser due to browser bugs.\"\n                : 'navigator.serviceWorker not present'\n            );\n          }\n          db.cloud.usingServiceWorker = false;\n        }\n        updateSchemaFromOptions(schema, db.cloud.options);\n        updateSchemaFromOptions(persistedSchema, db.cloud.options);\n        if (!schema) {\n          // Database opened dynamically (use case for SW!)\n          // Take persisted schema:\n          db.cloud.schema = persistedSchema || null;\n        } else if (\n          !persistedSchema ||\n          JSON.stringify(persistedSchema) !== JSON.stringify(schema)\n        ) {\n          // Update persisted schema (but don't overwrite table prefixes)\n          const newPersistedSchema = persistedSchema || {};\n          for (const [table, tblSchema] of Object.entries(schema)) {\n            const newTblSchema = newPersistedSchema[table];\n            if (!newTblSchema) {\n              newPersistedSchema[table] = { ...tblSchema };\n            } else {\n              newTblSchema.markedForSync = tblSchema.markedForSync;\n              tblSchema.deleted = newTblSchema.deleted;\n              newTblSchema.generatedGlobalId = tblSchema.generatedGlobalId;\n            }\n          }\n          await db.$syncState.put(newPersistedSchema, 'schema');\n\n          // Make sure persisted table prefixes are being used instead of computed ones:\n          // Let's assign all props as the newPersistedSchems should be what we should be working with.\n          Object.assign(schema, newPersistedSchema);\n        }\n        return persistedSyncState?.initiallySynced;\n      }\n    );\n\n    if (initiallySynced) {\n      db.setInitiallySynced(true);\n    }\n\n    verifySchema(db);\n\n    if (db.cloud.options?.databaseUrl && !initiallySynced) {\n      await performInitialSync(db, db.cloud.options, db.cloud.schema!);\n      db.setInitiallySynced(true);\n    }\n\n    // Manage CurrentUser observable:\n    throwIfClosed();\n    if (!IS_SERVICE_WORKER) {\n      subscriptions.push(\n        liveQuery(() => db.getCurrentUser()).subscribe(currentUserEmitter)\n      );\n      // Manage PersistendSyncState observable:\n      subscriptions.push(\n        liveQuery(() => db.getPersistedSyncState()).subscribe(\n          db.cloud.persistedSyncState\n        )\n      );\n    }\n\n    // HERE: If requireAuth, do athentication now.\n    if (db.cloud.options?.requireAuth) {\n      await login(db);\n    }\n\n    if (localSyncWorker) localSyncWorker.stop();\n    localSyncWorker = null;\n    throwIfClosed();\n    if (db.cloud.usingServiceWorker && db.cloud.options?.databaseUrl) {\n      registerSyncEvent(db).catch(() => {});\n      registerPeriodicSyncEvent(db).catch(() => {});\n    } else if (\n      db.cloud.options?.databaseUrl &&\n      db.cloud.schema &&\n      !IS_SERVICE_WORKER\n    ) {\n      // There's no SW. Start SyncWorker instead.\n      localSyncWorker = LocalSyncWorker(db, db.cloud.options, db.cloud.schema!);\n      localSyncWorker.start();\n    }\n\n    // Listen to online event and do sync.\n    throwIfClosed();\n    if (!IS_SERVICE_WORKER) {\n      subscriptions.push(\n        fromEvent(self, 'online').subscribe(() => {\n          console.debug('online!');\n          db.syncStateChangedEvent.next({\n            phase: 'not-in-sync',\n          });\n          triggerSync(db);\n        }),\n        fromEvent(self, 'offline').subscribe(() => {\n          console.debug('offline!');\n          db.syncStateChangedEvent.next({\n            phase: 'offline',\n          });\n        })\n      );\n    }\n\n    // Connect WebSocket only if we're a browser window\n    if (\n      typeof window !== 'undefined' &&\n      !IS_SERVICE_WORKER &&\n      db.cloud.options?.databaseUrl\n    ) {\n      subscriptions.push(connectWebSocket(db));\n    }\n  }\n}\n\ndexieCloud.version = '{version}';\n\nDexie.Cloud = dexieCloud;\n\n//Dexie.addons.push(dexieCloud);\n\nexport default dexieCloud;\n","import Dexie from 'dexie';\nimport { DexieCloudDB } from './db/DexieCloudDB';\nimport dexieCloud from './dexie-cloud-client';\nimport { DISABLE_SERVICEWORKER_STRATEGY } from './DISABLE_SERVICEWORKER_STRATEGY';\nimport { isSafari, safariVersion } from './isSafari';\nimport { syncIfPossible } from './sync/syncIfPossible';\nimport { SWMessageEvent } from './types/SWMessageEvent';\nimport { SyncEvent } from './types/SWSyncEvent';\n\n// In case the SW lives for a while, let it reuse already opened connections:\nconst managedDBs = new Map<string, DexieCloudDB>();\n\nfunction getDbNameFromTag(tag: string) {\n  return tag.startsWith('dexie-cloud:') && tag.split(':')[1];\n}\n\nasync function syncDB(dbName: string) {\n  let db = managedDBs.get(dbName);\n\n  if (!db) {\n    console.debug('Dexie Cloud SW: Creating new Dexie instance for', dbName);\n    const dexie = new Dexie(dbName, { addons: [dexieCloud] });\n    db = DexieCloudDB(dexie);\n    dexie.on('versionchange', stopManagingDB);\n    await db.dx.open(); // Makes sure db.cloud.options and db.cloud.schema are read from db,\n    if (!managedDBs.get(dbName)) { // Avoid race conditions.\n      managedDBs.set(dbName, db);\n    }\n  }\n  if (!db.cloud.options?.databaseUrl) {\n    console.error(`Dexie Cloud: No databaseUrl configured`);\n    return; // Nothing to sync.\n  }\n  if (!db.cloud.schema) {\n    console.error(`Dexie Cloud: No schema persisted`);\n    return; // Nothing to sync.\n  }\n\n  function stopManagingDB() {\n    db!.dx.on.versionchange.unsubscribe(stopManagingDB);\n    if (managedDBs.get(db!.name) === db) { // Avoid race conditions.\n      managedDBs.delete(db!.name);\n    }\n    db!.dx.close();\n    return false;\n  }\n\n  try {\n    console.debug('Dexie Cloud SW: Syncing');\n    await syncIfPossible(db, db.cloud.options, db.cloud.schema, {retryImmediatelyOnFetchError: true});\n    console.debug('Dexie Cloud SW: Done Syncing');\n  } catch (e) {\n    console.error(`Dexie Cloud SW Error`, e);\n    // Error occured. Stop managing this DB until we wake up again by a sync event,\n    // which will open a new Dexie and start trying to sync it.\n    stopManagingDB();\n    if (e.name !== Dexie.errnames.NoSuchDatabase) {\n      // Unless the error was that DB doesn't exist, rethrow to trigger sync retry.\n      throw e; // Throw e to make syncEvent.waitUntil() receive a rejected promis, so it will retry.\n    }\n  }\n}\n\n// Avoid taking care of events if browser bugs out by using dexie cloud from a service worker.\nif (!DISABLE_SERVICEWORKER_STRATEGY) {\n  self.addEventListener('sync', (event: SyncEvent) => {\n    console.debug('SW \"sync\" Event', event.tag);\n    const dbName = getDbNameFromTag(event.tag);\n    if (dbName) {\n      event.waitUntil(syncDB(dbName));\n    }\n  });\n\n  self.addEventListener('periodicsync', (event: SyncEvent) => {\n    console.debug('SW \"periodicsync\" Event', event.tag);\n    const dbName = getDbNameFromTag(event.tag);\n    if (dbName) {\n      event.waitUntil(syncDB(dbName));\n    }\n  });\n\n  self.addEventListener('message', (event: SWMessageEvent) => {\n    console.debug('SW \"message\" Event', event.data);\n    if (event.data.type === 'dexie-cloud-sync') {\n      const { dbName } = event.data;\n      // Mimic background sync behavior - retry in X minutes on failure.\n      // But lesser timeout and more number of times.\n      const syncAndRetry = (num = 1) => {\n        return syncDB(dbName).catch(async (e) => {\n          if (num === 3) throw e;\n          await sleep(60_000); // 1 minute\n          syncAndRetry(num + 1);\n        });\n      };\n      if ('waitUntil' in event) {\n        event.waitUntil(syncAndRetry());\n      } else {\n        syncAndRetry();\n      }\n    }\n  });\n}\n\nfunction sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n"],"names":["Observable","wm","BehaviorSubject","randomString","tslib_1.__extends","iterator","observable","Symbol_iterator","Dexie","counter","from","liveQuery","this","bigintDef","tsonBuiltinDefs","fromEvent","of","merge","Subscription","options","rerenderQueue","defer","prevDebounce","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","i","removeNode","node","parentNode","removeChild","createElement","type","children","key","ref","normalizedProps","arguments","length","push","defaultProps","undefined","createVNode","original","vnode","constructor","Fragment","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","c","process","debounceRendering","queue","sort","a","b","some","component","commitQueue","oldVNode","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","Array","isArray","reorderChildren","placeChild","value","unmount","applyRef","tmp","nextDom","sibDom","outer","appendChild","nextSibling","insertBefore","diffProps","dom","newProps","oldProps","hydrate","setProperty","setStyle","style","test","name","oldValue","useCapture","o","cssText","replace","toLowerCase","slice","_listeners","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","setAttribute","removeAttribute","event","newVNode","isNew","oldState","snapshot","clearProcessingException","provider","componentContext","newType","contextType","prototype","render","doRender","sub","state","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","diffed","root","cb","call","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","firstChild","checked","current","parentVNode","skipRemove","r","componentWillUnmount","replaceNode","error","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","s","forceUpdate","Promise","then","bind","resolve","setTimeout","h","currentIndex","currentComponent","prevRaf","currentHook","afterPaintEffects","oldBeforeDiff","oldBeforeRender","oldAfterDiff","oldCommit","oldBeforeUnmount","getHookState","index","hooks","useState","initialState","useReducer","invokeOrReturn","reducer","init","hookState","_reducer","action","nextValue","useLayoutEffect","args","argsChanged","useRef","initialValue","useMemo","factory","flushAfterPaintEffects","invokeCleanup","invokeEffect","requestAnimationFrame","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","previousComponent","filter","hook","comp","oldArgs","newArgs","arg","f","preact.render"],"mappings":"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"}