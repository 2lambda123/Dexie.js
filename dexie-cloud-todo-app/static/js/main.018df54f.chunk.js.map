{"version":3,"sources":["components/TodoItemView.tsx","components/AddTodoItem.tsx","components/SharingForm.tsx","components/TodoListView.tsx","helpers/usePersistedOpenState.ts","components/TodoLists.tsx","components/AddTodoList.tsx","components/ResetDatabaseButton.tsx","components/icons/IconConnecting.tsx","components/icons/IconError.tsx","components/icons/IconOffline.tsx","components/icons/IconOnline.tsx","components/icons/IconSleepyCloud.tsx","components/navbar/SvgIcon.tsx","components/navbar/SyncStatusIcon.tsx","helpers/handleError.ts","db/logout.ts","components/navbar/NavBar.tsx","components/Invites.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","helpers/simplify-debugging.ts","index.tsx","db/db.ts","db/TodoList.ts","db/TodoDB.ts","db/index.ts"],"names":["TodoItemView","item","can","usePermissions","db","console","log","title","owner","realmId","className","done","type","disabled","update","checked","onChange","ev","todoItems","id","target","delete","onClick","icon","faTrash","AddTodoItem","todoList","useState","state","setState","placeholder","value","onKeyUp","key","add","todoListId","SharingForm","name","setName","email","setEmail","members","useLiveQuery","a","where","toArray","result","filter","m","JSON","stringify","map","member","MemberRow","onSubmit","preventDefault","shareWith","test","unshareWith","userId","cloud","currentUserId","accepted","getTime","rejected","leave","Date","undefined","TodoListView","items","namespace","defaultOpen","openCloseStates","get","isOpen","put","usePersistedOpenState","showInviteForm","setShowInviteForm","faTrashAlt","isPrivate","faShareAlt","TodoLists","lists","todoLists","list","AddTodoList","isActive","setIsActive","setTitle","hasAnyList","count","listCount","autoFocus","faList","ResetDatabaseButton","window","location","reload","faDatabase","IconConnecting","xmlns","xmlnsXlink","version","x","y","viewBox","xmlSpace","d","transform","opacity","xlinkHref","attributeName","dur","begin","calcMode","from","to","repeatDur","IconError","style","shapeRendering","textRendering","imageRendering","fillRule","clipRule","IconOffline","data-name","width","height","IconOnline","IconSleepyCloud","points","SvgIcon","children","SyncStatusIcon","syncStatus","useObservable","syncState","status","error","phase","handleError","fn","catch","debug","NavBar","currentUser","Navbar","fixed","sticky","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Text","Collapse","isLoggedIn","NavDropdown","Item","logout","Header","Object","keys","importData","demoUsers","NavLink","login","grant_type","Divider","Button","Invites","invites","length","i","realm","invitedBy","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Dexie","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration","TodoDB","TodoList","this","getTiedRealmId","Error","currentRealmId","newRealmId","transaction","realms","represents","modify","tiedRealmId","equals","sendEmail","isSharable","makeSharable","invite","permissions","unshareWithEveryone","Entity","addons","dexieCloud","stores","mapToClass","on","configure","unsyncedTables","databaseUrl","tryUseServiceWorker","requireAuth"],"mappings":"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","file":"static/js/main.018df54f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from '../db';\nimport { TodoItem } from '../db/TodoItem';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { usePermissions } from 'dexie-react-hooks';\n\ninterface Props {\n  item: TodoItem;\n}\n\nexport function TodoItemView({ item }: Props) {\n  const can = usePermissions(db, 'todoItems', item);\n  console.log('TodoItem', item.title, item.owner, item.realmId);\n  return (\n    <div className={'row ' + (item.done ? 'done' : '')}>\n      <div className=\"narrow\">\n        <input\n          type=\"checkbox\"\n          disabled={!can.update('done')}\n          checked={!!item.done}\n          onChange={(ev) => {\n            db.todoItems.update(item.id, {\n              done: ev.target.checked,\n            });\n          }}\n        />\n      </div>\n      <div className=\"todo-item-text\">{item.title}</div>\n      <div className=\"todo-item-trash\">\n        <button\n          disabled={!can.delete()}\n          onClick={() => db.todoItems.delete(item.id!)}\n          title=\"Delete item\"\n        >\n          <FontAwesomeIcon icon={faTrash} />\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { db } from \"../db\";\nimport { TodoItem } from \"../db/TodoItem\";\nimport { TodoList } from \"../db/TodoList\";\n\ninterface Props {\n  todoList: TodoList;\n}\n\nexport function AddTodoItem({ todoList }: Props) {\n  const [state, setState] = useState({\n    title: \"\"\n  });\n\n  return (\n    <div className=\"row add-item\">\n      <div className=\"narrow\">\n        <input type=\"checkbox\" disabled />\n      </div>\n      <div className=\"todo-item-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Add todo item ...\"\n          value={state.title}\n          onChange={ev =>\n            setState(item => ({\n              ...item,\n              title: ev.target.value\n            }))\n          }\n          onKeyUp={ev => {\n            if (ev.key === \"Enter\") {\n              db.todoItems.add({\n                todoListId: todoList.id,\n                realmId: todoList.realmId,\n                title: state.title\n              });\n              setState({\n                todoListId: todoList.id,\n                title: \"\"\n              } as TodoItem);\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { TodoList } from '../db/TodoList';\nimport { useLiveQuery, usePermissions } from 'dexie-react-hooks';\nimport { db } from '../db';\nimport { DBRealmMember } from 'dexie-cloud-addon';\n\ninterface Props {\n  todoList: TodoList;\n}\n\nexport function SharingForm({ todoList }: Props) {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const members = useLiveQuery(async () => {\n    console.log(\n      'QUERY useLiveQuery() for members on realm ',\n      todoList.realmId\n    );\n    const result = (await db.members\n      .where({ realmId: todoList.realmId })\n      //.filter((m) => !!m.email)\n      .toArray()).filter((m) => !!m.email);\n    console.log(`QUERY result: ${JSON.stringify(result)}`)\n    return result;\n  }, [todoList.realmId]);\n  console.log(`QUERY rendering result ${JSON.stringify(members)}`)\n\n  const can = usePermissions(todoList);\n  return (\n    <>\n      <h5>Shared with</h5>\n      <table>\n        <tbody>\n          {members?.map((member) => (\n            <MemberRow key={member.id} {...{ todoList, member }} />\n          ))}\n        </tbody>\n      </table>\n      <hr />\n      {can.add('members') && (\n        <>\n          <h4>Invite someone?</h4>\n          <form\n            onSubmit={(ev) => {\n              ev.preventDefault();\n              todoList.shareWith(name, email, true);\n            }}\n          >\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(ev) => setEmail(ev.target.value)}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Name\"\n              value={name}\n              onChange={(ev) => setName(ev.target.value)}\n            />\n            <button type=\"submit\" disabled={!/@/.test(email)}>\n              Send invite\n            </button>\n          </form>\n          <hr />\n        </>\n      )}\n    </>\n  );\n}\n\nfunction MemberRow({\n  member,\n  todoList,\n}: {\n  member: DBRealmMember;\n  todoList: TodoList;\n}) {\n  const can = usePermissions(db, 'members', member);\n  return (\n    <tr>\n      <td>\n        {member.name} &lt;{member.email}&gt;\n      </td>\n      <td>\n        {can.delete() ? (\n          <button onClick={() => todoList.unshareWith(member.email!)}>\n            Remove\n          </button>\n        ) : (\n          member.userId === db.cloud.currentUserId &&\n          ((member.accepted?.getTime() || 0) >\n          (member.rejected?.getTime() || 0) ? (\n            <button onClick={() => todoList.leave()}>Leave list</button>\n          ) : (\n            <button\n              onClick={() =>\n                db.members.update(member.id!, {\n                  accepted: new Date(),\n                  rejected: undefined,\n                })\n              }\n            >\n              Accept invite\n            </button>\n          ))\n        )}\n      </td>\n      <td></td>\n    </tr>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useLiveQuery, usePermissions } from 'dexie-react-hooks';\nimport { TodoList } from '../db/TodoList';\nimport { db, TodoDB } from '../db';\nimport { TodoItemView } from './TodoItemView';\nimport { AddTodoItem } from './AddTodoItem';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faShareAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { SharingForm } from './SharingForm';\nimport { usePersistedOpenState } from '../helpers/usePersistedOpenState';\n\ninterface Props {\n  todoList: TodoList;\n}\n\nexport function TodoListView({ todoList }: Props) {\n  const items = useLiveQuery(\n    () => db.todoItems.where({ todoListId: todoList.id }).toArray(),\n    [todoList.id]\n  );\n  const can = usePermissions(todoList);\n  const [showInviteForm, setShowInviteForm] = usePersistedOpenState('sharing-menu', todoList.id, false);\n\n  if (!items) return null;\n\n  return (\n    <div className=\"box\">\n      <div className=\"grid-row\">\n        <h2>{todoList.title}</h2>\n        <div className=\"todo-list-trash\">\n          <button\n            disabled={!can.delete()}\n            onClick={() => todoList.delete()}\n            title=\"Delete list\"\n          >\n            <FontAwesomeIcon icon={faTrashAlt} />\n          </button>\n        </div>\n\n        {!todoList.isPrivate() && <div className=\"todo-list-trash\">\n          <button\n            onClick={() => setShowInviteForm(!showInviteForm)}\n          >\n            <FontAwesomeIcon icon={faShareAlt} />\n          </button>\n        </div>}\n      </div>\n      {showInviteForm && <SharingForm todoList={todoList} />}\n      <div>\n        {items.map((item) => (\n          <TodoItemView key={item.id} item={item} />\n        ))}\n      </div>\n      <div>{can.add('todoItems') && <AddTodoItem todoList={todoList} />}</div>\n    </div>\n  );\n}\n","import { useLiveQuery } from 'dexie-react-hooks';\nimport { db } from '../db';\n\nexport function usePersistedOpenState(\n  namespace: string,\n  id: string,\n  defaultOpen = false\n) {\n  const isOpen =\n    useLiveQuery(\n      () => db.openCloseStates.get([namespace, id]),\n      [namespace, id],\n      defaultOpen\n    ) ?? defaultOpen;\n  const setIsOpen = (isOpen: boolean) =>\n    db.openCloseStates.put(isOpen, [namespace, id]);\n  return [isOpen, setIsOpen] as const;\n}\n","import React from \"react\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport { db } from \"../db\";\nimport { TodoListView } from \"./TodoListView\";\n\nexport function TodoLists() {\n  const lists = useLiveQuery(() => db.todoLists.toArray());\n  if (!lists) return null;\n\n  return (\n    <div>\n      {lists.map(list => (\n        <TodoListView key={list.id} todoList={list} />\n      ))}\n    </div>\n  );\n}\n","import { faList } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport React, { useState } from \"react\";\nimport { db } from \"../db\";\n\nexport function AddTodoList() {\n  const [isActive, setIsActive] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const hasAnyList = useLiveQuery(async () => {\n  const listCount = await db.todoLists.count();\n    return listCount > 0;\n  });\n\n  return !isActive ? (\n    <button className=\"large-button\" onClick={() => setIsActive(!isActive)}>\n      <FontAwesomeIcon icon={faList} />{' '}\n      {hasAnyList ? `Add another list` : `Create ToDo List`}\n    </button>\n  ) : (\n    <div className=\"box\">\n      <h2>Give your list a name:</h2>\n      <div className=\"todo-item-input\">\n        <input\n          type=\"text\"\n          autoFocus\n          placeholder=\"Name of list...\"\n          value={title}\n          onChange={ev => setTitle(ev.target.value)}\n          onKeyUp={ev => {\n            if (ev.key === \"Enter\") {\n              db.todoLists.add({ title });\n              setTitle(\"\");\n              setIsActive(false);\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { faDatabase } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { db } from '../db';\n\nexport function ResetDatabaseButton() {\n  return (\n    <button\n      className=\"large-button\"\n      onClick={async () => {\n        await db.delete();\n        window.location.reload();\n      }}\n    >\n      <FontAwesomeIcon icon={faDatabase} /> Factory reset client\n    </button>\n  );\n}\n","export const IconConnecting = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    version=\"1.1\"\n    x=\"0px\"\n    y=\"0px\"\n    viewBox=\"0 0 100 125\"\n    xmlSpace=\"preserve\"\n  >\n    <g>\n      <path d=\"M81.2,38.9c-3.5-12.9-15.3-22-28.9-22c-11.4,0-21.9,6.7-26.9,16.8C12.6,34.6,2.5,45.3,2.5,58.4     c0,13.6,11.1,24.7,24.7,24.7h47.7c12.4,0,22.6-10.1,22.6-22.6C97.5,50.3,90.8,41.6,81.2,38.9z M74.9,75.4H27.2     c-9.4,0-17-7.6-17-17s7.6-17,17-17c0.2,0,0.4,0,0.6,0c1.6,0,3.2-0.9,3.7-2.5c3.3-8.5,11.6-14.3,20.8-14.3     c10.7,0,19.9,7.6,21.9,18.1c0.3,1.6,1.6,2.9,3.2,3.1c7.2,1.2,12.4,7.3,12.4,14.6C89.8,68.7,83.1,75.4,74.9,75.4z\" />\n    </g>\n    <g transform=\"translate(14,-958.36218)\">\n      <path\n        id=\"third\"\n        d=\"m 35,1000.3621 c -8.058,0 -15.4484,2.7386 -21.2188,7.1875 a 2.0002,2.0002 0 1 0 2.4376,3.1562 c 5.0947,-3.9281 11.635,-6.3437 18.7812,-6.3437 7.1462,0 13.6865,2.4156 18.7812,6.3437 a 2.0002,2.0002 0 1 0 2.4376,-3.1562 C 50.4484,1003.1007 43.058,1000.3621 35,1000.3621\"\n      />\n      <path\n        id=\"second\"\n        d=\"m 35,1009.3621 c -5.8189,0 -11.3007,1.7801 -15.5625,5.2812 a 2.0002,2.0002 0 1 0 2.5313,3.0938 c 3.4852,-2.8633 8.0339,-4.375 13.0312,-4.375 4.9973,0 9.546,1.5117 13.0312,4.375 a 2.0002,2.0002 0 1 0 2.5313,-3.0938 c -4.2618,-3.5011 -9.7436,-5.2812 -15.5625,-5.2812\"\n      />\n      <path\n        opacity=\"0.4\"\n        id=\"first\"\n        d=\"m 35,1018.9376 c -3.6493,0 -7.1142,1.1668 -9.8125,3.3437 a 2.0009763,2.0009763 0 0 0 2.5,3.125 c 1.9329,-1.5594 4.5256,-2.4687 7.3125,-2.4687 2.7869,0 5.3796,0.9093 7.3125,2.4687 a 2.0009763,2.0009763 0 1 0 2.5,-3.125 c -2.6983,-2.1769 -6.1632,-3.3437 -9.8125,-3.3437 z m 0,8.0625 z\"\n      />\n    </g>\n    <animate\n      xlinkHref=\"#first\"\n      attributeName=\"opacity\"\n      dur=\"3s\"\n      begin=\"0s\"\n      calcMode=\"discrete\"\n      from=\"0.2\"\n      to=\"1\"\n      repeatDur=\"indefinite\"\n    />\n    <animate\n      xlinkHref=\"#second\"\n      attributeName=\"opacity\"\n      dur=\"3s\"\n      begin=\"0.7s\"\n      calcMode=\"discrete\"\n      from=\"0.2\"\n      to=\"1\"\n      repeatDur=\"indefinite\"\n    />\n    <animate\n      xlinkHref=\"#third\"\n      attributeName=\"opacity\"\n      dur=\"3s\"\n      begin=\"1.4s\"\n      calcMode=\"discrete\"\n      from=\"0.2\"\n      to=\"1\"\n      repeatDur=\"indefinite\"\n    />\n  </svg>\n);\n","/*!\n\n    This icon is licensed under Creative Commons license.\n\n    Attribution Text: \"Error by Briyan Design from the Noun Project\"\n\n    Make sure to give the creator credits by showing the attribution text in your app!\n    Else, buy a commercial license from The Noun Project to use the icon (https://thenounproject.com).\n    \n*/\nexport const IconError = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    xmlSpace=\"preserve\"\n    version=\"1.1\"\n    style={{shapeRendering: \"geometricPrecision\",\n      textRendering: \"geometricPrecision\",\n      // @ts-ignore\n      imageRendering: \"optimizeQuality\"\n    }}\n    viewBox=\"0 0 755 633.75\"\n    x=\"0px\"\n    y=\"0px\"\n    fillRule=\"evenodd\"\n    clipRule=\"evenodd\"\n  >\n    <g>\n      <path d=\"M205 111c69,-162 315,-141 357,29 47,9 88,40 108,84 139,63 99,283 -63,283l-459 0c-155,0 -201,-204 -76,-276 14,-64 68,-112 133,-120zm41 287c-15,16 -40,-8 -24,-24 38,-39 102,-54 155,-54 53,0 118,15 156,54 15,16 -9,40 -24,24 -32,-32 -88,-44 -132,-44 -43,0 -100,12 -131,44zm235 -190c-18,0 -33,15 -33,33 0,17 15,32 33,32 17,0 32,-15 32,-32 0,-18 -15,-33 -32,-33zm-207 0c18,0 33,15 33,33 0,17 -15,32 -33,32 -18,0 -32,-15 -32,-32 0,-18 14,-33 32,-33zm364 49c116,36 90,207 -31,207l-459 0c-117,0 -148,-163 -37,-204 3,-60 52,-108 113,-108 4,0 8,0 11,0 41,-161 280,-140 290,27 2,0 5,0 8,0 49,0 91,33 105,78z\" />\n    </g>\n  </svg>\n);\n","/*!\n\n    This icon is licensed under Creative Commons license.\n\n    Attribution Text: \"No cloud by Bernar  Novalyi from the Noun Project\"\n\n    Make sure to give the creator credits by showing the attribution text in your app!\n    Else, buy a commercial license from The Noun Project to use the icon (https://thenounproject.com).\n    \n*/\nexport const IconOffline = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    data-name=\"Layer 1\"\n    viewBox=\"0 0 100 125\"\n    x=\"0px\"\n    y=\"0px\"\n  >\n    <path d=\"M88.17,69.32A22,22,0,0,0,77.79,37.77a22,22,0,0,0-21.91-20.2,20.29,20.29,0,0,0-13.67,4.81l4.57,5.3a13.31,13.31,0,0,1,9.1-3.11,15,15,0,0,1,15,15c0,.06,0,.13,0,.19s0,.26,0,.39l-.1,2.75,2.65.75a15,15,0,0,1,8.79,22.1Z\" />\n    <path d=\"M28.76,80H60.44V73H28.76a15,15,0,0,1-15-15A17,17,0,0,1,23.6,42.7l-2.79-6.42A23.91,23.91,0,0,0,6.78,58,22,22,0,0,0,28.76,80Z\" />\n    <rect\n      x=\"45.53\"\n      y=\"-4.58\"\n      width=\"7\"\n      height=\"106.75\"\n      transform=\"translate(-20.14 48.96) rotate(-45)\"\n    />\n  </svg>\n);\n","/*!\n\n    This icon is licensed under Creative Commons license.\n\n    Attribution Text: \"Data by Alice Design from the Noun Project\"\n\n    Make sure to give the creator credits by showing the attribution text in your app!\n    Else, buy a commercial license from The Noun Project to use the icon (https://thenounproject.com).\n    \n*/\nexport const IconOnline = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    version=\"1.1\"\n    x=\"0px\"\n    y=\"0px\"\n    viewBox=\"0 0 100 125\"\n    xmlSpace=\"preserve\"\n  >\n    <g>\n      <path d=\"M81.2,38.9c-3.5-12.9-15.3-22-28.9-22c-11.4,0-21.9,6.7-26.9,16.8C12.6,34.6,2.5,45.3,2.5,58.4     c0,13.6,11.1,24.7,24.7,24.7h47.7c12.4,0,22.6-10.1,22.6-22.6C97.5,50.3,90.8,41.6,81.2,38.9z M74.9,75.4H27.2     c-9.4,0-17-7.6-17-17s7.6-17,17-17c0.2,0,0.4,0,0.6,0c1.6,0,3.2-0.9,3.7-2.5c3.3-8.5,11.6-14.3,20.8-14.3     c10.7,0,19.9,7.6,21.9,18.1c0.3,1.6,1.6,2.9,3.2,3.1c7.2,1.2,12.4,7.3,12.4,14.6C89.8,68.7,83.1,75.4,74.9,75.4z\" />\n      <path d=\"M60.8,39.5c-0.8-0.6-1.9-0.5-2.6,0.2L43.4,56.5l-4.5-5.2c-0.7-0.8-1.8-0.9-2.6-0.2l-3.2,2.6c-0.8,0.6-0.9,1.8-0.3,2.6     l6.6,8.9c0.4,0.5,0.9,0.7,1.5,0.8l4.9,0c0.6,0,1.2-0.3,1.5-0.8l15.9-21.3c0.6-0.8,0.5-1.9-0.3-2.6L60.8,39.5z\" />\n    </g>\n  </svg>\n);\n","/*!\n\n    This icon is licensed under Creative Commons license.\n\n    Attribution Texts: \"Inspired by icons by Alice Design from the Noun Project\"\n\t\t\t\t\t\t\t\t\t\t \t \"and by Julien Deveaux from the Noun project\"\n\n    Make sure to give the author credits by showing the attribution text in your app!\n    Else, buy a commercial license from The Noun Project to use the icon (https://thenounproject.com).\n\t\tThis particular icon is a combination of cloud icons from thenounproject.\n    \n*/\nexport const IconSleepyCloud = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    version=\"1.1\"\n    x=\"0px\"\n    y=\"0px\"\n    viewBox=\"0 0 100 125\"\n    xmlSpace=\"preserve\"\n  >\n    <g transform=\"scale(1 0.95) translate(0 10)\">\n      {/* Cloud */}\n      <path d=\"M81.2,38.9c-3.5-12.9-15.3-22-28.9-22c-11.4,0-21.9,6.7-26.9,16.8C12.6,34.6,2.5,45.3,2.5,58.4     c0,13.6,11.1,24.7,24.7,24.7h47.7c12.4,0,22.6-10.1,22.6-22.6C97.5,50.3,90.8,41.6,81.2,38.9z M74.9,75.4H27.2     c-9.4,0-17-7.6-17-17s7.6-17,17-17c0.2,0,0.4,0,0.6,0c1.6,0,3.2-0.9,3.7-2.5c3.3-8.5,11.6-14.3,20.8-14.3     c10.7,0,19.9,7.6,21.9,18.1c0.3,1.6,1.6,2.9,3.2,3.1c7.2,1.2,12.4,7.3,12.4,14.6C89.8,68.7,83.1,75.4,74.9,75.4z\" />\n    </g>\n    <g transform=\"translate(-40,-20) scale(1.5 1.5)\">\n      {/* Z z */}\n      <polygon points=\"84.453,20.676 87.936,20.687 84.442,23.66 84.433,25.766 91.565,25.793 91.572,23.755   88.007,23.741 91.58,20.701 91.591,18.665 84.458,18.636 \" />\n  \t\t<polygon points=\"82.076,21.047 72.533,21.011 72.525,23.739 77.184,23.755 72.507,27.732 72.5,30.552 82.042,30.589   82.051,27.861 77.281,27.842 82.065,23.774 \" />\n    </g>\n    <g transform=\"translate(-29 -10) scale(1.5 1.5)\">\n      {/* Left eye */}\n      <path\n        d=\"M42.5,49.062h-3.75c-0.518,0-0.938,0.419-0.938,0.938s0.419,0.938,0.938,0.938h3.75  c0.518,0,0.938-0.419,0.938-0.938S43.018,49.062,42.5,49.062z\"\n      />\n      {/* Right eye */}\n      <path\n        d=\"M61.25,49.062H57.5c-0.518,0-0.938,0.419-0.938,0.938s0.419,0.938,0.938,0.938h3.75  c0.518,0,0.938-0.419,0.938-0.938S61.768,49.062,61.25,49.062z\"\n      />\n    </g>\n  </svg>\n);\n","import \"./SvgIcon.css\";\nimport { ReactNode } from \"react\";\n\ninterface Props {\n  children?: ReactNode;\n  className?: string;\n  title?: string;\n}\n\nexport function SvgIcon({ children, className, title }: Props) {\n  return <div className={\"svg-icon\" + (className ? ' ' + className : '')} title={title}>\n    <div>{children}</div>\n  </div>;\n}\n","import { useObservable } from 'react-use';\nimport { db } from '../../db';\nimport { IconConnecting } from '../icons/IconConnecting';\nimport { IconError } from '../icons/IconError';\nimport { IconOffline } from '../icons/IconOffline';\nimport { IconOnline } from '../icons/IconOnline';\nimport { IconSleepyCloud } from '../icons/IconSleepyCloud';\nimport { SvgIcon } from './SvgIcon';\n\ninterface Props {\n  className?: string;\n}\nexport function SyncStatusIcon({ className }: Props) {\n  const syncStatus = useObservable(db.cloud.syncState);\n  switch (syncStatus?.status) {\n    case 'not-started':\n      return <SvgIcon className={className}></SvgIcon>;\n    case 'connecting':\n      return (\n        <SvgIcon className={className}>\n          <IconConnecting />\n        </SvgIcon>\n      );\n    case 'connected':\n      return (\n        <SvgIcon className={className}>\n          <IconOnline />\n        </SvgIcon>\n      );\n    case 'disconnected':\n      return (\n        <SvgIcon className={className}>\n          <IconSleepyCloud />\n        </SvgIcon>\n      );\n    case 'offline':\n      return (\n        <SvgIcon\n          className={className}\n          title={syncStatus.error && '' + syncStatus.error}\n        >\n          <IconOffline />\n        </SvgIcon>\n      );\n    case 'error':\n      return (\n        <SvgIcon\n          className={className}\n          title={syncStatus.error && '' + syncStatus.error}\n        >\n          <IconError />\n        </SvgIcon>\n      );\n\n    default:\n      /*return (\n        <SvgIcon className={className}>\n          <IconInSync />\n        </SvgIcon>\n      );*/\n      return <SvgIcon className={className}>{syncStatus?.phase}</SvgIcon>;\n  }\n}\n","export function handleError<TArgs extends any[], TResult>(\n  fn: (...args: TArgs) => Promise<TResult>\n) {\n  return (...args: TArgs) =>\n    fn(...args).catch((error) => {\n      if (error?.name === 'AbortError') {\n        // AbortErrors are normal. It means a user has willingly cancelled a dialog\n        // or aborted a transaction. Give a lower log level.\n        console.debug(error);\n      } else {\n        console.error(error);\n      }\n    });\n}\n","import { db } from \"./db\";\n\nexport async function logout() {\n  await db.delete();\n  window.location.reload();\n}","import React from 'react';\nimport {\n  Navbar,\n  NavDropdown,\n  Button,\n  NavLink,\n} from 'react-bootstrap';\nimport { useObservable } from 'react-use';\nimport { db } from '../../db';\nimport { SyncStatusIcon } from './SyncStatusIcon';\nimport './NavBar.css';\nimport importData from '../../data/importfile.json';\nimport { handleError } from '../../helpers/handleError';\nimport { logout } from '../../db/logout';\n\nexport function NavBar() {\n  const currentUser = useObservable(db.cloud.currentUser);\n  return (\n    <Navbar\n      fixed=\"top\"\n      sticky=\"top\"\n      collapseOnSelect\n      expand=\"lg\"\n      bg=\"dark\"\n      variant=\"dark\"\n    >\n      <Navbar.Brand>Dexie Cloud ToDo App</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Text className=\"d-inline-flex d-lg-none status-icons-collapsed\">\n        <SyncStatusIcon />\n      </Navbar.Text>\n      <Navbar.Collapse\n        id=\"responsive-navbar-nav\"\n        className=\"justify-content-end\"\n      >\n        {currentUser?.isLoggedIn ? (\n          <>\n            <Navbar.Text className=\"d-none d-lg-inline-flex status-icons-not-collapsed\">\n              <SyncStatusIcon />\n            </Navbar.Text>\n            <NavDropdown title={currentUser.name} id=\"basic-nav-dropdown\">\n              <NavDropdown.Item onClick={() => logout()}>\n                Logout\n              </NavDropdown.Item>\n            </NavDropdown>\n          </>\n        ) : (\n          <NavDropdown id=\"basic-nav-dropdown\" title=\"Sign in or create your account\">\n            <NavDropdown.Header>Sign in a demo user</NavDropdown.Header>\n            <>\n              {Object.keys(importData.demoUsers).map((email) => (\n                <NavDropdown.Item key={email}>\n                  <NavLink\n                    onClick={handleError(() =>\n                      db.cloud.login({ grant_type: 'demo', email })\n                    )}\n                  >\n                    {email}\n                  </NavLink>\n                </NavDropdown.Item>\n              ))}\n            </>\n            <NavDropdown.Divider />\n            <NavDropdown.Header>Sign in real user</NavDropdown.Header>\n            <NavDropdown.Item>\n              <Button onClick={handleError(() => db.cloud.login())}>\n                Sign in / sign up yourself\n              </Button>\n            </NavDropdown.Item>\n          </NavDropdown>\n        )}\n      </Navbar.Collapse>\n      {/*<div style={{position: \"absolute\", top: 0, right: 10}}>\n            <SyncStatusIcon />\n          </div>*/}\n    </Navbar>\n  );\n}\n","import { useObservable } from 'react-use';\nimport { db } from '../db';\n\nexport function Invites() {\n  const currentUser = useObservable(db.cloud.currentUser);\n  const invites = useObservable(db.cloud.invites, []);\n  if (invites.length === 0) return null;\n  return (\n    <>\n      <h3>You've got invited!</h3>\n      <table>\n        <tr>\n          <th></th>\n          <th>Name of list</th>\n          <th>Invited by</th>\n        </tr>\n        {invites.map((i) => (\n          <tr key={i.id}>\n            <td>\n              {i.accepted ? (\n                '✓'\n              ) : i.email === currentUser?.email ? (\n                <button\n                  onClick={() =>\n                    db.members.update(i.id!, { accepted: new Date() })\n                  }\n                >\n                  Accept\n                </button>\n              ) : (\n                ''\n              )}\n            </td>\n            <td>{i.realm?.name}</td>\n            <td>{i.invitedBy?.name}</td>\n          </tr>\n        ))}\n      </table>\n    </>\n  );\n}\n","import React from 'react';\nimport { TodoLists } from './components/TodoLists';\nimport { AddTodoList } from './components/AddTodoList';\nimport { ResetDatabaseButton } from './components/ResetDatabaseButton';\nimport { NavBar } from './components/navbar/NavBar';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Invites } from './components/Invites';\n\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n      <Invites />\n      <TodoLists />\n      <AddTodoList />\n      <ResetDatabaseButton />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import Dexie from \"dexie\";\n\n//\n// Put Dexie on window.\n// (makes it possible to use Dexie in devtools console)\n//\n// Enables an easy way of seeing which version is used and inspect the database:\n//\n//  > Dexie.semVer\n// \"3.2.0-beta-2\"\n//  > Dexie.Cloud.version\n//  \"1.0.0-beta.6\"\n//  > await Dexie.getDatabaseNames()\n//  (2) [\"TodoDBCloud\", \"TodoDBCloud-z0lesejpr\"]\n//  > db = await new Dexie(\"TodoDBCloud-z0lesejpr\").open()\n//  > db.tables\n//  (14) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n//  > await db.table('todoItems').toArray()\n//  (8) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\n\n//@ts-ignore\nwindow.Dexie = Dexie; \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport './helpers/simplify-debugging';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { TodoDB } from './TodoDB';\n\nexport const db = new TodoDB();\n\n","import { Entity } from 'dexie';\nimport type { TodoDB } from './TodoDB';\nimport { getTiedRealmId } from 'dexie-cloud-addon';\n\n/** Since there are some actions associated with\n * this entity (share(), unshare() etc) it can be\n * nice to use a mapped class here.\n *\n * We could equally well have declared TodoList as an interface\n * and write helper functions on the side.\n *\n * The Entity base class tells dexie to inject db as a prop this.db.\n * This is to avoid recursive dependencies when you need to access\n * db from within a method.\n */\nexport class TodoList extends Entity<TodoDB> {\n  //\n  // Persisted Properties\n  //\n\n  id!: string;\n  realmId!: string;\n  owner!: string;\n  title!: string;\n\n  //\n  // Methods\n  //\n\n  isSharable() {\n    return this.realmId === getTiedRealmId(this.id);\n  }\n\n  isPrivate() {\n    return this.id[0] === '#';\n  }\n\n  async makeSharable() {\n    if (this.isPrivate())\n      throw new Error('Private lists cannot be made sharable');\n    const currentRealmId = this.realmId;\n    const newRealmId = getTiedRealmId(this.id);\n    const { db } = this;\n\n    await this.db.transaction(\n      'rw',\n      [db.todoLists, db.todoItems, db.realms],\n      async () => {\n        // Create tied realm\n        // We use put() here in case same user does this on\n        // two offline devices to add different members - we don't\n        // want one of the actions to fail - we want both to succeed\n        // and add both members\n        await db.realms.put({\n          realmId: newRealmId,\n          name: this.title,\n          represents: 'a to-do list',\n        });\n\n        // \"Realmify entity\" (setting realmId equals own id will make it become a Realm)\n        await db.todoLists.update(this.id!, { realmId: newRealmId });\n        // Move all todo items into the new realm consistently (modify() is consistent across sync peers)\n        await db.todoItems\n          .where({\n            realmId: currentRealmId,\n            todoListId: this.id,\n          })\n          .modify({ realmId: newRealmId });\n      }\n    );\n    return newRealmId;\n  }\n\n  async unshareWithEveryone() {\n    const { db } = this;\n    const tiedRealmId = getTiedRealmId(this.id);\n    await db.transaction(\n      'rw',\n      [db.todoLists, db.todoItems, db.members, db.realms],\n      async () => {\n        // Move todoItems out of the realm in a sync-consistent operation:\n        await db.todoItems\n          .where({\n            realmId: tiedRealmId,\n            todoListId: this.id,\n          })\n          .modify({ realmId: db.cloud.currentUserId });\n\n        // Move the todoList back into your private realm:\n        await db.todoLists.update(this.id, {\n          realmId: this.db.cloud.currentUserId,\n        });\n\n        // Remove all access (Collection.delete() is a sync-consistent operation)\n        await db.members.where('realmId').equals(tiedRealmId).delete();\n        // Delete tied realm\n        await db.realms.delete(tiedRealmId);\n      }\n    );\n  }\n\n  async shareWith(name: string, email: string, sendEmail: boolean) {\n    const { db } = this;\n    await db.transaction(\n      'rw',\n      [db.members, db.todoLists, db.todoItems, db.realms],\n      async () => {\n        let realmId = this.realmId;\n        if (!this.isSharable()) {\n          realmId = await this.makeSharable();\n        }\n\n        // Add given name and email as a member with full permissions\n        await this.db.members.add({\n          realmId,\n          name,\n          email,\n          invite: sendEmail,\n          permissions: { add: ['todoItems'], update: { todoItems: ['done'] } },\n        });\n      }\n    );\n  }\n\n  async unshareWith(email: string) {\n    const { db } = this;\n    await db.transaction(\n      'rw',\n      [db.todoLists, db.todoItems, db.members, db.realms],\n      async () => {\n        await db.members\n          .where({\n            realmId: this.realmId,\n            email,\n          })\n          .delete();\n        const numMembers = await db.members\n          .where({ realmId: this.realmId })\n          .count();\n        if (numMembers <= 1) {\n          // Only our own member left.\n          await this.unshareWithEveryone();\n        }\n      }\n    );\n  }\n\n  async leave() {\n    const { db } = this;\n    await db.members\n      .where({ userId: db.cloud.currentUserId })\n      .modify({ rejected: new Date(), accepted: undefined });\n  }\n\n  async delete() {\n    const { db } = this;\n    await db.transaction(\n      'rw',\n      [db.todoLists, db.todoItems, db.members, db.realms],\n      () => {\n        // Delete todo items\n        db.todoItems\n          .where({\n            todoListId: this.id,\n          })\n          .delete();\n\n        // Delete the list\n        db.todoLists.delete(this.id!);\n\n        // Delete any tied realm and related access:\n        const tiedRealmId = getTiedRealmId(this.id);\n        db.members.where({ realmId: tiedRealmId }).delete();\n        db.realms.delete(tiedRealmId);\n      }\n    );\n  }\n}\n","import Dexie, { Table } from 'dexie';\nimport dexieCloud, { DexieCloudTable } from 'dexie-cloud-addon';\nimport { populate } from './populate';\nimport { TodoItem } from './TodoItem';\nimport { TodoList } from './TodoList';\n\nexport class TodoDB extends Dexie {\n  // Table accessors are auto-generated by Dexie (from schema below)\n  todoLists!: DexieCloudTable<TodoList, 'id'>;\n  todoItems!: DexieCloudTable<TodoItem, 'id'>;\n  openCloseStates!: Table<boolean, [string, string]>;\n\n  constructor() {\n    super('TodoDBCloud2', { addons: [dexieCloud] });\n    this.version(14).stores({\n      todoLists: `@id`,\n      todoItems: `@id, [todoListId+realmId]`,\n      openCloseStates: `` // Set of open ids (persisted local state only)\n    });\n    this.todoLists.mapToClass(TodoList);\n    this.on('populate', () => {\n      this.on('ready', () => {\n        return populate(this);\n      });\n    });\n    // Configure cloud:\n    this.cloud.configure({\n      unsyncedTables: ['openCloseStates'],\n      databaseUrl: process.env.REACT_APP_DBURL!,\n      tryUseServiceWorker: true, // true!\n      requireAuth: false,\n    });\n  }\n}\n","export * from './db';\nexport * from './TodoDB';\nexport * from './TodoItem';\nexport * from './TodoList';\n"],"sourceRoot":""}