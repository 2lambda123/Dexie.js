{"version":3,"sources":["../node_modules/workbox-core/_version.js","../node_modules/workbox-expiration/_version.js","../node_modules/workbox-precaching/_version.js","../node_modules/workbox-routing/_version.js","../node_modules/workbox-strategies/_version.js","../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/dexie/dist/modern/dexie.mjs","../node_modules/rxjs/node_modules/tslib/tslib.es6.mjs","../node_modules/rxjs/src/internal/util/isFunction.ts","../node_modules/rxjs/src/internal/util/createErrorClass.ts","../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","../node_modules/rxjs/src/internal/util/arrRemove.ts","../node_modules/rxjs/src/internal/Subscription.ts","../node_modules/rxjs/src/internal/config.ts","../node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts","../node_modules/rxjs/src/internal/util/reportUnhandledError.ts","../node_modules/rxjs/src/internal/util/noop.ts","../node_modules/rxjs/src/internal/NotificationFactories.ts","../node_modules/rxjs/src/internal/util/errorContext.ts","../node_modules/rxjs/src/internal/Subscriber.ts","../node_modules/rxjs/src/internal/symbol/observable.ts","../node_modules/rxjs/src/internal/util/identity.ts","../node_modules/rxjs/src/internal/util/pipe.ts","../node_modules/rxjs/src/internal/Observable.ts","../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","../node_modules/rxjs/src/internal/Subject.ts","../node_modules/rxjs/src/internal/BehaviorSubject.ts","../node_modules/rxjs/src/internal/util/EmptyError.ts","../node_modules/rxjs/src/internal/util/isArrayLike.ts","../node_modules/rxjs/src/internal/util/isPromise.ts","../node_modules/rxjs/src/internal/util/isInteropObservable.ts","../node_modules/rxjs/src/internal/util/isAsyncIterable.ts","../node_modules/rxjs/src/internal/util/throwUnobservableError.ts","../node_modules/rxjs/src/internal/symbol/iterator.ts","../node_modules/rxjs/src/internal/util/isIterable.ts","../node_modules/rxjs/src/internal/util/isReadableStreamLike.ts","../node_modules/rxjs/src/internal/observable/innerFrom.ts","../node_modules/rxjs/src/internal/util/executeSchedule.ts","../node_modules/rxjs/src/internal/util/lift.ts","../node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts","../node_modules/rxjs/src/internal/operators/observeOn.ts","../node_modules/rxjs/src/internal/operators/subscribeOn.ts","../node_modules/rxjs/src/internal/scheduled/scheduleAsyncIterable.ts","../node_modules/rxjs/src/internal/scheduled/scheduled.ts","../node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","../node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","../node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","../node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","../node_modules/rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts","../node_modules/rxjs/src/internal/observable/from.ts","../node_modules/rxjs/src/internal/operators/filter.ts","../node_modules/rxjs/src/internal/util/isScheduler.ts","../node_modules/rxjs/src/internal/util/args.ts","../node_modules/rxjs/src/internal/observable/of.ts","../node_modules/rxjs/src/internal/operators/map.ts","../node_modules/rxjs/src/internal/operators/mergeMap.ts","../node_modules/rxjs/src/internal/operators/mergeInternals.ts","../node_modules/rxjs/src/internal/util/mapOneOrManyArgs.ts","../node_modules/rxjs/src/internal/observable/fromEvent.ts","../node_modules/rxjs/src/internal/operators/mergeAll.ts","../node_modules/rxjs/src/internal/observable/empty.ts","../node_modules/rxjs/src/internal/observable/merge.ts","../node_modules/rxjs/src/internal/operators/share.ts","../node_modules/rxjs/src/internal/scheduler/Action.ts","../node_modules/rxjs/src/internal/scheduler/intervalProvider.ts","../node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","../node_modules/rxjs/src/internal/scheduler/dateTimestampProvider.ts","../node_modules/rxjs/src/internal/Scheduler.ts","../node_modules/rxjs/src/internal/scheduler/async.ts","../node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","../node_modules/rxjs/src/internal/observable/timer.ts","../node_modules/rxjs/src/internal/util/isDate.ts","../node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts","../node_modules/rxjs/src/internal/observable/combineLatest.ts","../node_modules/rxjs/src/internal/util/createObject.ts","../node_modules/rxjs/src/internal/observable/throwError.ts","../node_modules/rxjs/src/internal/operators/take.ts","../node_modules/rxjs/src/internal/operators/switchMap.ts","../node_modules/rxjs/src/internal/observable/concat.ts","../node_modules/rxjs/src/internal/operators/concatAll.ts","../node_modules/rxjs/src/internal/operators/delayWhen.ts","../node_modules/rxjs/src/internal/operators/ignoreElements.ts","../node_modules/rxjs/src/internal/operators/mapTo.ts","../node_modules/rxjs/src/internal/operators/delay.ts","../node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts","../node_modules/rxjs/src/internal/operators/tap.ts","../node_modules/rxjs/src/internal/operators/debounceTime.ts","../node_modules/rxjs/src/internal/operators/startWith.ts","../node_modules/rxjs/src/internal/operators/skip.ts","../node_modules/rxjs/src/internal/operators/catchError.ts","../dist/modern/service-worker.js","../node_modules/rxjs/src/internal/firstValueFrom.ts","../node_modules/workbox-core/_private/logger.js","../node_modules/workbox-core/models/messages/messageGenerator.js","../node_modules/workbox-core/_private/WorkboxError.js","../node_modules/workbox-core/models/quotaErrorCallbacks.js","../node_modules/workbox-core/_private/cacheNames.js","../node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","../node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","../node_modules/workbox-core/_private/dontWaitFor.js","../node_modules/workbox-core/_private/Deferred.js","../node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","../node_modules/workbox-core/_private/getFriendlyURL.js","../node_modules/workbox-core/_private/timeout.js","../node_modules/workbox-core/_private/waitUntil.js","../node_modules/workbox-core/copyResponse.js","../node_modules/idb/build/wrap-idb-value.js","../node_modules/idb/build/index.js","../node_modules/workbox-expiration/models/CacheTimestampsModel.js","../node_modules/workbox-expiration/CacheExpiration.js","../node_modules/workbox-expiration/ExpirationPlugin.js","../node_modules/workbox-core/registerQuotaErrorCallback.js","../node_modules/workbox-precaching/utils/createCacheKey.js","../node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js","../node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js","../node_modules/workbox-strategies/StrategyHandler.js","../node_modules/workbox-strategies/Strategy.js","../node_modules/workbox-precaching/PrecacheStrategy.js","../node_modules/workbox-precaching/PrecacheController.js","../node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","../node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","../node_modules/workbox-routing/utils/normalizeHandler.js","../node_modules/workbox-routing/Route.js","../node_modules/workbox-routing/utils/constants.js","../node_modules/workbox-routing/RegExpRoute.js","../node_modules/workbox-routing/Router.js","../node_modules/workbox-routing/registerRoute.js","../node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","../node_modules/workbox-precaching/PrecacheRoute.js","../node_modules/workbox-precaching/utils/generateURLVariations.js","../node_modules/workbox-strategies/utils/messages.js","../node_modules/workbox-precaching/precacheAndRoute.js","../node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","../node_modules/workbox-strategies/StaleWhileRevalidate.js","service-worker.ts","../node_modules/workbox-core/clientsClaim.js","../node_modules/workbox-precaching/precache.js","../node_modules/workbox-precaching/addRoute.js","../node_modules/workbox-precaching/createHandlerBoundToURL.js"],"names":["self","_","e","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","_typeof","obj","Symbol","iterator","constructor","prototype","Op","Object","hasOwn","hasOwnProperty","defineProperty","key","desc","value","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","args","arguments","apply","_toPropertyKey","input","hint","prim","toPrimitive","res","String","Number","_defineProperty","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","_getPrototypeOf","o","bind","_setPrototypeOf","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_construct","Parent","Class","a","instance","Function","_wrapNativeSuper","_cache","Map","toString","indexOf","has","get","set","Wrapper","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","minLen","n","from","test","allowArrayLike","it","isArray","F","s","_e","f","normalCompletion","didErr","step","_e2","_slicedToArray","_i","_s","_x","_r","_arr","_n","_d","subClass","superClass","_possibleConstructorReturn","ReferenceError","Derived","hasNativeReflectConstruct","Super","NewTarget","Constructor","_defineProperties","props","descriptor","protoProps","staticProps","globalThis","window","global","t","r","l","u","c","extend","h","d","y","m","b","setImmediate","setTimeout","g","substr","v","isFrozen","parseInt","splice","w","concat","x","k","split","map","O","Set","P","E","K","WeakMap","S","A","C","j","q","D","I","B","T","R","location","href","M","N","stack","$","L","message","join","U","V","z","VersionChanged","DatabaseClosed","Abort","TransactionInactive","MissingAPI","W","Y","G","failures","failedKeys","successCount","H","failuresByPos","_stack","Q","reduce","X","J","inner","Syntax","SyntaxError","Type","Range","RangeError","Z","ee","te","ne","re","se","ie","onsuccess","onerror","oe","ae","ue","le","ModifyError","DexieError","BulkError","ce","_ref2","crypto","subtle","digest","Uint8Array","_ref3","he","de","fe","pe","ye","me","be","ge","Ke","we","queueMicrotask","Ne","ve","xe","ke","Oe","Pe","id","ref","unhandleds","onunhandled","pgp","env","finalize","Ee","Se","Ae","Ce","_listeners","_lib","_PSD","_stackHolder","_prev","_numPrev","_state","_value","Ie","De","je","Qe","_this","et","Te","qe","at","Me","onFulfilled","onRejected","psd","$e","_then","Be","Le","_promise","some","Ue","Re","Fe","ot","Ve","ze","st","catch","finally","timeout","_this2","Timeout","clearTimeout","all","tt","race","PSD","totalEchoes","newPSD","Je","usePSD","scheduler","rejectionMapper","follow","_this3","allSettled","status","reason","any","AggregateError","We","awaits","echoes","Ye","Ge","He","Xe","parent","PromiseProp","nthen","ut","gthen","Ze","lt","nt","rt","ct","idbdb","openComplete","letThrough","_vip","_createTransaction","_dbSchema","PR1398_maxLoop","InvalidState","isOpen","console","warn","_close","open","trans","idbtrans","commit","_completion","dbOpenError","isBeingOpened","_options","autoOpen","dbReadyPromise","ht","fromCharCode","dt","ft","pt","navigator","userAgent","yt","mt","bt","gt","vt","lower","lowerOpen","upper","upperOpen","wt","_t","xt","kt","NaN","Ot","ArrayBuffer","isView","buffer","byteOffset","byteLength","Pt","_classCallCheck","_createClass","_tx","schema","NotFound","db","_novip","transless","_this4","where","first","_trans","core","hook","reading","fire","WhereClause","equals","indexes","primKey","compound","every","keyPath","sort","_maxKey","JSON","stringify","idxByName","_deps","indexedDB","cmp","_r$reduce","_ref4","_ref5","multi","_r$reduce2","toCollection","and","count","offset","limit","each","toArray","Collection","mappedClass","_e3","_inherits","_super","_createSuper","getOwnPropertyNames","add","readHook","unsubscribe","mapToClass","_this5","_this$schema$primKey","auto","mutate","numFailures","lastResult","modify","InvalidArgument","_this6","_this$schema$primKey2","_this7","_this8","range","_this9","getMany","_this10","allKeys","_this10$schema$primKe","wantResults","_ref6","results","_this11","_this11$schema$primKe","_ref7","_this12","changes","cache","_ref8","_Object$keys","Constraint","updates","changeSpecs","_ref9","_i2","_Object$keys2","_this13","_ref10","Et","subscribe","addEventType","subscribers","Kt","St","algorithm","or","justLimit","replayFilter","At","Ct","jt","isPrimKey","primaryKey","getIndexByKeyPath","index","Schema","qt","openCursor","keysOnly","dir","unique","query","Dt","fail","_iterate","It","valueMapper","start","continue","Bt","_ctx","table","_read","_this14","Math","min","_this15","_ref11","advance","isMatch","_ondirectionchange","eachKey","_ref12","firstKey","_this16","_write","_a$schema$primaryKey","outbound","extractKey","modifyChunkSize","_step","_iterator","_createForOfIteratorHelper","clone","primaryKeys","Tt","criteria","changeSpec","_ref13","Rt","Ft","Mt","zt","Nt","Vt","$t","Lt","toUpperCase","toLowerCase","Ut","_addAlgorithm","_cmp","between","startsWith","_this17","_ascending","_descending","inAnyRange","includeLowers","includeUppers","_this18","_min","_max","Wt","Yt","stopPropagation","preventDefault","Gt","Ht","_reculock","lockOwnerFor","_blockedFuncs","_locked","shift","_this19","mode","OpenFailed","active","transaction","storeNames","durability","chromeTransactionDurability","_reject","onabort","on","oncomplete","_resolve","storagemutated","mutatedParts","_this20","ReadOnly","_lock","_unlock","_root","_waitingFor","_waitingQueue","objectStore","_spinCount","abort","_memoizedTables","Table","Qt","src","Xt","Jt","Zt","only","en","tn","nn","rn","sn","upperBound","lowerBound","bound","_ref14","objectStoreNames","tables","autoIncrement","isPrimaryKey","indexNames","multiEntry","hasGetAll","match","_ref15","clear","delete","_ref18","_ref19","_pos","_ref20","getAll","getAllKeys","openKeyCursor","_ref21","___id","continuePrimaryKey","_this21","_ref22","MIN_KEY","MAX_KEY","_ref23","IDBKeyRange","_ref24","_objectSpread","dbcore","_middlewares","an","Transaction","un","ln","_cfg","version","cn","_storeNames","dn","populate","_versions","pn","dbschema","yn","hn","change","recreate","Upgrade","deleteIndex","del","contentUpgrade","deleteObjectStore","contains","def","createObjectStore","createIndex","_hasGetAll","WorkerGlobalScope","mn","trim","replace","storesSource","_parseStoresSpec","_allTables","bn","_dbNamesDB","sr","addons","stores","dbnames","gn","databases","vn","wn","userAgentData","setInterval","clearInterval","xn","to","kn","Kn","On","_ref25","Pn","En","up","Sn","_ref26","max","An","Cn","addKey","addKeys","_this22","jn","qn","Dn","In","Bn","exec","_s7","Tn","_i7","_Object$entries","entries","queries","_step2","_Object$entries$_i","_iterator2","obsSet","_step3","_iterator3","_step3$value","Fn","throw","Mn","Nn","explicit","PrematureCommit","$n","Ln","level","lowLevelIndex","isVirtual","keyTail","keyLength","_step4","_iterator4","_t$query$index","Un","Vn","zn","_s$table$hook","deleting","creating","updating","_toConsumableArray","_ref28","_ref29","Wn","Yn","Gn","subscr","Hn","Qn","querier","_ref31","_ref32","_ref32$query","_f$e2","_ref33","Xn","Jn","freeze","dirty","Zn","nr","AbortController","signal","_step5","_iterator5","optimisticOps","_i14","_Object$values","_step6","_iterator6","req","promise","addEventListener","includes","_Ee2","requery","_ref34","find","er","_ref35","objs","unsignaledParts","size","tr","rr","ar","_this23","verno","dependencies","onReadyBeingFired","dbReadyResolve","cancelOpen","openCanceller","autoSchema","ready","vip","_this24","Version","_IDBKeyRange","newVersion","close","disableAutoOpen","oldVersion","_fireOnBlocked","vcFired","use","round","_this25","_ref36","unuse","_ref37","_this26","onblocked","onupgradeneeded","allowEmptyDB","deleteDatabase","NoSuchDatabase","pow","onversionchange","onclose","_ref27","put","Rn","_this27","_ref39","_this28","_transaction","_this29","SubTransaction","_whenReady","InvalidTable","ir","observable","_subscribe","mozIndexedDB","webkitIndexedDB","msIndexedDB","webkitIDBKeyRange","ur","closed","aborted","hasValue","getValue","lr","cr","hr","exists","getDatabaseNames","_ref40","defineClass","ignoreTransaction","spawn","currentTransaction","waitFor","debug","derive","override","Events","liveQuery","extendObservabilitySet","getByKeyPath","setByKeyPath","delByKeyPath","shallowClone","deepClone","getObjectDiff","asap","minKey","connections","errnames","semVer","maxKey","dispatchEvent","document","createEvent","initCustomEvent","CustomEvent","detail","_ref41","BroadcastChannel","unref","postMessage","onmessage","data","localStorage","setItem","trig","random","changedParts","clients","matchAll","includeUncontrolled","parse","newValue","serviceWorker","_ref42","extendStatics","__extends","__","__awaiter","thisArg","_arguments","fulfilled","rejected","__generator","body","label","trys","ops","verb","op","__values","__read","__spreadArray","pack","__asyncGenerator","resume","fulfill","settle","__asyncValues","SuppressedError","isFunction","createErrorClass","createImpl","ctorFunc","UnsubscriptionError","errors","arrRemove","item","Subscription","initialTeardown","_parentage","_finalizers","_parentage_1","_parentage_1_1","remove","initialFinalizer","_finalizers_1","_finalizers_1_1","finalizer","execFinalizer","teardown","_hasParent","_addParent","_a","_removeParent","EMPTY","empty","EMPTY_SUBSCRIPTION","isSubscription","config","onUnhandledError","onStoppedNotification","useDeprecatedSynchronousErrorHandling","useDeprecatedNextContext","timeoutProvider","_setTimeout","_x2","handler","_clearTimeout","_x3","reportUnhandledError","noop","COMPLETE_NOTIFICATION","createNotification","kind","errorContext","cb","isRoot","errorThrown","Subscriber","destination","isStopped","EMPTY_OBSERVER","SafeSubscriber","handleStoppedNotification","nextNotification","_error","_complete","_bind","ConsumerObserver","partialObserver","handleUnhandledError","observerOrNext","context_1","notification","subscriber","identity","pipeFromArray","fns","Observable","lift","operator","isObserver","_trySubscribe","sink","promiseCtor","getPromiseCtor","Symbol_observable","pipe","operations","toPromise","ObjectUnsubscribedError","Subject","currentObservers","observers","hasError","thrownError","subject","AnonymousSubject","_throwIfClosed","_b","_c","_checkFinalizedStatuses","_innerSubscribe","asObservable","BehaviorSubject","subscription","EmptyError","isArrayLike","isPromise","isInteropObservable","isAsyncIterable","createInvalidObservableTypeError","isIterable","Symbol_iterator","readableStreamLikeToAsyncGenerator","readableStream","reader","getReader","read","releaseLock","isReadableStreamLike","innerFrom","obs","array","fromAsyncIterable","iterable_1","iterable_1_1","asyncIterable","asyncIterable_1","asyncIterable_1_1","process","executeSchedule","parentSubscription","work","delay","repeat","scheduleSubscription","schedule","operate","init","hasLift","liftedSource","createOperatorSubscriber","onNext","onComplete","onError","onFinalize","OperatorSubscriber","shouldUnsubscribe","closed_1","observeOn","subscribeOn","scheduleAsyncIterable","scheduled","scheduleObservable","scheduleArray","schedulePromise","return","scheduleIterable","scheduleReadableStreamLike","predicate","isScheduler","last","popScheduler","of","project","mergeMap","resultSelector","concurrent","Infinity","ii","onBeforeNext","expand","innerSubScheduler","additionalFinalizer","isComplete","checkComplete","outerNext","doInnerSub","innerComplete","innerValue","bufferedValue","mergeInternals","mapOneOrManyArgs","callOrApply","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","fromEvent","eventName","options","removeEventListener","isEventTarget","addListener","removeListener","isNodeStyleEventEmitter","toCommonHandlerRegistry","off","isJQueryStyleEventEmitter","subTarget","mergeAll","merge","defaultValue","popNumber","sources","handleReset","onSubscriber","Action","intervalProvider","_setInterval","_clearInterval","AsyncAction","pending","recycleAsyncId","requestAsyncId","_id","flush","_scheduler","execute","_execute","_delay","errorValue","errored","actions","dateTimestampProvider","now","Date","Scheduler","schedulerActionCtor","asyncScheduler","AsyncScheduler","SchedulerAction","_active","action","timer","dueTime","intervalOrScheduler","intervalDuration","due","objectProto","getKeys","argsArgArrayOrObject","first_1","combineLatest","popResultSelector","observables","valueTransform","maybeSchedule","remainingFirstValues","hasFirstValue","combineLatestInit","createObject","throwError","errorOrErrorFactory","errorFactory","take","seen","switchMap","innerSubscriber","innerIndex","outerIndex","concatAll","delayWhen","delayDurationSelector","subscriptionDelay","mapTo","duration","distinctUntilChanged","comparator","keySelector","defaultCompare","previousKey","currentKey","tap","tapObserver","isUnsub","debounceTime","activeTask","lastValue","lastTime","emit","emitWhenIdle","targetTime","startWith","skip","catchError","selector","handledResult","innerSub","syncUnsub","userId","claims","sub","lastLogin","registration","bc","_regeneratorRuntime","_callee","_n2","_context","t0","sync","register","dbName","purpose","t1","cloud","usingServiceWorker","localSyncEvent","Buffer","atob","charCodeAt","btoa","_ref","realms","inviteRealms","_callee2","_context2","realmId","accepted","TextEncoder","encode","markedForSync","_ref7$since","since","_ref7$limit","_callee4","_step$value","_n3","_context4","_callee3","_context3","above","mut","txid","opNo","ts","muts","getRandomValues","floor","alloc","assign","mod","_step2$value","_Error","_super2","title","messageCode","messageParams","submitLabel","cancelLabel","onSubmit","onCancel","AbortError","_len","_key","alerts","fields","_callee5","_context5","email","placeholder","_callee6","_yield$se","_context6","otp","_callee7","_context7","getCurrentUser","accessToken","accessTokenExpiration","refreshToken","refreshTokenExpiration","getTime","license","databaseUrl","update","_callee9","_context9","_callee8","_yield$crypto$subtle$","_e5","_n6","_context8","protocol","generateKey","modulusLength","publicExponent","hash","privateKey","publicKey","nonExportablePrivateKey","substring","exportKey","public_key","hints","userType","evalDaysLeft","userValidUntil","validUntil","t2","t3","onLine","hostname","origin","_callee10","_context10","sign","grant_type","refresh_token","scopes","signature","signing_algorithm","time_stamp","fetch","headers","json","_len2","_key2","function","revive","_i3","_Object$entries2","_Object$entries2$_i","Blob","mimeType","number","bigint","BigInt","toISOString","_ref16","_ref17","_i4","buf","XMLHttpRequest","overrideMimeType","URL","createObjectURL","send","responseText","FileReader","onload","readAsArrayBuffer","_len3","_key3","toBinary","_this$stringify2","DataView","setUint32","_asyncToGenerator","_callee11","_e12","_t9","_context11","getUint32","fromBinary","_callee12","_context12","readAsText","_Error2","_super3","statusText","httpStatus","_step7","_iterator7","_loop","isLoggedIn","_callee13","_context13","_callee14","_e14","_context14","Accept","Authorization","dbID","remoteDbId","clientIdentity","lastPull","serverRevision","baseRevs","dx","syncStateChangedEvent","phase","credentials","ceil","ok","blob","text","cancelled","_callee15","_context15","$baseRevs","bulkPut","tableName","clientRev","serverRev","_step8","_iterator8","_step8$value","rev","_callee16","_context16","bulkGet","_i6","_Object$entries3","_Object$entries3$_i","_callee17","_iterator9","_step9","_loop2","_context19","_step9$value","_iterator10","_step10","_loop3","_context18","endsWith","currentUserId","_context17","bulkAdd","anyOf","bulkDelete","justCheckIfNeeded","_callee18","_context20","retryImmediatelyOnFetchError","$syncState","timestamp","isInitialSync","cancelToken","_callee26","_yield$e$transaction","_yield$e$transaction2","_context30","getPersistedSyncState","syncedTables","_callee20","_context22","disableChangeTracking","disableAccessControl","_callee19","_iterator11","_step11","_n11","_context21","owner","_callee23","_e16","_i8","_context25","_callee22","_s4","_context24","_callee21","_n12","_context23","generatedGlobalId","idPrefix","latestRevisions","_callee25","_i9","_e17","_iterator12","_step12","_loop5","_context29","_r6","_context28","belowOrEqual","_callee24","_iterator13","_step13","_e18","_iterator14","_step14","_e19","_t12","_iterator15","_step15","_loop4","_context27","_context26","dbId","initiallySynced","syncCompleteEvent","_i10","_Object$entries4","_Object$entries4$_i","_i12","_Object$entries5","_Object$entries5$_i","_i13","_Object$entries6","_Object$entries6$_i","_Object$keys3","_i15","_Object$entries7","_Object$entries7$_i","_i16","_Object$entries8","_Object$entries8$_i","_i17","_Object$entries9","_Object$entries9$_i","_i18","_Object$entries10","_Object$entries10$_i","members","roles","$jobs","$logins","getSchema","_step16","_iterator16","getOptions","setInitiallySynced","reconfigure","messageConsumer","_callee29","_context34","_callee28","_loop6","_context33","_n15","_u2","_context32","syncState","persistedSyncState","currentUser","realm","wait","_callee27","_yield$Promise$all","_yield$Promise$all2","_e28","_e29","_context31","baseRev","realmSetHash","newRev","t4","enqueue","readyToServe","_callee30","_context35","hasConfig","_callee32","_context37","_callee31","_context36","numUnsyncedChanges","userInteraction","deleteUnsyncedData","_ref23$deleteUnsynced","_callee34","_yield$e$dx$transacti","_yield$e$dx$transacti2","_context39","_callee33","_iterator17","_step17","_t16","_context38","_globalThis$console","_len4","_key4","_callee38","_context43","fetchTokens","_callee35","_e30","_e31","_n17","_e32","_e33","_context40","demo_user","t5","t6","otp_id","_callee37","_context42","_callee36","_context41","save","InstallTrigger","SchemaError","writers","readers","disableEagerSync","visibilityState","_Error3","_super4","_r16","_super5","_f","_super6","reconnecting","token","tokenExpiration","lastUserActivity","messageProducer","messageProducerSubscription","webSocketStatus","connect","disconnect","pinger","ws","_callee40","_e38","_context45","lastServerActivity","pauseUntil","_callee39","_context44","reconnect","URLSearchParams","WebSocket","onopen","_Error4","_super7","_callee41","_context46","_callee42","_context47","pull","_callee43","_context48","isServiceWorkerDB","locks","request","unsyncedTables","_step18","_iterator18","parentNode","removeChild","children","defaultProps","__k","__b","__e","__d","__c","__h","__v","vnode","base","__r","debounceRendering","__P","__n","ownerSVGElement","appendChild","nextSibling","insertBefore","setProperty","style","cssText","setAttribute","removeAttribute","event","contextType","__E","render","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","localName","nodeType","createTextNode","createElementNS","createElement","is","childNodes","dangerouslySetInnerHTML","attributes","__html","innerHTML","checked","diffed","current","unmount","componentWillUnmount","firstChild","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","color","Alert","fontWeight","warning","Darken","position","top","left","opacity","backgroundColor","width","height","zIndex","webkitBackdropFilter","backdropFilter","DialogOuter","alignItems","display","justifyContent","DialogInner","padding","marginBottom","maxWidth","maxHeight","overflowY","border","borderRadius","boxShadow","fontFamily","Input","borderColor","outline","fontSize","_ref30","className","__H","__V","__N","requestAnimationFrame","cancelAnimationFrame","_Jn","_Jn2","focus","WindowHeader","_ref34$","Label","autoComplete","autoFocus","onInput","ButtonsDiv","Button","onClick","_fn","_super8","observer","connector","resetOnError","resetOnComplete","resetOnRefCountZero","wrapperSource","connection","resetConnection","refCount","hasCompleted","hasErrored","cancelReset","resetAndUnsubscribe","conn","dest","_step19","_iterator19","sortOrder","selfMembers","_len5","_key5","_i21","_Object$entries11","_Object$entries11$_i","_i22","_Object$entries12","_Object$entries12$_i","_ref38","_ref39$","globalRoles","permissions","manage","isOwner","_len6","_key6","_len7","_key7","accept","_callee44","_context49","_callee45","_context50","dr","nameSuffix","fr","_callee53","_context58","_callee52","_context57","customLoginGui","_ref43","_ref44","progress","getRegistrations","_callee46","_P$cloud","_yield$Promise$all3","_yield$Promise$all4","_e43","_e44","_i23","_Object$entries13","_Object$entries13$_i","_t23","_n24","_r18","_context51","tryUseServiceWorker","deleted","_step20","_iterator20","_callee47","_context52","requireAuth","_callee48","_yield$navigator$serv","_n25","_context53","periodicSync","disableWebSocket","_callee49","_context54","_ref45","_ref46","_ref47","_ref48","_ref49","_ref50","_callee50","_context55","_ref51","_ref52","_ref53","_ref54","_ref55","_ref56","_callee51","_context56","DatabaseClosedError","events","syncComplete","login","_callee54","_context59","invites","configure","pathname","logout","force","_callee55","_context60","_ref58","_callee57","_t24","_e45","_t25","_context62","_callee56","_context61","toLocaleLowerCase","newId","colocateWith","currentUserObservable","opCount","mutationsAdded","_step21","_iterator21","$ts","ConstraintError","Cloud","pr","yr","mr","_callee58","_o7","_context63","versionchange","tag","waitUntil","_callee59","_context64","logger","messageGenerator","code","msg","WorkboxError","errorCode","details","quotaErrorCallbacks","supportStatus","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","scope","_createCacheName","cacheName","cacheNames","userCacheName","stripParams","fullURL","ignoreParams","strippedURL","param","searchParams","cacheMatchIgnoreParams","_x4","_cacheMatchIgnoreParams","matchOptions","strippedRequestURL","keysOptions","cacheKeys","cacheKey","strippedCacheKeyURL","url","ignoreSearch","canConstructResponseFromBodyStream","testResponse","Response","dontWaitFor","Deferred","executeQuotaErrorCallbacks","_executeQuotaErrorCallbacks","callback","getFriendlyURL","RegExp","ms","asyncFn","returnPromise","copyResponse","_copyResponse","response","modifier","responseURL","clonedResponse","responseInit","modifiedResponseInit","Headers","idbProxyableTypes","cursorAdvanceMethods","instanceOfAny","constructors","cursorRequestMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","prop","receiver","IDBTransaction","wrapFunction","func","IDBDatabase","IDBCursor","unwrap","tx","transformCachableValue","unlisten","DOMException","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","IDBRequest","success","promisifyRequest","openDB","blocked","upgrade","blocking","terminated","openPromise","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","_target","_args","store","oldTraps","CACHE_OBJECT_STORE","normalizeURL","unNormalizedUrl","CacheTimestampsModel","_db","_cacheName","objStore","_upgradeDb","deleteDB","_setTimestamp","_getId","getDb","_getTimestamp","_expireEntries","minTimestamp","maxCount","cursor","entriesToDelete","entriesNotDeletedCount","urlsDeleted","_entriesToDelete","_x5","_getDb","_upgradeDbAndDeleteOldDbs","CacheExpiration","_isRunning","_rerunRequested","_maxEntries","maxEntries","_maxAgeSeconds","maxAgeSeconds","_matchOptions","_timestampModel","urlsExpired","expireEntries","caches","_updateTimestamp","setTimestamp","_isURLExpired","expireOlderThan","getTimestamp","_delete2","ExpirationPlugin","cachedResponseWillBeUsed","cachedResponse","isFresh","cacheExpiration","updateTimestampDone","_isResponseDateFresh","_getCacheExpiration","updateTimestamp","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","registerQuotaErrorCallback","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","dateHeader","headerTime","_deleteCacheAndMetadata","createCacheKey","urlObject","revision","cacheKeyURL","originalURL","PrecacheInstallReportPlugin","updatedURLs","notUpdatedURLs","handlerWillStart","originalRequest","Request","PrecacheCacheKeyPlugin","precacheController","cacheKeyWillBeUsed","params","_precacheController","getCacheKeyForURL","toRequest","StrategyHandler","strategy","_cacheKeys","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","_fetch","possiblePreloadResponse","pluginFilteredRequest","fetchResponse","FetchEvent","preloadResponse","hasCallback","iterateCallbacks","thrownErrorMessage","fetchOptions","runCallbacks","_fetchAndCachePut","responseClone","cachePut","_cacheMatch","_this$_strategy","effectiveRequest","multiMatchOptions","getCacheKey","_cachePut","vary","responseToCache","_this$_strategy2","hasCacheUpdateCallback","oldResponse","_ensureResponseSafeToCache","newResponse","_x6","_getCacheKey","_x7","_x8","_runCallbacks","_x9","_x10","statefulCallback","statefulParam","_doneWaiting","_ensureResponseSafeToCache2","pluginsUsed","_x11","Strategy","handleAll","responseDone","_getResponse","_awaitComplete","_getResponse2","_callback","_handle","_awaitComplete2","doneWaiting","destroy","PrecacheStrategy","_Strategy","_fallbackToNetwork","fallbackToNetwork","copyRedirectedCacheableResponsesPlugin","_handle2","cacheMatch","_handleInstall","_handleFetch","_handleFetch2","integrityInManifest","integrityInRequest","noIntegrityConflict","integrity","_useDefaultCacheabilityPluginIfNeeded","groupCollapsed","log","groupEnd","_handleInstall2","defaultPluginIndex","cacheWillUpdatePluginCount","defaultPrecacheCacheabilityPlugin","cacheWillUpdate","redirected","PrecacheController","_ref$plugins","_ref$fallbackToNetwor","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","install","activate","addToCacheList","_installAndActiveListenersAdded","urlsToWarnAbout","_createCacheKey","cacheMode","firstEntry","secondEntry","warningMessage","installReportPlugin","currentlyCachedRequests","expectedCacheKeys","deletedURLs","_matchPrecache","getOrCreatePrecacheController","defaultRouter","normalizeHandler","Route","catchHandler","RegExpRoute","_Route","regExp","Router","_routes","_defaultHandlerMap","responsePromise","handleRequest","respondWith","payload","requestPromises","urlsToCache","ports","sameOrigin","_this$findMatchingRou","findMatchingRoute","route","_catchHandler","matchResult","routeIndex","getOrCreateDefaultRouter","addFetchListener","addCacheListener","registerRoute","capture","captureUrl","moduleName","funcName","paramName","removeIgnoredSearchParams","ignoreURLParametersMatching","PrecacheRoute","urlsToCacheKeys","getURLsToCacheKeys","_ref$ignoreURLParamet","_ref$directoryIndex","directoryIndex","_ref$cleanURLs","cleanURLs","urlManipulation","urlWithoutIgnoredParams","directoryURL","cleanURL","additionalURLs","urlToAttempt","generateURLVariations","possibleURL","getIntegrityForCacheKey","cacheOkAndOpaquePlugin","_cacheWillUpdate","StaleWhileRevalidate","unshift","fetchAndCachePromise","fetchAndCachePut","buildDate","claim","__WB_MANIFEST","addRoute","fileExtensionRegexp","createHandlerBoundToURL","skipWaiting","tab","navigate"],"mappings":";+CAEA,IACI,KAAK,uBAAyB,GAClC,CACA,MAAO,GAAK,kBCHZ,IACI,KAAK,6BAA+B,GACxC,CACA,MAAO,GAAK,kBCHZ,IACI,KAAK,6BAA+B,GACxC,CACA,MAAO,GAAK,kBCHZ,IACI,KAAK,0BAA4B,GACrC,CACA,MAAO,GAAK,kBCHZ,IACI,KAAK,6BAA+B,GACxC,CACA,MAAO,GAAK,ICJR,EAA2B,CAAC,EAGhC,SAAS,EAAoB,GAE5B,IAAI,EAAe,EAAyB,GAC5C,QAAqB,IAAjB,EACH,OAAO,EAAa,QAGrB,IAAI,EAAS,EAAyB,GAAY,CAGjD,QAAS,CAAC,GAOX,OAHA,EAAoB,GAAU,EAAQ,EAAO,QAAS,GAG/C,EAAO,OACf,aCtBe,SAAS,EAAQ,GAG9B,OAAO,EAAU,mBAAqB,QAAU,iBAAmB,OAAO,SAAW,SAAU,GAC7F,cAAc,CAChB,EAAI,SAAU,GACZ,OAAO,GAAO,mBAAqB,QAAU,EAAI,cAAgB,QAAU,IAAQ,OAAO,UAAY,gBAAkB,CAC1H,EAAG,EAAQ,EACb,CCPe,SAAS,IAEtB,EAAsB,WACpB,OAAO,CACT,EACA,IAAI,EAAU,CAAC,EACb,EAAK,OAAO,UACZ,EAAS,EAAG,eACZ,EAAiB,OAAO,gBAAkB,SAAU,EAAK,EAAK,GAC5D,EAAI,GAAO,EAAK,KAClB,EACA,EAAU,mBAAqB,OAAS,OAAS,CAAC,EAClD,EAAiB,EAAQ,UAAY,aACrC,EAAsB,EAAQ,eAAiB,kBAC/C,EAAoB,EAAQ,aAAe,gBAC7C,SAAS,EAAO,EAAK,EAAK,GACxB,OAAO,OAAO,eAAe,EAAK,EAAK,CACrC,MAAO,EACP,YAAY,EACZ,cAAc,EACd,UAAU,IACR,EAAI,EACV,CACA,IACE,EAAO,CAAC,EAAG,GACb,CAAE,MAAO,GACP,EAAS,SAAgB,EAAK,EAAK,GACjC,OAAO,EAAI,GAAO,CACpB,CACF,CACA,SAAS,EAAK,EAAS,EAAS,EAAM,GACpC,IAAI,EAAiB,GAAW,EAAQ,qBAAqB,EAAY,EAAU,EACjF,EAAY,OAAO,OAAO,EAAe,WACzC,EAAU,IAAI,EAAQ,GAAe,IACvC,OAAO,EAAe,EAAW,UAAW,CAC1C,MAAO,EAAiB,EAAS,EAAM,KACrC,CACN,CACA,SAAS,EAAS,EAAI,EAAK,GACzB,IACE,MAAO,CACL,KAAM,SACN,IAAK,EAAG,KAAK,EAAK,GAEtB,CAAE,MAAO,GACP,MAAO,CACL,KAAM,QACN,IAAK,EAET,CACF,CACA,EAAQ,KAAO,EACf,IAAI,EAAmB,CAAC,EACxB,SAAS,IAAa,CACtB,SAAS,IAAqB,CAC9B,SAAS,IAA8B,CACvC,IAAI,EAAoB,CAAC,EACzB,EAAO,EAAmB,GAAgB,WACxC,OAAO,IACT,IACA,IAAI,EAAW,OAAO,eACpB,EAA0B,GAAY,EAAS,EAAS,EAAO,MACjE,GAA2B,IAA4B,GAAM,EAAO,KAAK,EAAyB,KAAoB,EAAoB,GAC1I,IAAI,EAAK,EAA2B,UAAY,EAAU,UAAY,OAAO,OAAO,GACpF,SAAS,EAAsB,GAC7B,CAAC,OAAQ,QAAS,UAAU,SAAQ,SAAU,GAC5C,EAAO,EAAW,GAAQ,SAAU,GAClC,OAAO,KAAK,QAAQ,EAAQ,EAC9B,GACF,GACF,CACA,SAAS,EAAc,EAAW,GAChC,SAAS,EAAO,EAAQ,EAAK,EAAS,GACpC,IAAI,EAAS,EAAS,EAAU,GAAS,EAAW,GACpD,GAAI,UAAY,EAAO,KAAM,CAC3B,IAAI,EAAS,EAAO,IAClB,EAAQ,EAAO,MACjB,OAAO,GAAS,UAAY,EAAQ,IAAU,EAAO,KAAK,EAAO,WAAa,EAAY,QAAQ,EAAM,SAAS,MAAK,SAAU,GAC9H,EAAO,OAAQ,EAAO,EAAS,EACjC,IAAG,SAAU,GACX,EAAO,QAAS,EAAK,EAAS,EAChC,IAAK,EAAY,QAAQ,GAAO,MAAK,SAAU,GAC7C,EAAO,MAAQ,EAAW,EAAQ,EACpC,IAAG,SAAU,GACX,OAAO,EAAO,QAAS,EAAO,EAAS,EACzC,GACF,CACA,EAAO,EAAO,IAChB,CACA,IAAI,EACJ,EAAe,KAAM,UAAW,CAC9B,MAAO,SAAe,EAAQ,GAC5B,SAAS,IACP,OAAO,IAAI,GAAY,SAAU,EAAS,GACxC,EAAO,EAAQ,EAAK,EAAS,EAC/B,GACF,CACA,OAAO,EAAkB,EAAkB,EAAgB,KAAK,EAA4B,GAA8B,GAC5H,GAEJ,CACA,SAAS,EAAiB,EAAS,EAAM,GACvC,IAAI,EAAQ,iBACZ,OAAO,SAAU,EAAQ,GACvB,GAAI,cAAgB,EAAO,MAAM,IAAI,MAAM,gCAC3C,GAAI,cAAgB,EAAO,CACzB,GAAI,UAAY,EAAQ,MAAM,EAC9B,OAAO,GACT,CACA,IAAK,EAAQ,OAAS,EAAQ,EAAQ,IAAM,IAAO,CACjD,IAAI,EAAW,EAAQ,SACvB,GAAI,EAAU,CACZ,IAAI,EAAiB,EAAoB,EAAU,GACnD,GAAI,EAAgB,CAClB,GAAI,IAAmB,EAAkB,SACzC,OAAO,CACT,CACF,CACA,GAAI,SAAW,EAAQ,OAAQ,EAAQ,KAAO,EAAQ,MAAQ,EAAQ,SAAS,GAAI,UAAY,EAAQ,OAAQ,CAC7G,GAAI,mBAAqB,EAAO,MAAM,EAAQ,YAAa,EAAQ,IACnE,EAAQ,kBAAkB,EAAQ,IACpC,KAAO,WAAa,EAAQ,QAAU,EAAQ,OAAO,SAAU,EAAQ,KACvE,EAAQ,YACR,IAAI,EAAS,EAAS,EAAS,EAAM,GACrC,GAAI,WAAa,EAAO,KAAM,CAC5B,GAAI,EAAQ,EAAQ,KAAO,YAAc,iBAAkB,EAAO,MAAQ,EAAkB,SAC5F,MAAO,CACL,MAAO,EAAO,IACd,KAAM,EAAQ,KAElB,CACA,UAAY,EAAO,OAAS,EAAQ,YAAa,EAAQ,OAAS,QAAS,EAAQ,IAAM,EAAO,IAClG,CACF,CACF,CACA,SAAS,EAAoB,EAAU,GACrC,IAAI,EAAa,EAAQ,OACvB,EAAS,EAAS,SAAS,GAC7B,QAAI,IAAc,EAAQ,OAAO,EAAQ,SAAW,KAAM,UAAY,GAAc,EAAS,SAAiB,SAAM,EAAQ,OAAS,SAAU,EAAQ,SAAM,EAAW,EAAoB,EAAU,GAAU,UAAY,EAAQ,SAAW,WAAa,IAAe,EAAQ,OAAS,QAAS,EAAQ,IAAM,IAAI,UAAU,oCAAsC,EAAa,aAAc,EAClY,IAAI,EAAS,EAAS,EAAQ,EAAS,SAAU,EAAQ,KACzD,GAAI,UAAY,EAAO,KAAM,OAAO,EAAQ,OAAS,QAAS,EAAQ,IAAM,EAAO,IAAK,EAAQ,SAAW,KAAM,EACjH,IAAI,EAAO,EAAO,IAClB,OAAO,EAAO,EAAK,MAAQ,EAAQ,EAAS,YAAc,EAAK,MAAO,EAAQ,KAAO,EAAS,QAAS,WAAa,EAAQ,SAAW,EAAQ,OAAS,OAAQ,EAAQ,SAAM,GAAY,EAAQ,SAAW,KAAM,GAAoB,GAAQ,EAAQ,OAAS,QAAS,EAAQ,IAAM,IAAI,UAAU,oCAAqC,EAAQ,SAAW,KAAM,EACrW,CACA,SAAS,EAAa,GACpB,IAAI,EAAQ,CACV,OAAQ,EAAK,IAEf,KAAK,IAAS,EAAM,SAAW,EAAK,IAAK,KAAK,IAAS,EAAM,WAAa,EAAK,GAAI,EAAM,SAAW,EAAK,IAAK,KAAK,WAAW,KAAK,EACrI,CACA,SAAS,EAAc,GACrB,IAAI,EAAS,EAAM,YAAc,CAAC,EAClC,EAAO,KAAO,gBAAiB,EAAO,IAAK,EAAM,WAAa,CAChE,CACA,SAAS,EAAQ,GACf,KAAK,WAAa,CAAC,CACjB,OAAQ,SACN,EAAY,QAAQ,EAAc,MAAO,KAAK,OAAM,EAC1D,CACA,SAAS,EAAO,GACd,GAAI,EAAU,CACZ,IAAI,EAAiB,EAAS,GAC9B,GAAI,EAAgB,OAAO,EAAe,KAAK,GAC/C,GAAI,mBAAqB,EAAS,KAAM,OAAO,EAC/C,IAAK,MAAM,EAAS,QAAS,CAC3B,IAAI,GAAK,EACP,EAAO,SAAS,IACd,OAAS,EAAI,EAAS,QAAS,GAAI,EAAO,KAAK,EAAU,GAAI,OAAO,EAAK,MAAQ,EAAS,GAAI,EAAK,MAAO,EAAI,EAC9G,OAAO,EAAK,WAAQ,EAAW,EAAK,MAAO,EAAI,CACjD,EACF,OAAO,EAAK,KAAO,CACrB,CACF,CACA,MAAO,CACL,KAAM,EAEV,CACA,SAAS,IACP,MAAO,CACL,WAAO,EACP,MAAM,EAEV,CACA,OAAO,EAAkB,UAAY,EAA4B,EAAe,EAAI,cAAe,CACjG,MAAO,EACP,cAAc,IACZ,EAAe,EAA4B,cAAe,CAC5D,MAAO,EACP,cAAc,IACZ,EAAkB,YAAc,EAAO,EAA4B,EAAmB,qBAAsB,EAAQ,oBAAsB,SAAU,GACtJ,IAAI,EAAO,mBAAqB,GAAU,EAAO,YACjD,QAAS,IAAS,IAAS,GAAqB,uBAAyB,EAAK,aAAe,EAAK,MACpG,EAAG,EAAQ,KAAO,SAAU,GAC1B,OAAO,OAAO,eAAiB,OAAO,eAAe,EAAQ,IAA+B,EAAO,UAAY,EAA4B,EAAO,EAAQ,EAAmB,sBAAuB,EAAO,UAAY,OAAO,OAAO,GAAK,CAC5O,EAAG,EAAQ,MAAQ,SAAU,GAC3B,MAAO,CACL,QAAS,EAEb,EAAG,EAAsB,EAAc,WAAY,EAAO,EAAc,UAAW,GAAqB,WACtG,OAAO,IACT,IAAI,EAAQ,cAAgB,EAAe,EAAQ,MAAQ,SAAU,EAAS,EAAS,EAAM,EAAa,QACxG,IAAW,IAAgB,EAAc,SACzC,IAAI,EAAO,IAAI,EAAc,EAAK,EAAS,EAAS,EAAM,GAAc,GACxE,OAAO,EAAQ,oBAAoB,GAAW,EAAO,EAAK,OAAO,MAAK,SAAU,GAC9E,OAAO,EAAO,KAAO,EAAO,MAAQ,EAAK,MAC3C,GACF,EAAG,EAAsB,GAAK,EAAO,EAAI,EAAmB,aAAc,EAAO,EAAI,GAAgB,WACnG,OAAO,IACT,IAAI,EAAO,EAAI,YAAY,WACzB,MAAO,oBACT,IAAI,EAAQ,KAAO,SAAU,GAC3B,IAAI,EAAS,OAAO,GAClB,EAAO,GACT,IAAK,IAAI,KAAO,EAAQ,EAAK,KAAK,GAClC,OAAO,EAAK,UAAW,SAAS,IAC9B,KAAO,EAAK,QAAS,CACnB,IAAI,EAAM,EAAK,MACf,GAAI,KAAO,EAAQ,OAAO,EAAK,MAAQ,EAAK,EAAK,MAAO,EAAI,CAC9D,CACA,OAAO,EAAK,MAAO,EAAI,CACzB,CACF,EAAG,EAAQ,OAAS,EAAQ,EAAQ,UAAY,CAC9C,YAAa,EACb,MAAO,SAAe,GACpB,GAAI,KAAK,KAAO,EAAG,KAAK,KAAO,EAAG,KAAK,KAAO,KAAK,WAAQ,EAAW,KAAK,MAAO,EAAI,KAAK,SAAW,KAAM,KAAK,OAAS,OAAQ,KAAK,SAAM,EAAW,KAAK,WAAW,QAAQ,IAAiB,EAAe,IAAK,IAAI,KAAQ,KAAM,MAAQ,EAAK,OAAO,IAAM,EAAO,KAAK,KAAM,KAAU,OAAO,EAAK,MAAM,MAAQ,KAAK,QAAQ,EACtU,EACA,KAAM,WACJ,KAAK,MAAO,EACZ,IAAI,EAAa,KAAK,WAAW,GAAG,WACpC,GAAI,UAAY,EAAW,KAAM,MAAM,EAAW,IAClD,OAAO,KAAK,IACd,EACA,kBAAmB,SAA2B,GAC5C,GAAI,KAAK,KAAM,MAAM,EACrB,IAAI,EAAU,KACd,SAAS,EAAO,EAAK,GACnB,OAAO,EAAO,KAAO,QAAS,EAAO,IAAM,EAAW,EAAQ,KAAO,EAAK,IAAW,EAAQ,OAAS,OAAQ,EAAQ,SAAM,KAAc,CAC5I,CACA,IAAK,IAAI,EAAI,KAAK,WAAW,OAAS,EAAG,GAAK,IAAK,EAAG,CACpD,IAAI,EAAQ,KAAK,WAAW,GAC1B,EAAS,EAAM,WACjB,GAAI,SAAW,EAAM,OAAQ,OAAO,EAAO,OAC3C,GAAI,EAAM,QAAU,KAAK,KAAM,CAC7B,IAAI,EAAW,EAAO,KAAK,EAAO,YAChC,EAAa,EAAO,KAAK,EAAO,cAClC,GAAI,GAAY,EAAY,CAC1B,GAAI,KAAK,KAAO,EAAM,SAAU,OAAO,EAAO,EAAM,UAAU,GAC9D,GAAI,KAAK,KAAO,EAAM,WAAY,OAAO,EAAO,EAAM,WACxD,MAAO,GAAI,GACT,GAAI,KAAK,KAAO,EAAM,SAAU,OAAO,EAAO,EAAM,UAAU,OACzD,CACL,IAAK,EAAY,MAAM,IAAI,MAAM,0CACjC,GAAI,KAAK,KAAO,EAAM,WAAY,OAAO,EAAO,EAAM,WACxD,CACF,CACF,CACF,EACA,OAAQ,SAAgB,EAAM,GAC5B,IAAK,IAAI,EAAI,KAAK,WAAW,OAAS,EAAG,GAAK,IAAK,EAAG,CACpD,IAAI,EAAQ,KAAK,WAAW,GAC5B,GAAI,EAAM,QAAU,KAAK,MAAQ,EAAO,KAAK,EAAO,eAAiB,KAAK,KAAO,EAAM,WAAY,CACjG,IAAI,EAAe,EACnB,KACF,CACF,CACA,IAAiB,UAAY,GAAQ,aAAe,IAAS,EAAa,QAAU,GAAO,GAAO,EAAa,aAAe,EAAe,MAC7I,IAAI,EAAS,EAAe,EAAa,WAAa,CAAC,EACvD,OAAO,EAAO,KAAO,EAAM,EAAO,IAAM,EAAK,GAAgB,KAAK,OAAS,OAAQ,KAAK,KAAO,EAAa,WAAY,GAAoB,KAAK,SAAS,EAC5J,EACA,SAAU,SAAkB,EAAQ,GAClC,GAAI,UAAY,EAAO,KAAM,MAAM,EAAO,IAC1C,MAAO,UAAY,EAAO,MAAQ,aAAe,EAAO,KAAO,KAAK,KAAO,EAAO,IAAM,WAAa,EAAO,MAAQ,KAAK,KAAO,KAAK,IAAM,EAAO,IAAK,KAAK,OAAS,SAAU,KAAK,KAAO,OAAS,WAAa,EAAO,MAAQ,IAAa,KAAK,KAAO,GAAW,CACtQ,EACA,OAAQ,SAAgB,GACtB,IAAK,IAAI,EAAI,KAAK,WAAW,OAAS,EAAG,GAAK,IAAK,EAAG,CACpD,IAAI,EAAQ,KAAK,WAAW,GAC5B,GAAI,EAAM,aAAe,EAAY,OAAO,KAAK,SAAS,EAAM,WAAY,EAAM,UAAW,EAAc,GAAQ,CACrH,CACF,EACA,MAAS,SAAgB,GACvB,IAAK,IAAI,EAAI,KAAK,WAAW,OAAS,EAAG,GAAK,IAAK,EAAG,CACpD,IAAI,EAAQ,KAAK,WAAW,GAC5B,GAAI,EAAM,SAAW,EAAQ,CAC3B,IAAI,EAAS,EAAM,WACnB,GAAI,UAAY,EAAO,KAAM,CAC3B,IAAI,EAAS,EAAO,IACpB,EAAc,EAChB,CACA,OAAO,CACT,CACF,CACA,MAAM,IAAI,MAAM,wBAClB,EACA,cAAe,SAAuB,EAAU,EAAY,GAC1D,OAAO,KAAK,SAAW,CACrB,SAAU,EAAO,GACjB,WAAY,EACZ,QAAS,GACR,SAAW,KAAK,SAAW,KAAK,SAAM,GAAY,CACvD,GACC,CACL,CC9SA,SAAS,EAAmB,EAAK,EAAS,EAAQ,EAAO,EAAQ,EAAK,GACpE,IACE,IAAI,EAAO,EAAI,GAAK,GAChB,EAAQ,EAAK,KACnB,CAAE,MAAO,GAEP,YADA,EAAO,EAET,CACI,EAAK,KACP,EAAQ,GAER,QAAQ,QAAQ,GAAO,KAAK,EAAO,EAEvC,CACe,SAAS,EAAkB,GACxC,OAAO,WACL,IAAI,EAAO,KACT,EAAO,UACT,OAAO,IAAI,SAAQ,SAAU,EAAS,GACpC,IAAI,EAAM,EAAG,MAAM,EAAM,GACzB,SAAS,EAAM,GACb,EAAmB,EAAK,EAAS,EAAQ,EAAO,EAAQ,OAAQ,EAClE,CACA,SAAS,EAAO,GACd,EAAmB,EAAK,EAAS,EAAQ,EAAO,EAAQ,QAAS,EACnE,CACA,OAAM,EACR,GACF,CACF,CC3Be,SAAS,EAAe,GACrC,IAAI,ECFS,SAAsB,EAAO,GAC1C,GAAuB,WAAnB,EAAQ,IAAiC,OAAV,EAAgB,OAAO,EAC1D,IAAI,EAAO,EAAM,OAAO,aACxB,QAAa,IAAT,EAAoB,CACtB,IAAI,EAAM,EAAK,KAAK,EAAO,GAAQ,WACnC,GAAqB,WAAjB,EAAQ,GAAmB,OAAO,EACtC,MAAM,IAAI,UAAU,+CACtB,CACA,OAAiB,WAAT,EAAoB,OAAS,QAAQ,EAC/C,CDPY,CAAY,EAAK,UAC3B,MAAwB,WAAjB,EAAQ,GAAoB,EAAM,OAAO,EAClD,CEJe,SAAS,EAAgB,EAAK,EAAK,GAYhD,OAXA,EAAM,EAAc,MACT,EACT,OAAO,eAAe,EAAK,EAAK,CAC9B,MAAO,EACP,YAAY,EACZ,cAAc,EACd,UAAU,IAGZ,EAAI,GAAO,EAEN,CACT,CCbA,SAAS,EAAQ,EAAQ,GACvB,IAAI,EAAO,OAAO,KAAK,GACvB,GAAI,OAAO,sBAAuB,CAChC,IAAI,EAAU,OAAO,sBAAsB,GAC3C,IAAmB,EAAU,EAAQ,QAAO,SAAU,GACpD,OAAO,OAAO,yBAAyB,EAAQ,GAAK,UACtD,KAAK,EAAK,KAAK,MAAM,EAAM,EAC7B,CACA,OAAO,CACT,CACe,SAAS,EAAe,GACrC,IAAK,IAAI,EAAI,EAAG,EAAI,UAAU,OAAQ,IAAK,CACzC,IAAI,EAAS,MAAQ,UAAU,GAAK,UAAU,GAAK,CAAC,EACpD,EAAI,EAAI,EAAQ,OAAO,IAAS,GAAI,SAAQ,SAAU,GACpD,EAAe,EAAQ,EAAK,EAAO,GACrC,IAAK,OAAO,0BAA4B,OAAO,iBAAiB,EAAQ,OAAO,0BAA0B,IAAW,EAAQ,OAAO,IAAS,SAAQ,SAAU,GAC5J,OAAO,eAAe,EAAQ,EAAK,OAAO,yBAAyB,EAAQ,GAC7E,GACF,CACA,OAAO,CACT,CCrBe,SAAS,EAAgB,GAItC,OAHA,EAAkB,OAAO,eAAiB,OAAO,eAAe,OAAS,SAAyB,GAChG,OAAO,EAAE,WAAa,OAAO,eAAe,EAC9C,EACO,EAAgB,EACzB,CCLe,SAAS,EAAgB,EAAG,GAKzC,OAJA,EAAkB,OAAO,eAAiB,OAAO,eAAe,OAAS,SAAyB,EAAG,GAEnG,OADA,EAAE,UAAY,EACP,CACT,EACO,EAAgB,EAAG,EAC5B,CCNe,SAAS,IACtB,GAAuB,qBAAZ,UAA4B,QAAQ,UAAW,OAAO,EACjE,GAAI,QAAQ,UAAU,KAAM,OAAO,EACnC,GAAqB,oBAAV,MAAsB,OAAO,EACxC,IAEE,OADA,QAAQ,UAAU,QAAQ,KAAK,QAAQ,UAAU,QAAS,IAAI,WAAa,MACpE,CACT,CAAE,MAAO,GACP,OAAO,CACT,CACF,CCRe,SAAS,EAAW,EAAQ,EAAM,GAa/C,OAXE,EADE,IACW,QAAQ,UAAU,OAElB,SAAoB,EAAQ,EAAM,GAC7C,IAAI,EAAI,CAAC,MACT,EAAE,KAAK,MAAM,EAAG,GAChB,IACI,EAAW,IADG,SAAS,KAAK,MAAM,EAAQ,IAG9C,OADI,GAAO,EAAe,EAAU,EAAM,WACnC,CACT,EAEK,EAAW,MAAM,KAAM,UAChC,CCZe,SAAS,EAAiB,GACvC,IAAI,EAAwB,oBAAR,IAAqB,IAAI,SAAQ,EAuBrD,OAtBA,EAAmB,SAA0B,GAC3C,GAAc,OAAV,ICPO,SAA2B,GACxC,OAAgE,IAAzD,SAAS,SAAS,KAAK,GAAI,QAAQ,gBAC5C,CDK2B,CAAiB,GAAQ,OAAO,EACvD,GAAqB,oBAAV,EACT,MAAM,IAAI,UAAU,sDAEtB,GAAsB,qBAAX,EAAwB,CACjC,GAAI,EAAO,IAAI,GAAQ,OAAO,EAAO,IAAI,GACzC,EAAO,IAAI,EAAO,EACpB,CACA,SAAS,IACP,OAAO,EAAU,EAAO,UAAW,EAAe,MAAM,YAC1D,CASA,OARA,EAAQ,UAAY,OAAO,OAAO,EAAM,UAAW,CACjD,YAAa,CACX,MAAO,EACP,YAAY,EACZ,UAAU,EACV,cAAc,KAGX,EAAe,EAAS,EACjC,EACO,EAAiB,EAC1B,CE7Be,SAAS,EAAkB,EAAK,IAClC,MAAP,GAAe,EAAM,EAAI,UAAQ,EAAM,EAAI,QAC/C,IAAK,IAAI,EAAI,EAAG,EAAO,IAAI,MAAM,GAAM,EAAI,EAAK,IAAK,EAAK,GAAK,EAAI,GACnE,OAAO,CACT,CCHe,SAAS,EAA4B,EAAG,GACrD,GAAK,EAAL,CACA,GAAiB,kBAAN,EAAgB,OAAO,EAAiB,EAAG,GACtD,IAAI,EAAI,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM,GAAI,GAEpD,MADU,WAAN,GAAkB,EAAE,cAAa,EAAI,EAAE,YAAY,MAC7C,QAAN,GAAqB,QAAN,EAAoB,MAAM,KAAK,GACxC,cAAN,GAAqB,2CAA2C,KAAK,GAAW,EAAiB,EAAG,QAAxG,CALc,CAMhB,CCPe,SAAS,EAA2B,EAAG,GACpD,IAAI,EAAuB,qBAAX,QAA0B,EAAE,OAAO,WAAa,EAAE,cAClE,IAAK,EAAI,CACP,GAAI,MAAM,QAAQ,KAAO,EAAK,EAA2B,KAAO,GAAkB,GAAyB,kBAAb,EAAE,OAAqB,CAC/G,IAAI,EAAI,GACZ,IAAI,EAAI,EACJ,EAAI,WAAc,EACtB,MAAO,CACL,EAAG,EACH,EAAG,WACD,OAAI,GAAK,EAAE,OAAe,CACxB,MAAM,GAED,CACL,MAAM,EACN,MAAO,EAAE,KAEb,EACA,EAAG,SAAW,GACZ,MAAM,CACR,EACA,EAAG,EAEP,CACA,MAAM,IAAI,UAAU,wIACtB,CACA,IAEE,EAFE,GAAmB,EACrB,GAAS,EAEX,MAAO,CACL,EAAG,WACD,EAAK,EAAG,KAAK,EACf,EACA,EAAG,WACD,IAAI,EAAO,EAAG,OAEd,OADA,EAAmB,EAAK,KACjB,CACT,EACA,EAAG,SAAW,GACZ,GAAS,EACT,EAAM,CACR,EACA,EAAG,WACD,IACO,GAAoC,MAAhB,EAAW,QAAW,EAAW,QAC5D,CAAE,QACA,GAAI,EAAQ,MAAM,CACpB,CACF,EAEJ,CC/Ce,SAAS,EAAe,EAAK,GAC1C,OCLa,SAAyB,GACtC,GAAI,MAAM,QAAQ,GAAM,OAAO,CACjC,CDGS,CAAe,IELT,SAA+B,EAAK,GACjD,IAAI,EAAK,MAAQ,EAAM,KAAO,oBAAsB,QAAU,EAAI,OAAO,WAAa,EAAI,cAC1F,GAAI,MAAQ,EAAI,CACd,IAAI,EACF,EACA,EACA,EACA,EAAO,GACP,GAAK,EACL,GAAK,EACP,IACE,GAAI,GAAM,EAAK,EAAG,KAAK,IAAM,KAAM,IAAM,EAAG,CAC1C,GAAI,OAAO,KAAQ,EAAI,OACvB,GAAK,CACP,MAAO,OAAS,GAAM,EAAK,EAAG,KAAK,IAAK,QAAU,EAAK,KAAK,EAAG,OAAQ,EAAK,SAAW,GAAI,GAAK,GAClG,CAAE,MAAO,GACP,GAAK,EAAI,EAAK,CAChB,CAAE,QACA,IACE,IAAK,GAAM,MAAQ,EAAW,SAAM,EAAK,EAAW,SAAK,OAAO,KAAQ,GAAK,MAC/E,CAAE,QACA,GAAI,EAAI,MAAM,CAChB,CACF,CACA,OAAO,CACT,CACF,CFrBgC,CAAqB,EAAK,IAAM,EAA2B,EAAK,IGLjF,WACb,MAAM,IAAI,UAAU,4IACtB,CHGsG,EACtG,CILe,SAAS,EAAU,EAAU,GAC1C,GAA0B,oBAAf,GAA4C,OAAf,EACtC,MAAM,IAAI,UAAU,sDAEtB,EAAS,UAAY,OAAO,OAAO,GAAc,EAAW,UAAW,CACrE,YAAa,CACX,MAAO,EACP,UAAU,EACV,cAAc,KAGlB,OAAO,eAAe,EAAU,YAAa,CAC3C,UAAU,IAER,GAAY,EAAe,EAAU,EAC3C,CCde,SAAS,EAA2B,EAAM,GACvD,GAAI,IAA2B,WAAlB,EAAQ,IAAsC,oBAAT,GAChD,OAAO,EACF,QAAa,IAAT,EACT,MAAM,IAAI,UAAU,4DAEtB,OCRa,SAAgC,GAC7C,QAAa,IAAT,EACF,MAAM,IAAI,eAAe,6DAE3B,OAAO,CACT,CDGS,CAAsB,EAC/B,CENe,SAAS,EAAa,GACnC,IAAI,EAA4B,IAChC,OAAO,WACL,IACE,EADE,EAAQ,EAAe,GAE3B,GAAI,EAA2B,CAC7B,IAAI,EAAY,EAAe,MAAM,YACrC,EAAS,QAAQ,UAAU,EAAO,UAAW,EAC/C,MACE,EAAS,EAAM,MAAM,KAAM,WAE7B,OAAO,EAA0B,KAAM,EACzC,CACF,CChBe,SAAS,EAAgB,EAAU,GAChD,KAAM,aAAoB,GACxB,MAAM,IAAI,UAAU,oCAExB,CCHA,SAAS,EAAkB,EAAQ,GACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,OAAQ,IAAK,CACrC,IAAI,EAAa,EAAM,GACvB,EAAW,WAAa,EAAW,aAAc,EACjD,EAAW,cAAe,EACtB,UAAW,IAAY,EAAW,UAAW,GACjD,OAAO,eAAe,EAAQ,EAAc,EAAW,KAAM,EAC/D,CACF,CACe,SAAS,EAAa,EAAa,EAAY,GAM5D,OALI,GAAY,EAAkB,EAAY,UAAW,GACrD,GAAa,EAAkB,EAAa,GAChD,OAAO,eAAe,EAAa,YAAa,CAC9C,UAAU,IAEL,CACT,CCbe,SAAS,EAAmB,GACzC,OCJa,SAA4B,GACzC,GAAI,MAAM,QAAQ,GAAM,OAAO,EAAiB,EAClD,CDES,CAAkB,IELZ,SAA0B,GACvC,GAAsB,qBAAX,QAAmD,MAAzB,EAAK,OAAO,WAA2C,MAAtB,EAAK,cAAuB,OAAO,MAAM,KAAK,EACtH,CFGmC,CAAgB,IAAQ,EAA2B,IGLvE,WACb,MAAM,IAAI,UAAU,uIACtB,CHG8F,EAC9F,CIOA,IAAM,EAAgC,oBAAf,WAA6B,WAChC,oBAAT,KAAuB,KACR,oBAAX,OAAyB,OAC5B,OAEN,EAAO,OAAO,KACd,EAAU,MAAM,QAItB,SAAS,EAAO,EAAK,GACjB,MAAyB,iBAAd,GAEX,EAAK,GAAW,SAAQ,SAAU,GAC9B,EAAI,GAAO,EAAU,EAAA,IAFd,CAAA,CALQ,oBAAZ,SAA4B,EAAQ,UAC3C,EAAQ,QAAU,SAUtB,IAAM,EAAW,OAAO,eAClB,EAAU,CAAC,EAAE,eACnB,SAAS,EAAO,EAAK,GACjB,OAAO,EAAQ,KAAK,EAAK,EAAA,CAE7B,SAAS,EAAM,EAAO,GACO,mBAAd,IACP,EAAY,EAAU,EAAS,MACf,oBAAZ,QAA0B,EAAO,QAAQ,SAAS,GAAW,SAAQ,SAAA,GACzE,EAAQ,EAAO,EAAK,EAAU,GAAA,IAGtC,IAAM,EAAiB,OAAO,eAC9B,SAAS,EAAQ,EAAK,EAAM,EAAkB,GAC1C,EAAe,EAAK,EAAM,EAAO,GAAoB,EAAO,EAAkB,QAA0C,mBAAzB,EAAiB,IAC5G,CAAE,IAAK,EAAiB,IAAK,IAAK,EAAiB,IAAK,cAAA,GACxD,CAAE,MAAO,EAAkB,cAAA,EAAoB,UAAA,GAAkB,GAAA,CAEzE,SAAS,EAAO,GACZ,MAAO,CACH,KAAM,SAAU,GAGZ,OAFA,EAAM,UAAY,OAAO,OAAO,EAAO,WACvC,EAAQ,EAAM,UAAW,cAAe,GACjC,CACH,OAAQ,EAAM,KAAK,KAAM,EAAM,WAAA,GAK/C,IAAM,EAA2B,OAAO,yBACxC,SAAS,EAAsB,EAAK,GAEhC,IAAI,EACJ,OAFW,EAAyB,EAAK,KAE3B,EAAQ,EAAS,KAAS,EAAsB,EAAO,EAAA,CAEzE,IAAM,EAAS,GAAG,MAClB,SAAS,EAAM,EAAM,EAAO,GACxB,OAAO,EAAO,KAAK,EAAM,EAAO,EAAA,CAEpC,SAAS,EAAS,EAAU,GACxB,OAAO,EAAiB,EAAA,CAE5B,SAAS,EAAO,GACZ,IAAK,EACD,MAAM,IAAI,MAAM,oBAExB,SAAS,EAAO,GACR,EAAQ,aACR,aAAa,GAEb,WAAW,EAAI,GAkBvB,SAAS,EAAa,EAAK,GACvB,GAAuB,iBAAZ,GAAwB,EAAO,EAAK,GAC3C,OAAO,EAAI,GACf,IAAK,EACD,OAAO,EACX,GAAuB,iBAAZ,EAAsB,CAE7B,IADA,IAAI,EAAK,GACA,EAAI,EAAG,EAAI,EAAQ,OAAQ,EAAI,IAAK,EAAG,CAC5C,IAAI,EAAM,EAAa,EAAK,EAAQ,IACpC,EAAG,KAAK,EAAA,CAEZ,OAAO,CAAA,CAEX,IAAI,EAAS,EAAQ,QAAQ,KAC7B,IAAgB,IAAZ,EAAe,CACf,IAAI,EAAW,EAAI,EAAQ,OAAO,EAAG,IACrC,YAAO,IAAA,OAAA,EAAqC,EAAa,EAAU,EAAQ,OAAO,EAAS,KAInG,SAAS,EAAa,EAAK,EAAS,GAChC,GAAK,QAAA,IAAO,MAER,aAAc,UAAU,OAAO,SAAS,IAE5C,GAAuB,iBAAZ,GAAwB,WAAY,EAAS,CACpD,EAAwB,iBAAV,GAAsB,WAAY,GAChD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,OAAQ,EAAI,IAAK,EACzC,EAAa,EAAK,EAAQ,GAAI,EAAM,GAAA,KAGvC,CACD,IAAI,EAAS,EAAQ,QAAQ,KAC7B,IAAgB,IAAZ,EAAe,CACf,IAAI,EAAiB,EAAQ,OAAO,EAAG,GACnC,EAAmB,EAAQ,OAAO,EAAS,GAC/C,GAAyB,KAArB,OAAA,IACI,EACI,EAAQ,KAAS,MAAM,SAAS,IAChC,EAAI,OAAO,EAAgB,UAEpB,EAAI,GAGf,EAAI,GAAkB,MACzB,CACD,IAAI,EAAW,EAAI,GACd,GAAa,EAAO,EAAK,KAC1B,EAAY,EAAI,GAAkB,CAAC,GACvC,EAAa,EAAU,EAAkB,EAAA,gBAIzC,EACI,EAAQ,KAAS,MAAM,SAAS,IAChC,EAAI,OAAO,EAAS,UAEb,EAAI,GAGf,EAAI,GAAW,CAAA,EAY/B,SAAS,EAAa,GAClB,IAAI,EAAK,CAAC,EACV,IAAK,IAAI,KAAK,EACN,EAAO,EAAK,KACZ,EAAG,GAAK,EAAI,IAEpB,OAAO,CAAA,CAEX,IAAM,EAAS,GAAG,OAClB,SAAS,EAAQ,GACb,OAAO,EAAO,MAAM,GAAI,EAAA,CAE5B,IAAM,EAAqB,oLACtB,MAAM,KAAK,OAAO,EAAQ,CAAC,EAAG,GAAI,GAAI,IAAI,KAAI,SAAA,GAAA,MAAO,CAAC,MAAO,OAAQ,SAAS,KAAI,SAAA,GAAA,OAAK,EAAI,EAAM,gBAAY,QAAO,SAAA,GAAA,OAAK,EAAQ,EAAA,IAChI,EAAiB,IAAI,IAAI,EAAmB,KAAI,SAAA,GAAA,OAAK,EAAQ,EAAA,KACnE,SAAS,EAAsB,GAC3B,IAAM,EAAK,CAAC,EACZ,IAAK,IAAM,KAAK,EACZ,GAAI,EAAO,EAAG,GAAI,CACd,IAAM,EAAI,EAAE,GACZ,EAAG,IAAM,GAAkB,iBAAN,GAAkB,EAAe,IAAI,EAAE,aAAe,EAAI,EAAsB,EAAA,CAE7G,OAAO,CAAA,CAQX,IAAI,EAAe,KACnB,SAAS,EAAU,GACf,EAAe,IAAI,QACnB,IAAM,EAAK,EAAe,GAE1B,OADA,EAAe,KACR,CAAA,CAEX,SAAS,EAAe,GACpB,IAAK,GAAkB,iBAAN,EACb,OAAO,EACX,IAAI,EAAK,EAAa,IAAI,GAC1B,GAAI,EACA,OAAO,EACX,GAAI,EAAQ,GAAI,CACZ,EAAK,GACL,EAAa,IAAI,EAAG,GACpB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAE,OAAQ,EAAI,IAAK,EACnC,EAAG,KAAK,EAAe,EAAE,IAAA,MAG5B,GAAI,EAAe,IAAI,EAAE,aAC1B,EAAK,MAEJ,CACD,IAAM,EAAQ,EAAS,GAGvB,IAAK,IAAI,KAFT,EAAK,IAAU,OAAO,UAAY,CAAC,EAAI,OAAO,OAAO,GACrD,EAAa,IAAI,EAAG,GACH,EACT,EAAO,EAAG,KACV,EAAG,GAAQ,EAAe,EAAE,IAAA,CAIxC,OAAO,CAAA,CAEX,IAAQ,GAAa,CAAC,EAAhB,SACN,SAAS,GAAY,GACjB,OAAO,GAAS,KAAK,GAAG,MAAM,GAAI,GAEtC,IAAM,GAAmC,oBAAX,OAC1B,OAAO,SACP,aACE,GAA0C,iBAAnB,GAA8B,SAAU,GACjE,IAAI,EACJ,OAAY,MAAL,IAAc,EAAI,EAAE,MAAoB,EAAE,MAAM,EAAA,EACvD,WAAc,OAAO,MACzB,SAAS,GAAa,EAAG,GACrB,IAAM,EAAI,EAAE,QAAQ,GAGpB,OAFI,GAAK,GACL,EAAE,OAAO,EAAG,GACT,GAAK,EAEhB,IAAM,GAAgB,CAAC,EACvB,SAAS,GAAW,GAChB,IAAI,EAAG,EAAG,EAAG,EACb,GAAyB,IAArB,UAAU,OAAc,CACxB,GAAI,EAAQ,GACR,OAAO,EAAU,QACrB,GAAI,OAAS,IAAsC,iBAAd,EACjC,MAAO,CAAC,GACZ,GAAK,EAAK,GAAc,GAAa,CAEjC,IADA,EAAI,KACI,EAAI,EAAG,QAAY,MACvB,EAAE,KAAK,EAAE,OACb,OAAO,CAAA,CAEX,GAAiB,MAAb,EACA,MAAO,CAAC,GAEZ,GAAiB,iBADjB,EAAI,EAAU,QACa,CAEvB,IADA,EAAI,IAAI,MAAM,GACP,KACH,EAAE,GAAK,EAAU,GACrB,OAAO,CAAA,CAEX,MAAO,CAAC,EAAA,CAIZ,IAFA,EAAI,UAAU,OACd,EAAI,IAAI,MAAM,GACP,KACH,EAAE,GAAK,UAAU,GACrB,OAAO,CAAA,CAEX,IAAM,GAAoC,oBAAX,OACxB,SAAA,GAAA,MAAkC,kBAA3B,EAAG,OAAO,YAAA,EAClB,mBAAM,EAER,GAA4B,oBAAb,UACf,6CAA6C,KAAK,SAAS,MAC/D,SAAS,GAAS,EAAO,GACrB,GAAQ,EACR,GAAgB,CAAA,CAEpB,IAAI,GAAgB,mBAAM,EACpB,IAAyB,IAAI,MAAM,IAAI,MAC7C,SAAS,KACL,GAAI,GACA,IAEI,MADA,GAAkB,UACZ,IAAI,KAAA,CAEd,MAAO,GACH,OAAO,CAAA,CAEf,OAAO,IAAI,KAAA,CAEf,SAAS,GAAY,EAAW,GAC5B,IAAI,EAAQ,EAAU,MACtB,OAAK,GAEL,EAAoB,GAAoB,EACF,IAAlC,EAAM,QAAQ,EAAU,QACxB,IAAqB,EAAU,KAAO,EAAU,SAAS,MAAM,MAAM,QAClE,EAAM,MAAM,MACd,MAAM,GACN,OAAO,IACP,KAAI,SAAA,GAAA,MAAS,KAAO,CAAA,IACpB,KAAK,KARC,GAWf,IAkBI,GAAmB,CACnB,UACA,aACA,OACA,sBACA,WACA,UACA,WACA,eACA,gBACA,QACA,UACA,gBACA,SACA,aAEA,GAlCkB,CAClB,SACA,OACA,aACA,gBACA,SACA,UACA,eACA,aACA,iBACA,kBACA,iBACA,cACA,WACA,iBACA,kBACA,gBAkB4B,OAAO,IACnC,GAAe,CACf,eAAgB,wDAChB,eAAgB,2BAChB,MAAO,sBACP,oBAAqB,8CACrB,WAAY,oEAEhB,SAAS,GAAW,EAAM,GACtB,KAAK,GAAK,KACV,KAAK,KAAO,EACZ,KAAK,QAAU,CAAA,CAWnB,SAAS,GAAqB,EAAK,GAC/B,OAAO,EAAM,aAAe,OAAO,KAAK,GACnC,KAAI,SAAA,GAAA,OAAO,EAAS,GAAK,UAAA,IACzB,QAAO,SAAC,EAAG,EAAG,GAAA,OAAM,EAAE,QAAQ,KAAO,CAAA,IACrC,KAAK,MAEd,SAAS,GAAY,EAAK,EAAU,EAAc,GAC9C,KAAK,GAAK,KACV,KAAK,SAAW,EAChB,KAAK,WAAa,EAClB,KAAK,aAAe,EACpB,KAAK,QAAU,GAAqB,EAAK,EAAA,CAG7C,SAAS,GAAU,EAAK,GACpB,KAAK,GAAK,KACV,KAAK,KAAO,YACZ,KAAK,SAAW,OAAO,KAAK,GAAU,KAAI,SAAA,GAAA,OAAO,EAAS,EAAA,IAC1D,KAAK,cAAgB,EACrB,KAAK,QAAU,GAAqB,EAAK,KAAK,SAAA,CA5BlD,EAAO,IAAY,KAAK,OAAO,OAAO,CAClC,MAAO,CACH,IAAK,WACD,OAAO,KAAK,SACP,KAAK,OAAS,KAAK,KAAO,KAAO,KAAK,QAAU,GAAY,KAAK,GAAI,MAGlF,SAAU,WAAc,OAAO,KAAK,KAAO,KAAO,KAAK,OAAA,IAe3D,EAAO,IAAa,KAAK,IAQzB,EAAO,IAAW,KAAK,IACvB,IAAI,GAAW,GAAU,QAAO,SAAC,EAAK,GAAA,OAAU,EAAI,GAAQ,EAAO,QAAS,CAAA,GAAM,CAAC,GAC7E,GAAgB,GAClB,GAAa,GAAU,QAAO,SAAC,EAAK,GACpC,IAAI,EAAW,EAAO,QACtB,SAAS,EAAW,EAAY,GAC5B,KAAK,GAAK,KACV,KAAK,KAAO,EACP,EAI0B,iBAAf,GACZ,KAAK,QAAA,GAAA,OAAa,GAAA,OAAc,EAAa,MAAQ,EAAb,IACxC,KAAK,MAAQ,GAAS,MAEK,iBAAf,IACZ,KAAK,QAAA,GAAA,OAAa,EAAW,KAAA,KAAA,OAAQ,EAAW,SAChD,KAAK,MAAQ,IATb,KAAK,QAAU,GAAa,IAAS,EACrC,KAAK,MAAQ,MAarB,OAFA,EAAO,GAAY,KAAK,IACxB,EAAI,GAAQ,EACL,CAAA,GACR,CAAC,GACJ,GAAW,OAAS,YACpB,GAAW,KAAO,UAClB,GAAW,MAAQ,WACnB,IAAI,GAAe,GAAiB,QAAO,SAAC,EAAK,GAAA,OAC7C,EAAI,EAAO,SAAW,GAAW,GAC1B,CAAA,GACR,CAAC,GAYA,GAAqB,GAAU,QAAO,SAAC,EAAK,GAAA,OACO,IAA/C,CAAC,SAAU,OAAQ,SAAS,QAAQ,KACpC,EAAI,EAAO,SAAW,GAAW,IAC9B,CAAA,GACR,CAAC,GAKJ,SAAS,KAAA,CACT,SAAS,GAAO,GAAO,OAAO,CAAA,CAC9B,SAAS,GAAkB,EAAI,GAC3B,OAAU,MAAN,GAAc,IAAO,GACd,EACJ,SAAU,GACb,OAAO,EAAG,EAAG,GAAA,EAGrB,SAAS,GAAS,EAAK,GACnB,OAAO,WACH,EAAI,MAAM,KAAM,WAChB,EAAI,MAAM,KAAM,UAAA,EAGxB,SAAS,GAAkB,EAAI,GAC3B,OAAI,IAAO,GACA,EACJ,WACH,IAAI,EAAM,EAAG,MAAM,KAAM,gBAAA,IACrB,IACA,UAAU,GAAK,GACnB,IAAI,EAAY,KAAK,UACrB,EAAU,KAAK,QACf,KAAK,UAAY,KACjB,KAAK,QAAU,KACf,IAAI,EAAO,EAAG,MAAM,KAAM,WAK1B,OAJI,IACA,KAAK,UAAY,KAAK,UAAY,GAAS,EAAW,KAAK,WAAa,GACxE,IACA,KAAK,QAAU,KAAK,QAAU,GAAS,EAAS,KAAK,SAAW,QAAA,IAC7D,EAAqB,EAAO,CAAA,EAG3C,SAAS,GAAkB,EAAI,GAC3B,OAAI,IAAO,GACA,EACJ,WACH,EAAG,MAAM,KAAM,WACf,IAAI,EAAY,KAAK,UACrB,EAAU,KAAK,QACf,KAAK,UAAY,KAAK,QAAU,KAChC,EAAG,MAAM,KAAM,WACX,IACA,KAAK,UAAY,KAAK,UAAY,GAAS,EAAW,KAAK,WAAa,GACxE,IACA,KAAK,QAAU,KAAK,QAAU,GAAS,EAAS,KAAK,SAAW,EAAA,EAG5E,SAAS,GAAkB,EAAI,GAC3B,OAAI,IAAO,GACA,EACJ,SAAU,GACb,IAAI,EAAM,EAAG,MAAM,KAAM,WACzB,EAAO,EAAe,GACtB,IAAI,EAAY,KAAK,UACrB,EAAU,KAAK,QACf,KAAK,UAAY,KACjB,KAAK,QAAU,KACf,IAAI,EAAO,EAAG,MAAM,KAAM,WAK1B,OAJI,IACA,KAAK,UAAY,KAAK,UAAY,GAAS,EAAW,KAAK,WAAa,GACxE,IACA,KAAK,QAAU,KAAK,QAAU,GAAS,EAAS,KAAK,SAAW,QAAA,IAC7D,OAAA,IACF,OAAA,EAAiC,EACjC,EAAO,EAAK,EAAA,EAGzB,SAAS,GAA2B,EAAI,GACpC,OAAI,IAAO,GACA,EACJ,WACH,WAAI,EAAG,MAAM,KAAM,YAEZ,EAAG,MAAM,KAAM,UAAA,EAG9B,SAAS,GAAgB,EAAI,GACzB,OAAI,IAAO,GACA,EACJ,WACH,IAAI,EAAM,EAAG,MAAM,KAAM,WACzB,GAAI,GAA2B,mBAAb,EAAI,KAAqB,CAEvC,IADA,IAAI,EAAO,KAAM,EAAI,UAAU,OAAQ,EAAO,IAAI,MAAM,GACjD,KACH,EAAK,GAAK,UAAU,GACxB,OAAO,EAAI,MAAK,WACZ,OAAO,EAAG,MAAM,EAAM,EAAA,IAG9B,OAAO,EAAG,MAAM,KAAM,UAAA,EA/F9B,GAAmB,YAAc,GACjC,GAAmB,WAAa,GAChC,GAAmB,UAAY,GAiG/B,IAAI,GAAW,CAAC,EAChB,GACqI,oBAAZ,QACrH,GACA,WACI,IAAI,EAAU,QAAQ,UACtB,GAAsB,oBAAX,SAA2B,OAAO,OACzC,MAAO,CAAC,EAAS,EAAS,GAAU,GACxC,IAAM,EAAU,OAAO,OAAO,OAAO,UAAW,IAAI,WAAW,CAAC,KAChE,MAAO,CACH,EACA,EAAS,GACT,EAAA,CARR,GAAA,GAAA,EAAA,GAAA,GAF0C,GAAA,GAAA,GAAuB,GAAA,GAAA,GAAoB,GAAA,GAAA,GAY/E,GAAoB,IAAsB,GAAmB,KACjE,GAAgB,IAAyB,GAAsB,YAC/D,KAAuB,GACzB,IAAA,EAIA,GAAO,SAAU,EAAU,GAC3B,GAAe,KAAK,CAAC,EAAU,IAC3B,KAJJ,eAAe,IAMX,IAAA,EAAuB,EAG3B,IAAA,EACJ,IAAA,EACA,GAAkB,GAClB,GAAkB,GAClB,GAAmB,KAAM,GAAkB,GACvC,GAAY,CACZ,GAAI,SACJ,QAAA,EACA,IAAK,EACL,WAAY,GACZ,YAAa,GACb,KAAA,EACA,IAAK,CAAC,EACN,SAAU,IAEV,GAAM,GACN,GAAiB,GACjB,GAAoB,EACpB,GAAiB,GACrB,SAAS,GAAa,GAClB,GAAoB,iBAAT,KACP,MAAM,IAAI,UAAU,wCACxB,KAAK,WAAa,GAClB,KAAK,MAAA,EACL,IAAI,EAAO,KAAK,KAAO,GAMvB,GALI,KACA,KAAK,aAAe,KACpB,KAAK,MAAQ,KACb,KAAK,SAAW,GAEF,mBAAP,EAAmB,CAC1B,GAAI,IAAO,GACP,MAAM,IAAI,UAAU,kBAKxB,OAJA,KAAK,OAAS,UAAU,GACxB,KAAK,OAAS,UAAU,aACpB,KAAK,QACL,GAAgB,KAAM,KAAK,QAAA,CAGnC,KAAK,OAAS,KACd,KAAK,OAAS,OACZ,EAAI,IACN,GAAmB,KAAM,EAAA,CAE7B,IAAM,GAAW,CACb,IAAK,WACD,IAAI,EAAM,GAAK,EAAc,GAC7B,SAAS,EAAK,EAAa,GAAA,IAAA,EAAA,KACnB,GAAiB,EAAI,SAAW,IAAQ,IAAO,IAAgB,IAC7D,EAAU,IAAkB,KAC9B,EAAK,IAAI,IAAa,SAAC,EAAS,GAChC,GAAoB,EAAM,IAAI,GAAS,GAA0B,EAAa,EAAK,EAAe,GAAU,GAA0B,EAAY,EAAK,EAAe,GAAU,EAAS,EAAQ,GAAA,IAGrM,OADA,IAAS,GAAsB,EAAI,MAC5B,CAAA,CAGX,OADA,EAAK,UAAY,GACV,CAAA,EAEX,IAAK,SAAU,GACX,EAAQ,KAAM,OAAQ,GAAS,EAAM,YAAc,GAC/C,GACA,CACI,IAAK,WACD,OAAO,CAAA,EAEX,IAAK,GAAS,KAAA,GAuD9B,SAAS,GAAS,EAAa,EAAY,EAAS,EAAQ,GACxD,KAAK,YAAqC,mBAAhB,EAA6B,EAAc,KACrE,KAAK,WAAmC,mBAAf,EAA4B,EAAa,KAClE,KAAK,QAAU,EACf,KAAK,OAAS,EACd,KAAK,IAAM,CAAA,CA+Ff,SAAS,GAAmB,EAAS,GACjC,IACI,GAAG,SAAA,GACC,GAAuB,OAAnB,EAAQ,OAAZ,CAEA,GAAI,IAAU,EACV,MAAM,IAAI,UAAU,6CACxB,IAAI,EAAoB,EAAQ,MAAQ,KACpC,GAA+B,mBAAf,EAAM,KACtB,GAAmB,GAAS,SAAC,EAAS,GAClC,aAAiB,GACb,EAAM,MAAM,EAAS,GACrB,EAAM,KAAK,EAAS,EAAA,KAI5B,EAAQ,QAAA,EACR,EAAQ,OAAS,EACjB,GAAsB,IAEtB,GACA,IAAA,IACL,GAAgB,KAAK,KAAM,GAAA,CAElC,MAAO,GACH,GAAgB,EAAS,EAAA,EAGjC,SAAS,GAAgB,EAAS,GAE9B,GADA,GAAgB,KAAK,GACE,OAAnB,EAAQ,OAAZ,CAEA,IAAI,EAAoB,EAAQ,MAAQ,KACxC,EAAS,GAAgB,GACzB,EAAQ,QAAA,EACR,EAAQ,OAAS,EACjB,IAAoB,OAAX,GAAqC,iBAAX,IAAwB,EAAO,UAnuBtE,SAAkB,EAAI,EAAS,GAC3B,IACI,EAAG,MAAM,UAFjB,EAEuB,CAEnB,MAAO,GACgB,EAL3B,EAmuB2F,WACnF,IAAI,EAAW,EAAsB,EAAQ,SAC7C,EAAO,SAAW,EAClB,EAAQ,EAAQ,QAAS,CACrB,IAAK,kBAAM,GACP,IAAa,EAAS,IAClB,EAAS,IAAI,MAAM,GACnB,EAAS,OACb,EAAQ,KAAA,OAkJxB,SAAmC,GAC1B,GAAgB,MAAK,SAAA,GAAA,OAAK,EAAE,SAAW,EAAQ,MAAA,KAChD,GAAgB,KAAK,EAAA,CAF7B,CA/I8B,GAC1B,GAAsB,GAClB,GACA,IAAA,EAER,SAAS,GAAsB,GAC3B,IAAI,EAAY,EAAQ,WACxB,EAAQ,WAAa,GACrB,IAAK,IAAI,EAAI,EAAG,EAAM,EAAU,OAAQ,EAAI,IAAO,EAC/C,GAAoB,EAAS,EAAU,IAE3C,IAAI,EAAM,EAAQ,OAChB,EAAI,KAAO,EAAI,WACS,IAAtB,OACE,GACF,IAAK,WAC2B,KAAtB,IACF,IAAA,GACL,KAGX,SAAS,GAAoB,EAAS,GAClC,GAAuB,OAAnB,EAAQ,OAAZ,CAIA,IAAI,EAAK,EAAQ,OAAS,EAAS,YAAc,EAAS,WAC1D,GAAW,OAAP,EACA,OAAQ,EAAQ,OAAS,EAAS,QAAU,EAAS,QAAQ,EAAQ,UAEvE,EAAS,IAAI,MACb,GACF,GAAK,GAAc,CAAC,EAAI,EAAS,GAAA,MAT7B,EAAQ,WAAW,KAAK,EAAA,CAWhC,SAAS,GAAa,EAAI,EAAS,GAC/B,IACI,GAAmB,EACnB,IAAI,EAAK,EAAQ,EAAQ,OACrB,EAAQ,OACR,EAAM,EAAG,IAGL,GAAgB,SAChB,GAAkB,IACtB,EAAM,EAAG,IAC+B,IAApC,GAAgB,QAAQ,IAsGxC,SAA4B,GAExB,IADA,IAAI,EAAI,GAAgB,OACjB,GAAA,GACC,KAAkB,GAAG,SAAW,EAAQ,OAExC,YADA,GAAgB,OAAO,EAAG,GAJtC,CArGmC,IAE3B,EAAS,QAAQ,EAAA,CAErB,MAAO,GACH,EAAS,OAAO,EAAA,CAEpB,QACI,GAAmB,KACS,KAAtB,IACF,OACF,EAAS,IAAI,KAAO,EAAS,IAAI,UAAA,EAG3C,SAAS,GAAS,EAAS,EAAQ,GAC/B,GAAI,EAAO,SAAW,EAClB,OAAO,EACX,IAAI,EAAQ,GACZ,IAAI,IAAA,EAAQ,OAAkB,CAC1B,IAA8B,EAAW,EAArC,EAAU,EAAQ,OACP,MAAX,GACA,EAAY,EAAQ,MAAQ,QAC5B,EAAU,EAAQ,SAAW,EAC7B,EAAQ,GAAY,EAAS,KAG7B,EAAY,EACZ,EAAU,IAEd,EAAO,KAAK,GAAa,EAAU,KAAO,EAAU,IAAM,EAAA,CAS9D,OAPI,MACA,EAAQ,GAAY,EAAQ,aAAc,MACF,IAA3B,EAAO,QAAQ,IACxB,EAAO,KAAK,GACZ,EAAQ,OACR,GAAS,EAAQ,MAAO,EAAQ,IAEjC,CAAA,CAEX,SAAS,GAAsB,EAAS,GACpC,IAAI,EAAU,EAAO,EAAK,SAAW,EAAI,EACrC,EA/XuB,MAgYvB,EAAQ,MAAQ,EAChB,EAAQ,SAAW,EAAA,CAG3B,SAAS,KACL,GAAO,IAAW,WACd,MAAyB,IAAA,IAGjC,SAAS,KACL,IAAI,EAAc,GAGlB,OAFA,IAAA,EACA,IAAA,EACO,CAAA,CAEX,SAAS,KACL,IAAI,EAAW,EAAG,EAClB,GACI,KAAO,GAAe,OAAS,GAI3B,IAHA,EAAY,GACZ,GAAiB,GACjB,EAAI,EAAU,OACT,EAAI,EAAG,EAAI,IAAK,EAAG,CACpB,IAAI,EAAO,EAAU,GACrB,EAAK,GAAG,MAAM,KAAM,EAAK,WAG5B,GAAe,OAAS,GACjC,IAAA,EACA,IAAA,CAAuB,CAE3B,SAAS,KACL,IAAI,EAAgB,GACpB,GAAkB,GAClB,EAAc,SAAQ,SAAA,GAClB,EAAE,KAAK,YAAY,KAAK,KAAM,EAAE,OAAQ,EAAA,IAI5C,IAFA,IAAI,EAAa,GAAe,MAAM,GAClC,EAAI,EAAW,OACZ,GACH,IAAa,IAAA,CA0BrB,SAAS,GAAc,GACnB,OAAO,IAAI,GAAa,IAAA,EAAiB,EAAA,CAE7C,SAAS,GAAK,EAAI,GACd,IAAI,EAAM,GACV,OAAO,WACH,IAAI,EAAc,KAAuB,EAAa,GACtD,IAEI,OADA,GAAa,GAAA,GACN,EAAG,MAAM,KAAM,UAAA,CAE1B,MAAO,GACH,GAAgB,EAAa,EAAA,CAEjC,QACI,GAAa,GAAA,GACT,GACA,IAAA,GAlXhB,EAAM,GAAa,UAAW,CAC1B,KAAM,GACN,MAAO,SAAU,EAAa,GAC1B,GAAoB,KAAM,IAAI,GAAS,KAAM,KAAM,EAAa,EAAY,IAAA,EAEhF,MAAO,SAAU,GACb,GAAyB,IAArB,UAAU,OACV,OAAO,KAAK,KAAK,KAAM,GAC3B,IAAI,EAAO,UAAU,GAAI,EAAU,UAAU,GAC7C,MAAuB,mBAAT,EAAsB,KAAK,KAAK,MAAM,SAAA,GAAA,OACpD,aAAe,EAAO,EAAQ,GAAO,GAAc,EAAA,IAC7C,KAAK,KAAK,MAAM,SAAA,GAAA,OAClB,GAAO,EAAI,OAAS,EAAO,EAAQ,GAAO,GAAc,EAAA,KAEhE,QAAS,SAAU,GACf,OAAO,KAAK,MAAK,SAAA,GAAA,OACb,IACO,CAAA,IACR,SAAA,GAAA,OACC,IACO,GAAc,EAAA,KAG7B,MAAO,CACH,IAAK,WACD,GAAI,KAAK,OACL,OAAO,KAAK,OAChB,IACI,IAAA,EACA,IACI,EADS,GAAS,KAAM,GA7H1B,IA8HiB,KAAK,qBAGxB,OAFoB,OAAhB,KAAK,SACL,KAAK,OAAS,GACX,CAAA,CAEX,QACI,IAAA,CAAwB,IAIpC,QAAS,SAAU,EAAI,GAAA,IAAA,EAAA,KACnB,OAAO,EAAK,IACR,IAAI,IAAa,SAAC,EAAS,GACvB,IAAI,EAAS,YAAW,kBAAM,EAAO,IAAI,GAAW,QAAQ,GAAA,GAAO,GACnE,EAAK,KAAK,EAAS,GAAQ,QAAQ,aAAa,KAAK,KAAM,GAAA,IAC1D,IAAA,IAGK,oBAAX,QAA0B,OAAO,aACxC,EAAQ,GAAa,UAAW,OAAO,YAAa,iBACxD,GAAU,IAAM,KAQhB,EAAM,GAAc,CAChB,IAAK,WACD,IAAI,EAAS,GAAW,MAAM,KAAM,WAC/B,IAAI,IACT,OAAO,IAAI,IAAa,SAAU,EAAS,GACjB,IAAlB,EAAO,QACP,EAAQ,IACZ,IAAI,EAAY,EAAO,OACvB,EAAO,SAAQ,SAAC,EAAG,GAAA,OAAM,GAAa,QAAQ,GAAG,MAAK,SAAA,GAClD,EAAO,GAAK,IACL,GACH,EAAQ,EAAA,GACb,EAAA,QAGX,QAAS,SAAA,GACL,GAAI,aAAiB,GACjB,OAAO,EACX,GAAI,GAA+B,mBAAf,EAAM,KACtB,OAAO,IAAI,IAAa,SAAC,EAAS,GAC9B,EAAM,KAAK,EAAS,EAAA,IAE5B,IAAI,EAAK,IAAI,GAAa,IAAA,EAAgB,GAE1C,OADA,GAAsB,EAAI,IACnB,CAAA,EAEX,OAAQ,GACR,KAAM,WACF,IAAI,EAAS,GAAW,MAAM,KAAM,WAAW,IAAI,IACnD,OAAO,IAAI,IAAa,SAAC,EAAS,GAC9B,EAAO,KAAI,SAAA,GAAA,OAAS,GAAa,QAAQ,GAAO,KAAK,EAAS,EAAA,QAGtE,IAAK,CACD,IAAK,kBAAM,EAAA,EACX,IAAK,SAAA,GAAA,OAAS,GAAM,CAAA,GAExB,YAAa,CAAE,IAAK,kBAAM,EAAA,GAC1B,OAAQ,GACR,OAAQ,GACR,UAAW,CACP,IAAK,kBAAM,EAAA,EACX,IAAK,SAAA,GAAW,GAAO,CAAA,GAE3B,gBAAiB,CACb,IAAK,kBAAM,EAAA,EACX,IAAK,SAAA,GAAW,GAAkB,CAAA,GAEtC,OAAQ,SAAC,EAAI,GAAA,OACF,IAAI,IAAa,SAAC,EAAS,GAAA,OACvB,IAAS,SAAC,EAAS,GACtB,IAAI,EAAM,GACV,EAAI,WAAa,GACjB,EAAI,YAAc,EAClB,EAAI,SAAW,IAAS,eAAA,EAAA,MAyNxC,SAAkD,GAK9C,GAAe,MAJf,SAAS,IACL,IACA,GAAe,OAAO,GAAe,QAAQ,GAAY,QAG3D,GACF,IAAK,WAC2B,KAAtB,IACF,IAAA,GACL,IAVP,EAxN6D,WACV,IAA3B,EAAK,WAAW,OAAe,IAAY,EAAO,EAAK,WAAW,SAEvE,EAAI,UACP,GAAA,GACD,EAAW,EAAS,EAAA,OAI/B,KACI,GAAc,YACd,EAAQ,GAAc,cAAc,WAChC,IAAM,EAAmB,GAAW,MAAM,KAAM,WAAW,IAAI,IAC/D,OAAO,IAAI,IAAa,SAAA,GACY,IAA5B,EAAiB,QACjB,EAAQ,IACZ,IAAI,EAAY,EAAiB,OAC3B,EAAU,IAAI,MAAM,GAC1B,EAAiB,SAAQ,SAAC,EAAG,GAAA,OAAM,GAAa,QAAQ,GAAG,MAAK,SAAA,GAAA,OAAS,EAAQ,GAAK,CAAE,OAAQ,YAAa,MAAA,EAAA,IAAS,SAAA,GAAA,OAAU,EAAQ,GAAK,CAAE,OAAQ,WAAY,OAAA,EAAA,IAC9J,MAAK,mBAAQ,GAAa,EAAQ,EAAA,aAG/C,GAAc,KAAiC,oBAAnB,gBAC5B,EAAQ,GAAc,OAAO,WACzB,IAAM,EAAmB,GAAW,MAAM,KAAM,WAAW,IAAI,IAC/D,OAAO,IAAI,IAAa,SAAC,EAAS,GACE,IAA5B,EAAiB,QACjB,EAAO,IAAI,eAAe,KAC9B,IAAI,EAAY,EAAiB,OAC3B,EAAW,IAAI,MAAM,GAC3B,EAAiB,SAAQ,SAAC,EAAG,GAAA,OAAM,GAAa,QAAQ,GAAG,MAAK,SAAA,GAAA,OAAS,EAAQ,EAAA,IAAQ,SAAA,GACrF,EAAS,GAAK,IACP,GACH,EAAO,IAAI,eAAe,GAAA,cAoOlD,IAAM,GAAO,CAAE,OAAQ,EAAG,OAAQ,EAAG,GAAI,GACrC,GAAc,EACd,GAAY,GACZ,GAAa,EACb,GAAc,EACd,GAAkB,EACtB,SAAS,GAAS,EAAI,EAAO,EAAI,GAC7B,IAAI,EAAS,GAAK,EAAM,OAAO,OAAO,GACtC,EAAI,OAAS,EACb,EAAI,IAAM,EACV,EAAI,QAAA,EACJ,EAAI,KAAO,GACX,IAAI,EAAY,GAAU,IAC1B,EAAI,IAAM,GAAqB,CAC3B,QAAS,GACT,YAAa,CAAE,MAAO,GAAc,cAAA,EAAoB,UAAA,GACxD,IAAK,GAAa,IAClB,KAAM,GAAa,KACnB,WAAY,GAAa,WACzB,IAAK,GAAa,IAClB,QAAS,GAAa,QACtB,OAAQ,GAAa,OACrB,MAAO,GAAsB,EAAU,MAAO,GAC9C,MAAO,GAAsB,EAAU,MAAO,IAC9C,CAAC,EACD,GACA,EAAO,EAAK,KACd,EAAO,IACT,EAAI,SAAW,aACT,KAAK,OAAO,KAAO,KAAK,OAAO,UAAA,EAErC,IAAI,EAAK,GAAO,EAAK,EAAI,EAAI,GAG7B,OAFgB,IAAZ,EAAI,KACJ,EAAI,WACD,CAAA,CAEX,SAAS,KAKL,OAJK,GAAK,KACN,GAAK,KAAO,MACd,GAAK,OACP,GAAK,QA9f+B,IA+f7B,GAAK,EAAA,CAEhB,SAAS,KACL,QAAK,GAAK,SAEY,KAAhB,GAAK,SACP,GAAK,GAAK,GACd,GAAK,OAtgB+B,IAsgBtB,GAAK,QAAA,EACZ,CAKX,SAAS,GAAyB,GAC9B,OAAI,GAAK,QAAU,GAAmB,EAAgB,cAAgB,IAClE,KACO,EAAgB,MAAK,SAAA,GAAA,OACxB,KACO,CAAA,IACR,SAAA,GAAA,OACC,KACO,GAAU,EAAA,KAGlB,CAAA,CAEX,SAAS,GAAc,KACjB,GACG,GAAK,QAA4B,KAAhB,GAAK,SACvB,GAAK,OAAS,GAAK,GAAK,GAE5B,GAAU,KAAK,IACf,GAAa,GAAA,EAAY,CAE7B,SAAS,KACL,IAAI,EAAO,GAAU,GAAU,OAAS,GACxC,GAAU,MACV,GAAa,GAAA,EAAM,CAEvB,SAAS,GAAa,EAAY,GAC9B,IAAI,EAAc,GAIlB,IAHI,GAAgB,GAAK,QAAY,MAAgB,IAAe,IAAO,MAAkB,IAAc,IAAe,KACtH,eAAe,EAAgB,GAAc,KAAK,KAAM,GAAc,IAEtE,IAAe,KAEnB,GAAM,EACF,IAAgB,KAChB,GAAU,IAAM,MAChB,IAAoB,CACpB,IAAI,EAAgB,GAAU,IAAI,QAC9B,EAAY,EAAW,IAC3B,GAAmB,KAAO,EAAU,MACpC,EAAc,UAAU,KAAO,EAAU,OACrC,EAAY,QAAU,EAAW,UACjC,OAAO,eAAe,EAAS,UAAW,EAAU,aACpD,EAAc,IAAM,EAAU,IAC9B,EAAc,KAAO,EAAU,KAC/B,EAAc,QAAU,EAAU,QAClC,EAAc,OAAS,EAAU,OAC7B,EAAU,aACV,EAAc,WAAa,EAAU,YACrC,EAAU,MACV,EAAc,IAAM,EAAU,KAAA,EAI9C,SAAS,KACL,IAAI,EAAgB,EAAQ,QAC5B,OAAO,GAAqB,CACxB,QAAS,EACT,YAAa,OAAO,yBAAyB,EAAS,WACtD,IAAK,EAAc,IACnB,KAAM,EAAc,KACpB,WAAY,EAAc,WAC1B,IAAK,EAAc,IACnB,QAAS,EAAc,QACvB,OAAQ,EAAc,OACtB,MAAO,GAAmB,KAC1B,MAAO,EAAc,UAAU,MAC/B,CAAC,CAAD,CAER,SAAS,GAAO,EAAK,EAAI,EAAI,EAAI,GAC7B,IAAI,EAAa,GACjB,IAEI,OADA,GAAa,GAAA,GACN,EAAG,EAAI,EAAI,EAAA,CAEtB,QACI,GAAa,GAAA,EAAY,EAGjC,SAAS,GAA0B,EAAI,EAAM,EAAe,GACxD,MAAqB,mBAAP,EAAoB,EAAK,WACnC,IAAI,EAAY,GACZ,GACA,KACJ,GAAa,GAAA,GACb,IACI,OAAO,EAAG,MAAM,KAAM,UAAA,CAE1B,QACI,GAAa,GAAA,GACT,GACA,eAAe,GAAA,GAI/B,SAAS,GAAsB,EAAU,GACrC,OAAO,SAAU,EAAY,GACzB,OAAO,EAAS,KAAK,KAAM,GAA0B,EAAY,GAAO,GAA0B,EAAY,GAAA,GApG3D,KAAtD,GAAK,IAAmB,QAAQ,mBACjC,GAA0B,GAA0B,IAsGxD,IAAI,GAAY,GAAa,OAE7B,SAAS,GAAgB,EAAI,EAAM,EAAY,GAC3C,GAAK,EAAG,QAAW,EAAG,OAAO,cAAkB,GAAI,YAAe,EAAG,MAWhE,CACD,IAAI,EAAQ,EAAG,mBAAmB,EAAM,EAAY,EAAG,WACvD,IACI,EAAM,SACN,EAAG,OAAO,eAAiB,EAE/B,MAAO,GACH,OAAI,EAAG,OAAS,GAAS,cAAgB,EAAG,YAAc,EAAG,OAAO,eAAiB,GACjF,QAAQ,KAAK,4BACb,EAAG,SACI,EAAG,OAAO,MAAK,kBAAM,GAAgB,EAAI,EAAM,EAAY,EAAA,KAE/D,GAAU,EAAA,CAErB,OAAO,EAAM,SAAS,GAAM,SAAC,EAAS,GAAA,OAC3B,IAAS,kBACZ,GAAI,MAAQ,EACL,EAAG,EAAS,EAAQ,EAAA,OAEhC,MAAK,SAAA,GACJ,GAAa,cAAT,EACA,IACI,EAAM,SAAS,QAAA,CAEnB,MAAO,GAAA,CACX,MAAgB,aAAT,EAAsB,EAAS,EAAM,YAAY,MAAK,kBAAM,CAAA,OAnCvE,GAAI,EAAG,OAAO,aACV,OAAO,GAAU,IAAI,GAAW,eAAe,EAAG,OAAO,cAE7D,IAAK,EAAG,OAAO,cAAe,CAC1B,IAAK,EAAG,SAAS,SACb,OAAO,GAAU,IAAI,GAAW,gBACpC,EAAG,OAAO,MAAM,GAAA,CAEpB,OAAO,EAAG,OAAO,eAAe,MAAK,kBAAM,GAAgB,EAAI,EAAM,EAAY,EAAA,IAgCzF,IACM,GAAY,OAAO,aAAa,OAEhC,GAAuB,oGAEvB,GAAc,GACd,GAAkC,oBAAd,WAA6B,sBAAsB,KAAK,UAAU,WACtF,GAA4B,GAC5B,GAA6B,GAC7B,GAAwB,SAAA,GAAA,OAAU,6BAA6B,KAAK,EAAA,EAK1E,SAAS,GAAQ,EAAS,GACtB,OAAO,EACH,EACI,WAAc,OAAO,EAAQ,MAAM,KAAM,YAAc,EAAQ,MAAM,KAAM,UAAA,EAC3E,EACJ,CAAA,CAGR,IAAM,GAAW,CACb,KAAM,EACN,OAAA,IACA,WAAA,EACA,MAAO,CAAC,IACR,WAAA,GAGJ,SAAS,GAA8B,GACnC,MAA0B,iBAAZ,GAAyB,KAAK,KAAK,GAQ1C,SAAA,GAAA,OAAQ,CAAA,EAPR,SAAA,GAAA,gBACK,EAAI,IAA2B,KAAW,UAC1C,EAAM,EAAU,IACL,GAER,CAAA,EAKnB,SAAS,KACL,MAAM,GAAW,MAAA,CAGrB,SAAS,GAAI,EAAG,GACZ,IACI,IAAM,EAAK,GAAK,GACV,EAAK,GAAK,GAChB,GAAI,IAAO,EACP,MAAW,UAAP,EACO,EACA,UAAP,GACQ,EACD,WAAP,EACO,EACA,WAAP,GACQ,EACD,WAAP,EACO,EACA,WAAP,GACQ,EACD,SAAP,EACO,EACA,SAAP,EACO,KACH,EAEZ,OAAQ,GACJ,IAAK,SACL,IAAK,OACL,IAAK,SACD,OAAO,EAAI,EAAI,EAAI,EAAI,GAAK,EAAI,EACpC,IAAK,SACD,OAoBhB,SAA4B,EAAG,GAI3B,IAHA,IAAM,EAAK,EAAE,OACP,EAAK,EAAE,OACP,EAAI,EAAK,EAAK,EAAK,EAChB,EAAI,EAAG,EAAI,IAAK,EACrB,GAAI,EAAE,KAAO,EAAE,GACX,OAAO,EAAE,GAAK,EAAE,IAAM,EAAI,EAElC,OAAO,IAAO,EAAK,EAAI,EAAK,GAAM,EAAI,EAR1C,CApB0C,GAAc,GAAI,GAAc,IAE9D,IAAK,QACD,OAMhB,SAAuB,EAAG,GAItB,IAHA,IAAM,EAAK,EAAE,OACP,EAAK,EAAE,OACP,EAAI,EAAK,EAAK,EAAK,EAChB,EAAI,EAAG,EAAI,IAAK,EAAG,CACxB,IAAM,EAAM,GAAI,EAAE,GAAI,EAAE,IACxB,GAAY,IAAR,EACA,OAAO,CAAA,CAEf,OAAO,IAAO,EAAK,EAAI,EAAK,GAAM,EAAI,EAT1C,CANqC,EAAG,GAAA,CAGpC,MAAO,GAAA,CACP,OAAO,GAAA,CAuBX,SAAS,GAAK,GACV,IAAM,SAAW,EACjB,GAAU,WAAN,EACA,OAAO,EACX,GAAI,YAAY,OAAO,GACnB,MAAO,SACX,IAAM,EAAQ,GAAY,GAC1B,MAAiB,gBAAV,EAA0B,SAAW,CAAA,CAEhD,SAAS,GAAc,GACnB,OAAI,aAAa,WACN,EACP,YAAY,OAAO,GACZ,IAAI,WAAW,EAAE,OAAQ,EAAE,WAAY,EAAE,YAC7C,IAAI,WAAW,EAAA,CAG1B,IAAM,GAAA,oBAAA,IAAA,EAAA,KAAA,EAAA,CAsUuG,OAtUvG,EAAA,EAAA,EAAA,IAAA,SAAA,MACF,SAAO,EAAM,EAAI,GACb,IAAM,EAAQ,KAAK,KAAO,GAAI,MACxB,EAAY,KAAK,KACvB,SAAS,EAAwB,EAAS,EAAQ,GAC9C,IAAK,EAAM,OAAO,GACd,MAAM,IAAI,GAAW,SAAS,SAAW,EAAY,4BACzD,OAAO,EAAG,EAAM,SAAU,EAAA,CAE9B,IAAM,EAAc,KACpB,IACI,OAAO,GAAS,EAAM,GAAG,SAAW,KAAK,GAAG,OACxC,IAAU,GAAI,MACV,EAAM,SAAS,EAAM,EAAyB,GAC9C,IAAS,kBAAM,EAAM,SAAS,EAAM,EAAyB,EAAA,GAAc,CAAE,MAAO,EAAO,UAAW,GAAI,WAAa,KAC3H,GAAgB,KAAK,GAAI,EAAM,CAAC,KAAK,MAAO,EAAA,CAEpD,QACQ,GACA,IAAA,IAGZ,CAAA,IAAA,MAAA,MAAA,SAAI,EAAW,GAAA,IAAA,EAAA,KACX,OAAI,GAAa,EAAU,cAAgB,OAChC,KAAK,MAAM,GAAW,MAAM,GAChC,KAAK,OAAO,YAAa,SAAA,GAAA,OACrB,EAAK,KAAK,IAAI,CAAE,MAAA,EAAO,IAAK,IAC9B,MAAK,SAAA,GAAA,OAAO,EAAK,KAAK,QAAQ,KAAK,EAAA,OACzC,KAAK,EAAA,GAEZ,CAAA,IAAA,QAAA,MAAA,SAAM,GACF,GAA2B,iBAAhB,EACP,OAAO,IAAI,KAAK,GAAG,YAAY,KAAM,GACzC,GAAI,EAAQ,GACR,OAAO,IAAI,KAAK,GAAG,YAAY,KAAM,IAAN,OAAU,EAAY,KAAK,WAC9D,IAAM,EAAW,EAAK,GACtB,GAAwB,IAApB,EAAS,OACT,OAAO,KACF,MAAM,EAAS,IACf,OAAO,EAAY,EAAS,KACrC,IAAM,EAAgB,KAAK,OAAO,QAAQ,OAAO,KAAK,OAAO,SAAS,QAAO,SAAA,GACzE,GAAI,EAAG,UACH,EAAS,OAAM,SAAA,GAAA,OAAW,EAAG,QAAQ,QAAQ,IAAY,KAAI,CAC7D,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,SAAU,EACnC,IAAyC,IAArC,EAAS,QAAQ,EAAG,QAAQ,IAC5B,OAAO,EAEf,OAAO,EAEX,OAAO,KACR,MAAK,SAAC,EAAG,GAAA,OAAM,EAAE,QAAQ,OAAS,EAAE,QAAQ,MAAA,IAAQ,GACvD,GAAI,GAAiB,KAAK,GAAG,UAAY,GAAW,CAChD,IAAM,EAAuB,EAAc,QAAQ,MAAM,EAAG,EAAS,QACrE,OAAO,KACF,MAAM,GACN,OAAO,EAAqB,KAAI,SAAA,GAAA,OAAM,EAAY,EAAA,MAEtD,GAAiB,IAClB,QAAQ,KAAA,aAAA,OAAkB,KAAK,UAAU,GAAA,QAAA,OAAmB,KAAK,KAAA,wCAAA,OAC1C,EAAS,KAAK,WACzC,IAAQ,EAAc,KAAK,OAArB,UACA,EAAM,KAAK,GAAG,MAAM,UAC1B,SAAS,EAAO,EAAG,GACf,OAAyB,IAAlB,EAAI,IAAI,EAAG,EAAA,CAEtB,IAAA,EAA8B,EAAS,QAAO,SAAA,EAA4B,GAAA,IAAA,EAAA,EAAA,EAAA,GAA1B,EAAA,EAAA,GAAW,EAAA,EAAA,GACjD,EAAQ,EAAU,GAClB,EAAQ,EAAY,GAC1B,MAAO,CACH,GAAa,EACb,IAAc,EACV,GAAQ,EAAc,GAAS,EAAM,MACjC,SAAA,GACI,IAAM,EAAO,EAAa,EAAG,GAC7B,OAAO,EAAQ,IAAS,EAAK,MAAK,SAAA,GAAA,OAAQ,EAAO,EAAO,EAAA,KACxD,SAAA,GAAA,OAAK,EAAO,EAAO,EAAa,EAAG,GAAA,GACzC,EAAA,GAEX,CAAC,KAAM,OAAA,EAAA,EAAA,EAAA,GAbH,EAAA,EAAA,GAAK,EAAA,EAAA,GAcZ,OAAO,EACH,KAAK,MAAM,EAAI,MAAM,OAAO,EAAY,EAAI,UACvC,OAAO,GACZ,EACI,KAAK,OAAO,GACZ,KAAK,MAAM,GAAU,OAAO,MAExC,CAAA,IAAA,SAAA,MAAA,SAAO,GACH,OAAO,KAAK,eAAe,IAAI,EAAA,GAEnC,CAAA,IAAA,QAAA,MAAA,SAAM,GACF,OAAO,KAAK,eAAe,MAAM,EAAA,GAErC,CAAA,IAAA,SAAA,MAAA,SAAO,GACH,OAAO,KAAK,eAAe,OAAO,EAAA,GAEtC,CAAA,IAAA,QAAA,MAAA,SAAM,GACF,OAAO,KAAK,eAAe,MAAM,EAAA,GAErC,CAAA,IAAA,OAAA,MAAA,SAAK,GACD,OAAO,KAAK,eAAe,KAAK,EAAA,GAEpC,CAAA,IAAA,UAAA,MAAA,SAAQ,GACJ,OAAO,KAAK,eAAe,QAAQ,EAAA,GAEvC,CAAA,IAAA,eAAA,MAAA,WACI,OAAO,IAAI,KAAK,GAAG,WAAW,IAAI,KAAK,GAAG,YAAY,MAAA,GAE1D,CAAA,IAAA,UAAA,MAAA,SAAQ,GACJ,OAAO,IAAI,KAAK,GAAG,WAAW,IAAI,KAAK,GAAG,YAAY,KAAM,EAAQ,GAAA,IAAA,OAC5D,EAAM,KAAK,UACf,GAAA,GAER,CAAA,IAAA,UAAA,MAAA,WACI,OAAO,KAAK,eAAe,SAAA,GAE/B,CAAA,IAAA,aAAA,MAAA,SAAW,GACP,IAAQ,EAAwB,KAA1B,GAAY,EAAc,KAApB,KACZ,KAAK,OAAO,YAAc,EACtB,EAAY,qBAAqB,KACjC,EAAA,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,MAAA,KAAA,UAAA,CAEqB,OAFrB,EAAA,EAAA,EAAA,IAAA,KAAA,IACQ,WAAO,OAAO,CAAA,GAClB,CAAA,IAAA,QAAA,MAAA,WAAU,OAAO,CAAA,KAAA,CAAA,CAFrB,CAA4B,IAMhC,IADA,IAAM,EAAiB,IAAI,IAClB,EAAQ,EAAY,UAAW,EAAO,EAAQ,EAAS,GAC5D,OAAO,oBAAoB,GAAO,SAAQ,SAAA,GAAA,OAAY,EAAe,IAAI,EAAA,IAE7E,IAAM,EAAY,SAAA,GACd,IAAK,EACD,OAAO,EACX,IAAM,EAAM,OAAO,OAAO,EAAY,WACtC,IAAK,IAAI,KAAK,EACV,IAAK,EAAe,IAAI,GACpB,IACI,EAAI,GAAK,EAAI,EAAA,CAEjB,MAAO,GAAA,CACf,OAAO,CAAA,EAOX,OALI,KAAK,OAAO,UACZ,KAAK,KAAK,QAAQ,YAAY,KAAK,OAAO,UAE9C,KAAK,OAAO,SAAW,EACvB,KAAK,KAAK,UAAW,GACd,CAAA,GAEX,CAAA,IAAA,cAAA,MAAA,WAII,OAAO,KAAK,YAHZ,SAAe,GACX,EAAO,KAAM,EAAA,MAIrB,CAAA,IAAA,MAAA,MAAA,SAAI,EAAK,GAAA,IAAA,EAAA,KACL,EAA0B,KAAK,OAAO,QAA9B,EAAA,EAAF,KAAQ,EAAA,EAAF,QACR,EAAW,EAIf,OAHI,GAAW,IACX,EAAW,GAA8B,EAA9B,CAAuC,IAE/C,KAAK,OAAO,aAAa,SAAA,GAAA,OACrB,EAAK,KAAK,OAAO,CAAE,MAAA,EAAO,KAAM,MAAO,KAAa,MAAP,EAAc,CAAC,GAAO,KAAM,OAAQ,CAAC,IAAA,IAC1F,MAAK,SAAA,GAAA,OAAO,EAAI,YAAc,GAAa,OAAO,EAAI,SAAS,IAAM,EAAI,UAAA,IACvE,MAAK,SAAA,GACN,GAAI,EACA,IACI,EAAa,EAAK,EAAS,EAAA,CAE/B,MAAO,GAAA,CAEX,OAAO,CAAA,MAGf,CAAA,IAAA,SAAA,MAAA,SAAO,EAAa,GAChB,GAA2B,iBAAhB,GAA6B,EAAQ,GAO5C,OAAO,KAAK,MAAM,OAAO,OAAO,GAAa,OAAO,GANpD,IAAM,EAAM,EAAa,EAAa,KAAK,OAAO,QAAQ,SAC1D,gBAAI,EACO,GAAU,IAAI,GAAW,gBAAgB,kDAC7C,KAAK,MAAM,OAAO,OAAO,GAAK,OAAO,EAAA,GAMpD,CAAA,IAAA,MAAA,MAAA,SAAI,EAAK,GAAA,IAAA,EAAA,KACL,EAA0B,KAAK,OAAO,QAA9B,EAAA,EAAF,KAAQ,EAAA,EAAF,QACR,EAAW,EAIf,OAHI,GAAW,IACX,EAAW,GAA8B,EAA9B,CAAuC,IAE/C,KAAK,OAAO,aAAa,SAAA,GAAA,OAAS,EAAK,KAAK,OAAO,CAAE,MAAA,EAAO,KAAM,MAAO,OAAQ,CAAC,GAAW,KAAa,MAAP,EAAc,CAAC,GAAO,UAC3H,MAAK,SAAA,GAAA,OAAO,EAAI,YAAc,GAAa,OAAO,EAAI,SAAS,IAAM,EAAI,UAAA,IACzE,MAAK,SAAA,GACN,GAAI,EACA,IACI,EAAa,EAAK,EAAS,EAAA,CAE/B,MAAO,GAAA,CAEX,OAAO,CAAA,MAGf,CAAA,IAAA,SAAA,MAAA,SAAO,GAAA,IAAA,EAAA,KACH,OAAO,KAAK,OAAO,aAAa,SAAA,GAAA,OAAS,EAAK,KAAK,OAAO,CAAE,MAAA,EAAO,KAAM,SAAU,KAAM,CAAC,IAAA,IACrF,MAAK,SAAA,GAAA,OAAO,EAAI,YAAc,GAAa,OAAO,EAAI,SAAS,SAAM,OAE9E,CAAA,IAAA,QAAA,MAAA,eAAA,EAAA,KACI,OAAO,KAAK,OAAO,aAAa,SAAA,GAAA,OAAS,EAAK,KAAK,OAAO,CAAE,MAAA,EAAO,KAAM,cAAe,MAAO,IAAA,IAC1F,MAAK,SAAA,GAAA,OAAO,EAAI,YAAc,GAAa,OAAO,EAAI,SAAS,SAAM,OAE9E,CAAA,IAAA,UAAA,MAAA,SAAQ,GAAA,IAAA,EAAA,KACJ,OAAO,KAAK,OAAO,YAAY,SAAA,GAAA,OACpB,EAAK,KAAK,QAAQ,CACrB,KAAA,EACA,MAAA,IACD,MAAK,SAAA,GAAA,OAAU,EAAO,KAAI,SAAA,GAAA,OAAO,EAAK,KAAK,QAAQ,KAAK,EAAA,YAGnE,CAAA,IAAA,UAAA,MAAA,SAAQ,EAAS,EAAe,GAAA,IAAA,EAAA,KACtB,EAAO,MAAM,QAAQ,GAAiB,OAAA,EAEtC,GADN,EAAU,IAAY,OAAA,EAAmB,IACX,EAAQ,aAAA,EACtC,OAAO,KAAK,OAAO,aAAa,SAAA,GAC5B,IAAA,EAA0B,EAAK,OAAO,QAA9B,EAAA,EAAF,KAAQ,EAAA,EAAF,QACZ,GAAI,GAAW,EACX,MAAM,IAAI,GAAW,gBAAgB,gEACzC,GAAI,GAAQ,EAAK,SAAW,EAAQ,OAChC,MAAM,IAAI,GAAW,gBAAgB,wDACzC,IAAM,EAAa,EAAQ,OACvB,EAAe,GAAW,EAC1B,EAAQ,IAAI,GAA8B,IAC1C,EACJ,OAAO,EAAK,KAAK,OAAO,CAAE,MAAA,EAAO,KAAM,MAAO,KAAM,EAAM,OAAQ,EAAc,YAAA,IAC3E,MAAK,SAAA,GAAqC,IAAlC,EAAA,EAAA,YAAa,EAAA,EAAA,QAAS,EAAA,EAAA,WAAY,EAAA,EAAA,SAE3C,GAAoB,IAAhB,EACA,OAFW,EAAc,EAAU,EAGvC,MAAM,IAAI,GAAA,GAAA,OAAa,EAAK,KAAA,gBAAA,OAAmB,EAAA,QAAA,OAAkB,EAAA,sBAAgC,EAAA,SAI7G,CAAA,IAAA,UAAA,MAAA,SAAQ,EAAS,EAAe,GAAA,IAAA,EAAA,KACtB,EAAO,MAAM,QAAQ,GAAiB,OAAA,EAEtC,GADN,EAAU,IAAY,OAAA,EAAmB,IACX,EAAQ,aAAA,EACtC,OAAO,KAAK,OAAO,aAAa,SAAA,GAC5B,IAAA,EAA0B,EAAK,OAAO,QAA9B,EAAA,EAAF,KAAQ,EAAA,EAAF,QACZ,GAAI,GAAW,EACX,MAAM,IAAI,GAAW,gBAAgB,gEACzC,GAAI,GAAQ,EAAK,SAAW,EAAQ,OAChC,MAAM,IAAI,GAAW,gBAAgB,wDACzC,IAAM,EAAa,EAAQ,OACvB,EAAe,GAAW,EAC1B,EAAQ,IAAI,GAA8B,IAC1C,EACJ,OAAO,EAAK,KAAK,OAAO,CAAE,MAAA,EAAO,KAAM,MAAO,KAAM,EAAM,OAAQ,EAAc,YAAA,IAC3E,MAAK,SAAA,GAAqC,IAAlC,EAAA,EAAA,YAAa,EAAA,EAAA,QAAS,EAAA,EAAA,WAAY,EAAA,EAAA,SAE3C,GAAoB,IAAhB,EACA,OAFW,EAAc,EAAU,EAGvC,MAAM,IAAI,GAAA,GAAA,OAAa,EAAK,KAAA,gBAAA,OAAmB,EAAA,QAAA,OAAkB,EAAA,sBAAgC,EAAA,SAI7G,CAAA,IAAA,aAAA,MAAA,SAAW,GAAA,IAAA,EAAA,KACD,EAAY,KAAK,KACjB,EAAO,EAAe,KAAK,SAAA,GAAA,OAAU,EAAM,GAAA,IAC3C,EAAc,EAAe,KAAK,SAAA,GAAA,OAAU,EAAM,OAAA,IAClD,EAAY,GAClB,OAAO,KAAK,OAAO,aAAc,SAAA,GAAA,OACtB,EAAU,QAAQ,CAAE,MAAA,EAAO,KAAA,EAAM,MAAO,UAAW,MAAM,SAAA,GAC5D,IAAM,EAAa,GACb,EAAa,GACnB,EAAe,SAAQ,SAAA,EAAmB,GAAA,IAAhB,EAAA,EAAA,IAAK,EAAA,EAAA,QACrB,EAAM,EAAK,GACjB,GAAI,EAAK,CACL,IAAK,IAAL,EAAA,EAAA,EAAsB,OAAO,KAAK,GAAA,EAAA,EAAA,OAAA,IAAU,CAAvC,IAAM,EAAA,EAAA,GACD,EAAQ,EAAQ,GACtB,GAAI,IAAY,EAAK,OAAO,QAAQ,SAChC,GAAwB,IAApB,GAAI,EAAO,GACX,MAAM,IAAI,GAAW,WAAW,kDAIpC,EAAa,EAAK,EAAS,EAAA,CAGnC,EAAU,KAAK,GACf,EAAW,KAAK,GAChB,EAAW,KAAK,EAAA,KAGxB,IAAM,EAAa,EAAW,OAC9B,OAAO,EACF,OAAO,CACR,MAAA,EACA,KAAM,MACN,KAAM,EACN,OAAQ,EACR,QAAS,CACL,KAAA,EACA,YAAA,KAGH,MAAK,SAAA,GAAgB,IAAb,EAAA,EAAA,YAAa,EAAA,EAAA,SACtB,GAAoB,IAAhB,EACA,OAAO,EACX,IAAK,IAAL,EAAA,EAAA,EAAqB,OAAO,KAAK,GAAA,EAAA,EAAA,OAAA,IAAW,CAAvC,IAAM,EAAA,EAAA,GACD,EAAe,EAAU,OAAO,IACtC,GAAoB,MAAhB,EAAsB,CACtB,IAAM,EAAU,EAAS,UAClB,EAAS,GAChB,EAAS,GAAgB,CAAA,EAGjC,MAAM,IAAI,GAAA,GAAA,OAAa,EAAK,KAAA,mBAAA,OAAsB,EAAA,QAAA,OAAkB,EAAA,sBAAgC,EAAA,YAKpH,CAAA,IAAA,aAAA,MAAA,SAAW,GAAA,IAAA,EAAA,KACD,EAAU,EAAK,OACrB,OAAO,KAAK,OAAO,aAAa,SAAA,GAAA,OACrB,EAAK,KAAK,OAAO,CAAE,MAAA,EAAO,KAAM,SAAU,KAAM,GAAA,IACxD,MAAK,SAAA,GAA4B,IAAzB,EAAA,EAAA,YAAa,EAAA,EAAA,WAAY,EAAA,EAAA,SAChC,GAAoB,IAAhB,EACA,OAAO,EACX,MAAM,IAAI,GAAA,GAAA,OAAa,EAAK,KAAA,mBAAA,OAAsB,EAAA,QAAA,OAAkB,EAAA,sBAA6B,EAAA,QAAA,CAAA,CAtUvG,GA2UN,SAAS,GAAO,GACZ,IAAI,EAAM,CAAC,EACP,EAAK,SAAU,EAAW,GAC1B,GAAI,EAAY,CAEZ,IADA,IAAI,EAAI,UAAU,OAAQ,EAAO,IAAI,MAAM,EAAI,KACtC,GACL,EAAK,EAAI,GAAK,UAAU,GAE5B,OADA,EAAI,GAAW,UAAU,MAAM,KAAM,GAC9B,CAAA,CAEN,GAA2B,iBAAhB,EACZ,OAAO,EAAI,EAAA,EAGnB,EAAG,aAAe,EAClB,IAAK,IAAI,EAAI,EAAG,EAAI,UAAU,OAAQ,EAAI,IAAK,EAC3C,EAAI,UAAU,IAElB,OAAO,EACP,SAAS,EAAI,EAAW,EAAe,GACnC,GAAyB,iBAAd,EACP,OAAO,EAAoB,GAC1B,IACD,EAAgB,IACf,IACD,EAAkB,IACtB,IAAI,EAAU,CACV,YAAa,GACb,KAAM,EACN,UAAW,SAAU,IACwB,IAArC,EAAQ,YAAY,QAAQ,KAC5B,EAAQ,YAAY,KAAK,GACzB,EAAQ,KAAO,EAAc,EAAQ,KAAM,GAAA,EAGnD,YAAa,SAAU,GACnB,EAAQ,YAAc,EAAQ,YAAY,QAAO,SAAU,GAAM,OAAO,IAAO,CAAA,IAC/E,EAAQ,KAAO,EAAQ,YAAY,OAAO,EAAe,EAAA,GAIjE,OADA,EAAI,GAAa,EAAG,GAAa,EAC1B,CAAA,CAEX,SAAS,EAAoB,GACzB,EAAK,GAAK,SAAQ,SAAU,GACxB,IAAI,EAAO,EAAI,GACf,GAAI,EAAQ,GACR,EAAI,EAAW,EAAI,GAAW,GAAI,EAAI,GAAW,QAEhD,IAAa,SAAT,EAaL,MAAM,IAAI,GAAW,gBAAgB,wBAZrC,IAAI,EAAU,EAAI,EAAW,IAAQ,WAEjC,IADA,IAAI,EAAI,UAAU,OAAQ,EAAO,IAAI,MAAM,GACpC,KACH,EAAK,GAAK,UAAU,GACxB,EAAQ,YAAY,SAAQ,SAAU,GAClC,GAAO,WACH,EAAG,MAAM,KAAM,EAAA,eAW3C,SAAS,GAAqB,EAAW,GAErC,OADA,EAAO,GAAa,KAAK,CAAE,UAAA,IACpB,CAAA,CAkBX,SAAS,GAAgB,EAAK,GAC1B,QAAS,EAAI,QAAU,EAAI,WAAa,EAAI,MACvC,EAAoB,EAAI,WAAa,EAAI,aAAA,CAElD,SAAS,GAAU,EAAK,GACpB,EAAI,OAAS,GAAQ,EAAI,OAAQ,EAAA,CAErC,SAAS,GAAgB,EAAK,EAAS,GACnC,IAAI,EAAO,EAAI,aACf,EAAI,aAAe,EAAO,kBAAM,GAAQ,IAAQ,IAAA,EAAa,EAC7D,EAAI,UAAY,IAAkB,CAAA,CAKtC,SAAS,GAAgB,EAAK,GAC1B,GAAI,EAAI,UACJ,OAAO,EAAW,WACtB,IAAM,EAAQ,EAAW,kBAAkB,EAAI,OAC/C,IAAK,EACD,MAAM,IAAI,GAAW,OAAO,WAAa,EAAI,MAAQ,oBAAsB,EAAW,KAAO,mBACjG,OAAO,CAAA,CAEX,SAAS,GAAW,EAAK,EAAW,GAChC,IAAM,EAAQ,GAAgB,EAAK,EAAU,QAC7C,OAAO,EAAU,WAAW,CACxB,MAAA,EACA,QAAS,EAAI,SACb,QAAqB,SAAZ,EAAI,IACb,SAAU,EAAI,OACd,MAAO,CACH,MAAA,EACA,MAAO,EAAI,QAAA,CAIvB,SAAS,GAAK,EAAK,EAAI,EAAW,GAC9B,IAAM,EAAS,EAAI,aAAe,GAAQ,EAAI,OAAQ,EAAI,gBAAkB,EAAI,OAChF,GAAK,EAAI,GAGJ,CACD,IAAM,EAAM,CAAC,EACP,EAAQ,SAAC,EAAM,EAAQ,GACzB,IAAK,GAAU,EAAO,EAAQ,GAAS,SAAA,GAAA,OAAU,EAAO,KAAK,EAAA,IAAS,SAAA,GAAA,OAAO,EAAO,KAAK,EAAA,IAAO,CAC5F,IAAI,EAAa,EAAO,WACpB,EAAM,GAAK,EACH,yBAAR,IACA,EAAM,GAAK,IAAI,WAAW,IACzB,EAAO,EAAK,KACb,EAAI,IAAA,EACJ,EAAG,EAAM,EAAQ,GAAA,GAI7B,OAAO,QAAQ,IAAI,CACf,EAAI,GAAG,SAAS,EAAO,GACvB,GAAQ,GAAW,EAAK,EAAW,GAAY,EAAI,UAAW,GAAQ,EAAI,UAAY,EAAI,cAAA,CAlB9F,OAAO,GAAQ,GAAW,EAAK,EAAW,GAAY,GAAQ,EAAI,UAAW,GAAS,GAAK,EAAI,UAAY,EAAI,YAAA,CAsBvH,SAAS,GAAQ,EAAe,EAAQ,EAAI,GACxC,IACI,EAAY,GADD,EAAc,SAAC,EAAG,EAAG,GAAA,OAAM,EAAG,EAAY,GAAI,EAAG,EAAA,EAAK,GAErE,OAAO,EAAc,MAAK,SAAA,GACtB,GAAI,EACA,OAAO,EAAO,OAAM,WAChB,IAAI,EAAI,kBAAM,EAAO,UAAA,EAChB,IAAU,EAAO,GAAQ,SAAA,GAAA,OAAY,EAAI,CAAA,IAAU,SAAA,GAAS,EAAO,KAAK,GAAM,EAAI,EAAA,IAAQ,SAAA,GAAO,EAAO,KAAK,GAAI,EAAI,EAAA,KACtH,EAAU,EAAO,MAAO,GAAQ,SAAA,GAAA,OAAY,EAAI,CAAA,IACpD,GAAA,OAMhB,IAAM,GAAA,oBAAA,IAAA,EAAA,KAAA,EAAA,CAsXqB,OAtXrB,EAAA,EAAA,EAAA,IAAA,QAAA,MACF,SAAM,EAAI,GACN,IAAI,EAAM,KAAK,KACf,OAAO,EAAI,MACP,EAAI,MAAM,OAAO,KAAM,GAAU,KAAK,KAAM,EAAI,QAChD,EAAI,MAAM,OAAO,WAAY,GAAI,KAAK,EAAA,GAE9C,CAAA,IAAA,SAAA,MAAA,SAAO,GACH,IAAI,EAAM,KAAK,KACf,OAAO,EAAI,MACP,EAAI,MAAM,OAAO,KAAM,GAAU,KAAK,KAAM,EAAI,QAChD,EAAI,MAAM,OAAO,YAAa,EAAI,YAE1C,CAAA,IAAA,gBAAA,MAAA,SAAc,GACV,IAAI,EAAM,KAAK,KACf,EAAI,UAAY,GAAQ,EAAI,UAAW,EAAA,GAE3C,CAAA,IAAA,WAAA,MAAA,SAAS,EAAI,GACT,OAAO,GAAK,KAAK,KAAM,EAAI,EAAW,KAAK,KAAK,MAAM,KAAA,GAE1D,CAAA,IAAA,QAAA,MAAA,SAAM,GACF,IAAI,EAAK,OAAO,OAAO,KAAK,YAAY,WAAY,EAAM,OAAO,OAAO,KAAK,MAI7E,OAHI,GACA,EAAO,EAAK,GAChB,EAAG,KAAO,EACH,CAAA,GAEX,CAAA,IAAA,MAAA,MAAA,WAEI,OADA,KAAK,KAAK,YAAc,KACjB,IAAA,GAEX,CAAA,IAAA,OAAA,MAAA,SAAK,GACD,IAAI,EAAM,KAAK,KACf,OAAO,KAAK,OAAM,SAAA,GAAA,OAAS,GAAK,EAAK,EAAI,EAAO,EAAI,MAAM,KAAA,MAE9D,CAAA,IAAA,QAAA,MAAA,SAAM,GAAA,IAAA,EAAA,KACF,OAAO,KAAK,OAAM,SAAA,GACd,IAAM,EAAM,EAAK,KACX,EAAY,EAAI,MAAM,KAC5B,GAAI,GAAgB,GAAA,GAChB,OAAO,EAAU,MAAM,CACnB,MAAA,EACA,MAAO,CACH,MAAO,GAAgB,EAAK,EAAU,QACtC,MAAO,EAAI,SAEhB,MAAK,SAAA,GAAA,OAAS,KAAK,IAAI,EAAO,EAAI,MAAA,IAGrC,IAAI,EAAQ,EACZ,OAAO,GAAK,GAAK,mBAAU,GAAA,CAAc,GAAU,EAAO,GACrD,MAAK,kBAAM,CAAA,OAErB,KAAK,EAAA,GAEZ,CAAA,IAAA,SAAA,MAAA,SAAO,EAAS,GACZ,IAAM,EAAQ,EAAQ,MAAM,KAAK,UAAW,EAAW,EAAM,GAAI,EAAY,EAAM,OAAS,EAC5F,SAAS,EAAO,EAAK,GACjB,OAAI,EACO,EAAO,EAAI,EAAM,IAAK,EAAI,GAC9B,EAAI,EAAA,CAEf,IAAI,EAA0B,SAAlB,KAAK,KAAK,IAAiB,GAAK,EAC5C,SAAS,EAAO,EAAG,GACf,IAAI,EAAO,EAAO,EAAG,GAAY,EAAO,EAAO,EAAG,GAClD,OAAO,EAAO,GAAQ,EAAQ,EAAO,EAAO,EAAQ,EAExD,OAAO,KAAK,SAAQ,SAAU,GAC1B,OAAO,EAAE,KAAK,EAAA,IACf,KAAK,EAAA,GAEZ,CAAA,IAAA,UAAA,MAAA,SAAQ,GAAA,IAAA,EAAA,KACJ,OAAO,KAAK,OAAM,SAAA,GACd,IAAI,EAAM,EAAK,KACf,GAAgB,SAAZ,EAAI,KAAkB,GAAgB,GAAA,IAAc,EAAI,MAAQ,EAAG,CACnE,IAAQ,EAAgB,EAAlB,YACA,EAAQ,GAAgB,EAAK,EAAI,MAAM,KAAK,QAClD,OAAO,EAAI,MAAM,KAAK,MAAM,CACxB,MAAA,EACA,MAAO,EAAI,MACX,QAAA,EACA,MAAO,CACH,MAAA,EACA,MAAO,EAAI,SAEhB,MAAK,SAAA,GAAA,IAAG,EAAA,EAAA,OAAA,OAAa,EAAc,EAAO,IAAI,GAAe,CAAA,IAGhE,IAAM,EAAI,GACV,OAAO,GAAK,GAAK,SAAA,GAAA,OAAQ,EAAE,KAAK,EAAA,GAAO,EAAO,EAAI,MAAM,MAAM,MAAK,kBAAM,CAAA,MAE9E,EAAA,GAEP,CAAA,IAAA,SAAA,MAAA,SAAO,GACH,IAAI,EAAM,KAAK,KACf,OAAI,GAAU,IAEd,EAAI,QAAU,EACV,GAAgB,GAChB,GAAgB,GAAK,WACjB,IAAI,EAAa,EACjB,OAAO,SAAC,EAAQ,GAAA,OACO,IAAf,IAEe,IAAf,KACE,GAAA,IAGN,GAAQ,WACJ,EAAO,QAAQ,GACf,EAAa,SAEV,KAKf,GAAgB,GAAK,WACjB,IAAI,EAAa,EACjB,OAAO,mBAAS,EAAa,OAvB1B,IAAA,GA4Bf,CAAA,IAAA,QAAA,MAAA,SAAM,GAUF,OATA,KAAK,KAAK,MAAQ,KAAK,IAAI,KAAK,KAAK,MAAO,GAC5C,GAAgB,KAAK,MAAM,WACvB,IAAI,EAAW,EACf,OAAO,SAAU,EAAQ,EAAS,GAG9B,QAFM,GAAY,GACd,EAAQ,GACL,GAAY,SAGpB,IAAA,GAEX,CAAA,IAAA,QAAA,MAAA,SAAM,EAAgB,GAUlB,OATA,GAAU,KAAK,MAAM,SAAU,EAAQ,EAAS,GAC5C,OAAI,EAAe,EAAO,SACtB,EAAQ,GACD,EAAA,IAMR,IAAA,GAEX,CAAA,IAAA,QAAA,MAAA,SAAM,GACF,OAAO,KAAK,MAAM,GAAG,SAAQ,SAAU,GAAK,OAAO,EAAE,MAAO,KAAK,EAAA,GAErE,CAAA,IAAA,OAAA,MAAA,SAAK,GACD,OAAO,KAAK,UAAU,MAAM,EAAA,GAEhC,CAAA,IAAA,SAAA,MAAA,SAAO,GA1NX,IAAwB,EAAK,EA+NrB,OAJA,GAAU,KAAK,MAAM,SAAU,GAC3B,OAAO,EAAe,EAAO,MAAA,IA5NjB,EA8ND,KAAK,KA9NC,EA8NK,EA7N9B,EAAI,QAAU,GAAQ,EAAI,QAAS,GA8NxB,IAAA,GAEX,CAAA,IAAA,MAAA,MAAA,SAAI,GACA,OAAO,KAAK,OAAO,EAAA,GAEvB,CAAA,IAAA,KAAA,MAAA,SAAG,GACC,OAAO,IAAI,KAAK,GAAG,YAAY,KAAK,KAAK,MAAO,EAAW,KAAA,GAE/D,CAAA,IAAA,UAAA,MAAA,WAII,OAHA,KAAK,KAAK,IAAyB,SAAlB,KAAK,KAAK,IAAiB,OAAS,OACjD,KAAK,oBACL,KAAK,mBAAmB,KAAK,KAAK,KAC/B,IAAA,GAEX,CAAA,IAAA,OAAA,MAAA,WACI,OAAO,KAAK,SAAA,GAEhB,CAAA,IAAA,UAAA,MAAA,SAAQ,GACJ,IAAI,EAAM,KAAK,KAEf,OADA,EAAI,UAAY,EAAI,QACb,KAAK,MAAK,SAAU,EAAK,GAAU,EAAG,EAAO,IAAK,EAAA,MAE7D,CAAA,IAAA,gBAAA,MAAA,SAAc,GAEV,OADA,KAAK,KAAK,OAAS,SACZ,KAAK,QAAQ,EAAA,GAExB,CAAA,IAAA,iBAAA,MAAA,SAAe,GACX,IAAI,EAAM,KAAK,KAEf,OADA,EAAI,UAAY,EAAI,QACb,KAAK,MAAK,SAAU,EAAK,GAAU,EAAG,EAAO,WAAY,EAAA,MAEpE,CAAA,IAAA,OAAA,MAAA,SAAK,GACD,IAAI,EAAM,KAAK,KACf,EAAI,UAAY,EAAI,QACpB,IAAI,EAAI,GACR,OAAO,KAAK,MAAK,SAAU,EAAM,GAC7B,EAAE,KAAK,EAAO,IAAA,IACf,MAAK,WACJ,OAAO,CAAA,IACR,KAAK,EAAA,GAEZ,CAAA,IAAA,cAAA,MAAA,SAAY,GACR,IAAI,EAAM,KAAK,KACf,GAAgB,SAAZ,EAAI,KAAkB,GAAgB,GAAA,IAAc,EAAI,MAAQ,EAChE,OAAO,KAAK,OAAM,SAAA,GACd,IAAI,EAAQ,GAAgB,EAAK,EAAI,MAAM,KAAK,QAChD,OAAO,EAAI,MAAM,KAAK,MAAM,CACxB,MAAA,EACA,QAAA,EACA,MAAO,EAAI,MACX,MAAO,CACH,MAAA,EACA,MAAO,EAAI,QAAA,IAGpB,MAAK,SAAA,GAAG,OAAA,EAAA,MAAa,IAAQ,KAAK,GAEzC,EAAI,UAAY,EAAI,QACpB,IAAI,EAAI,GACR,OAAO,KAAK,MAAK,SAAU,EAAM,GAC7B,EAAE,KAAK,EAAO,WAAA,IACf,MAAK,WACJ,OAAO,CAAA,IACR,KAAK,EAAA,GAEZ,CAAA,IAAA,aAAA,MAAA,SAAW,GAEP,OADA,KAAK,KAAK,OAAS,SACZ,KAAK,KAAK,EAAA,GAErB,CAAA,IAAA,WAAA,MAAA,SAAS,GACL,OAAO,KAAK,MAAM,GAAG,MAAK,SAAU,GAAK,OAAO,EAAE,MAAO,KAAK,EAAA,GAElE,CAAA,IAAA,UAAA,MAAA,SAAQ,GACJ,OAAO,KAAK,UAAU,SAAS,EAAA,GAEnC,CAAA,IAAA,WAAA,MAAA,WACI,IAAI,EAAM,KAAK,KAAM,EAAM,EAAI,OAAS,EAAI,MAAM,OAAO,UAAU,EAAI,OACvE,IAAK,IAAQ,EAAI,MACb,OAAO,KACX,IAAI,EAAM,CAAC,EAOX,OANA,GAAU,KAAK,MAAM,SAAU,GAC3B,IAAI,EAAS,EAAO,WAAW,WAC3B,EAAQ,EAAO,EAAK,GAExB,OADA,EAAI,IAAA,GACI,CAAA,IAEL,IAAA,GAEX,CAAA,IAAA,SAAA,MAAA,SAAO,GAAA,IAAA,EAAA,KACC,EAAM,KAAK,KACf,OAAO,KAAK,QAAO,SAAA,GACf,IAAI,EACJ,GAAuB,mBAAZ,EACP,EAAW,MAEV,CACD,IAAI,EAAW,EAAK,GAChB,EAAU,EAAS,OACvB,EAAW,SAAU,GAEjB,IADA,IAAI,GAAA,EACK,EAAI,EAAG,EAAI,IAAW,EAAG,CAC9B,IAAI,EAAU,EAAS,GAAI,EAAM,EAAQ,GACrC,EAAa,EAAM,KAAa,IAChC,EAAa,EAAM,EAAS,GAC5B,GAAA,EAAmB,CAG3B,OAAO,CAAA,EAGT,IAAA,EAAY,EAAI,MAAM,KAAA,EACK,EAAU,OAAO,WAA1C,EAAA,EAAF,SAAY,EAAA,EAAF,WACV,EAAQ,EAAK,GAAG,SAAS,iBAAmB,IAC5C,EAAgB,GAClB,EAAe,EACb,EAAa,GACb,EAAoB,SAAC,EAAe,GACtC,IAAQ,EAA0B,EAA5B,SAAY,EAAgB,EAAlB,YAChB,GAAgB,EAAgB,EAChC,IAAqB,EAArB,EAAA,EAAgB,EAAK,IAAA,IAArB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MACI,KADK,EAAA,EAAA,MACL,EAAc,KAAK,EAAS,GAAA,QAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,GAGpC,OAAO,EAAK,QAAQ,cAAc,MAAK,SAAA,GAkEnC,OAjEmB,SAAb,EAAa,GACf,IAAM,EAAQ,KAAK,IAAI,EAAO,EAAK,OAAS,GAC5C,OAAO,EAAU,QAAQ,CACrB,MAAA,EACA,KAAM,EAAK,MAAM,EAAQ,EAAS,GAClC,MAAO,cACR,MAAK,SAAA,GAKJ,IAJA,IAAM,EAAY,GACZ,EAAY,GACZ,EAAU,EAAW,GAAK,KAC1B,EAAa,GACV,EAAI,EAAG,EAAI,IAAS,EAAG,CAC5B,IAAM,EAAY,EAAO,GACnB,EAAM,CACR,MAAO,EAAU,GACjB,QAAS,EAAK,EAAS,KAAA,IAEvB,EAAS,KAAK,EAAK,EAAI,MAAO,KACb,MAAb,EAAI,MACJ,EAAW,KAAK,EAAK,EAAS,IAExB,GAAkE,IAAtD,GAAI,EAAW,GAAY,EAAW,EAAI,SAK5D,EAAU,KAAK,EAAI,OACf,GACA,EAAQ,KAAK,EAAK,EAAS,MAN/B,EAAW,KAAK,EAAK,EAAS,IAC9B,EAAU,KAAK,EAAI,QAAA,CAS/B,IAAM,EAAW,GAAgB,IAC7B,EAAI,QAAU,MACM,mBAAZ,GAA0B,IAAY,KAAmB,CACjE,MAAO,EAAI,MACX,MAAO,EAAI,OAEf,OAAO,QAAQ,QAAQ,EAAU,OAAS,GACtC,EAAU,OAAO,CAAE,MAAA,EAAO,KAAM,MAAO,OAAQ,IAC1C,MAAK,SAAA,GACN,IAAK,IAAI,KAAO,EAAI,SAChB,EAAW,OAAO,SAAS,GAAM,GAErC,EAAkB,EAAU,OAAQ,EAAA,KACpC,MAAK,kBAAO,EAAU,OAAS,GAAM,GAA+B,iBAAZ,IAC5D,EAAU,OAAO,CACb,MAAA,EACA,KAAM,MACN,KAAM,EACN,OAAQ,EACR,SAAA,EACA,WAA+B,mBAAZ,GACZ,IACR,MAAK,SAAA,GAAA,OAAO,EAAkB,EAAU,OAAQ,EAAA,OAAO,MAAK,kBAAO,EAAW,OAAS,GAAM,GAAY,IAAY,KACxH,EAAU,OAAO,CACb,MAAA,EACA,KAAM,SACN,KAAM,EACN,SAAA,IACD,MAAK,SAAA,GAAA,OAAO,EAAkB,EAAW,OAAQ,EAAA,OAAO,MAAK,kBACzD,EAAK,OAAS,EAAS,GAAS,EAAU,EAAS,EAAA,OAI/D,CAAU,GAAG,MAAK,WACrB,GAAI,EAAc,OAAS,EACvB,MAAM,IAAI,GAAY,sCAAuC,EAAe,EAAc,GAC9F,OAAO,EAAK,MAAA,YAK5B,CAAA,IAAA,SAAA,MAAA,WACI,IAAI,EAAM,KAAK,KAAM,EAAQ,EAAI,MACjC,OAAI,GAAgB,KACd,EAAI,YAAc,IAA8C,IAAf,EAAM,MAElD,KAAK,QAAO,SAAA,GACf,IAAQ,EAAe,EAAI,MAAM,KAAK,OAAhC,WACA,EAAY,EAClB,OAAO,EAAI,MAAM,KAAK,MAAM,CAAE,MAAA,EAAO,MAAO,CAAE,MAAO,EAAY,MAAO,KAAe,MAAK,SAAA,GAAA,OACjF,EAAI,MAAM,KAAK,OAAO,CAAE,MAAA,EAAO,KAAM,cAAe,MAAO,IAC7D,MAAK,SAAA,GAAkC,IAA/B,EAAA,EAAA,SAA+B,GAArB,EAAA,WAAY,EAAA,QAAS,EAAA,aACxC,GAAI,EACA,MAAM,IAAI,GAAY,+BAAgC,OAAO,KAAK,GAAU,KAAI,SAAA,GAAA,OAAO,EAAS,EAAA,IAAO,EAAQ,GACnH,OAAO,EAAQ,CAAA,UAKxB,KAAK,OAAO,GAAA,KAAA,CAAA,CAtXrB,GAyXA,GAAiB,SAAC,EAAO,GAAA,OAAQ,EAAI,MAAQ,MAsCnD,SAAS,GAAc,EAAG,GACtB,OAAO,EAAI,GAAK,EAAI,IAAM,EAAI,EAAI,EAEtC,SAAS,GAAqB,EAAG,GAC7B,OAAO,EAAI,GAAK,EAAI,IAAM,EAAI,EAAI,EAGtC,SAAS,GAAK,EAAyB,EAAK,GACxC,IAAI,EAAa,aAAmC,GAChD,IAAI,EAAwB,WAAW,GACvC,EAEJ,OADA,EAAW,KAAK,MAAQ,EAAI,IAAI,EAAE,GAAO,IAAI,UAAU,GAChD,CAAA,CAEX,SAAS,GAAgB,GACrB,OAAO,IAAI,EAAY,WAAW,GAAa,kBAAM,GAAW,OAAK,MAAM,GAY/E,SAAS,GAAW,EAAK,EAAU,EAAa,EAAa,EAAK,GAG9D,IAFA,IAAI,EAAS,KAAK,IAAI,EAAI,OAAQ,EAAY,QAC1C,GAAO,EACF,EAAI,EAAG,EAAI,IAAU,EAAG,CAC7B,IAAI,EAAa,EAAS,GAC1B,GAAI,IAAe,EAAY,GAC3B,OAAI,EAAI,EAAI,GAAI,EAAY,IAAM,EACvB,EAAI,OAAO,EAAG,GAAK,EAAY,GAAK,EAAY,OAAO,EAAI,GAClE,EAAI,EAAI,GAAI,EAAY,IAAM,EACvB,EAAI,OAAO,EAAG,GAAK,EAAY,GAAK,EAAY,OAAO,EAAI,GAClE,GAAO,EACA,EAAI,OAAO,EAAG,GAAO,EAAS,GAAO,EAAY,OAAO,EAAM,GAClE,KAEP,EAAI,EAAI,GAAI,GAAc,IAC1B,EAAM,EAAA,CAEd,OAAI,EAAS,EAAY,QAAkB,SAAR,EACxB,EAAM,EAAY,OAAO,EAAI,QACpC,EAAS,EAAI,QAAkB,SAAR,EAChB,EAAI,OAAO,EAAG,EAAY,QAC7B,EAAM,EAAI,KAAO,EAAI,OAAO,EAAG,GAAO,EAAY,GAAO,EAAY,OAAO,EAAM,GAE9F,SAAS,GAAuB,EAAa,EAAO,EAAS,GACzD,IAAI,EAAO,EAAO,EAAS,EAAc,EAAc,EAAW,EAAe,EAAa,EAAQ,OACtG,IAAK,EAAQ,OAAM,SAAA,GAAA,MAAkB,iBAAN,CAAA,IAC3B,OAAO,GAAK,EAxjCI,oBA0jCpB,SAAS,EAAc,GACnB,EAvCR,SAAsB,GAClB,MAAe,SAAR,EACF,SAAA,GAAA,OAAM,EAAE,aAAA,EACR,SAAA,GAAA,OAAM,EAAE,aAAA,EAHjB,CAuC6B,GACrB,EAnCR,SAAsB,GAClB,MAAe,SAAR,EACF,SAAA,GAAA,OAAM,EAAE,aAAA,EACR,SAAA,GAAA,OAAM,EAAE,aAAA,EAHjB,CAmC6B,GACrB,EAAmB,SAAR,EAAiB,GAAgB,GAC5C,IAAI,EAAe,EAAQ,KAAI,SAAU,GACrC,MAAO,CAAE,MAAO,EAAM,GAAS,MAAO,EAAM,GAAA,IAC7C,MAAK,SAAU,EAAG,GACjB,OAAO,EAAQ,EAAE,MAAO,EAAE,MAAA,IAE9B,EAAe,EAAa,KAAI,SAAU,GAAM,OAAO,EAAG,KAAA,IAC1D,EAAe,EAAa,KAAI,SAAU,GAAM,OAAO,EAAG,KAAA,IAC1D,EAAY,EACZ,EAAyB,SAAR,EAAiB,GAAK,CAAA,CAE3C,EAAc,QACd,IAAI,EAAI,IAAI,EAAY,WAAW,GAAa,kBAAM,GAAY,EAAa,GAAI,EAAa,EAAa,GAAK,EAAA,IAClH,EAAE,mBAAqB,SAAU,GAC7B,EAAc,EAAA,EAElB,IAAI,EAAsB,EA4B1B,OA3BA,EAAE,eAAc,SAAU,EAAQ,EAAS,GACvC,IAAI,EAAM,EAAO,IACjB,GAAmB,iBAAR,EACP,OAAO,EACX,IAAI,EAAW,EAAM,GACrB,GAAI,EAAM,EAAU,EAAc,GAC9B,OAAO,EAIP,IADA,IAAI,EAAuB,KAClB,EAAI,EAAqB,EAAI,IAAc,EAAG,CACnD,IAAI,EAAS,GAAW,EAAK,EAAU,EAAa,GAAI,EAAa,GAAI,EAAS,GACnE,OAAX,GAA4C,OAAzB,EACnB,EAAsB,EAAI,GACI,OAAzB,GAAiC,EAAQ,EAAsB,GAAU,KAC9E,EAAuB,EAAA,CAS/B,OALI,EADyB,OAAzB,EACQ,WAAc,EAAO,SAAS,EAAuB,EAAA,EAGrD,IAAA,CAEL,IAGR,CAAA,CAEX,SAAS,GAAY,EAAO,EAAO,EAAW,GAC1C,MAAO,CACH,KAAM,EACN,MAAA,EACA,MAAA,EACA,UAAA,EACA,UAAA,EAAA,CAGR,SAAS,GAAW,GAChB,MAAO,CACH,KAAM,EACN,MAAO,EACP,MAAO,EAAA,CAIf,IAAM,GAAA,oBAAA,IAAA,EAAA,KAAA,EAAA,CAoNwB,OApNxB,EAAA,EAAA,EAAA,IAAA,aAAA,IACE,WACA,OAAO,KAAK,KAAK,MAAM,GAAG,UAAA,GAE9B,CAAA,IAAA,UAAA,MAAA,SAAQ,EAAO,EAAO,EAAc,GAChC,GAAA,IAAe,EACf,GAAA,IAAe,EACf,IACI,OAAK,KAAK,KAAK,EAAO,GAAS,GACE,IAA5B,KAAK,KAAK,EAAO,KAAiB,GAAgB,MAAmB,IAAgB,GAC/E,GAAgB,MACpB,IAAI,KAAK,WAAW,MAAM,kBAAM,GAAY,EAAO,GAAQ,GAAe,EAAA,IAErF,MAAO,GACH,OAAO,GAAK,KAAM,GAAA,IAG1B,CAAA,IAAA,SAAA,MAAA,SAAO,GACH,OAAa,MAAT,EACO,GAAK,KAAM,IACf,IAAI,KAAK,WAAW,MAAM,kBAAM,GAAW,EAAA,MAEtD,CAAA,IAAA,QAAA,MAAA,SAAM,GACF,OAAa,MAAT,EACO,GAAK,KAAM,IACf,IAAI,KAAK,WAAW,MAAM,kBAAM,GAAY,OAAA,GAAO,EAAW,MAEzE,CAAA,IAAA,eAAA,MAAA,SAAa,GACT,OAAa,MAAT,EACO,GAAK,KAAM,IACf,IAAI,KAAK,WAAW,MAAM,kBAAM,GAAY,OAAA,GAAO,EAAW,MAEzE,CAAA,IAAA,QAAA,MAAA,SAAM,GACF,OAAa,MAAT,EACO,GAAK,KAAM,IACf,IAAI,KAAK,WAAW,MAAM,kBAAM,QAAA,EAAuB,GAAA,GAAO,EAAO,MAEhF,CAAA,IAAA,eAAA,MAAA,SAAa,GACT,OAAa,MAAT,EACO,GAAK,KAAM,IACf,IAAI,KAAK,WAAW,MAAM,kBAAM,QAAA,EAAuB,EAAA,MAElE,CAAA,IAAA,aAAA,MAAA,SAAW,GACP,MAAmB,iBAAR,EACA,GAAK,KAxqCA,oBAyqCT,KAAK,QAAQ,EAAK,EAAM,IAAA,GAAW,EAAM,GAEpD,CAAA,IAAA,uBAAA,MAAA,SAAqB,GACjB,MAAY,KAAR,EACO,KAAK,WAAW,GACpB,GAAuB,MAAM,SAAC,EAAG,GAAA,OAA0B,IAApB,EAAE,QAAQ,EAAE,MAAW,CAAC,GAAM,GAAA,GAEhF,CAAA,IAAA,mBAAA,MAAA,SAAiB,GACb,OAAO,GAAuB,MAAM,SAAC,EAAG,GAAA,OAAM,IAAM,EAAE,KAAI,CAAC,GAAM,MAErE,CAAA,IAAA,kBAAA,MAAA,WACI,IAAI,EAAM,GAAW,MAAM,GAAe,WAC1C,OAAmB,IAAf,EAAI,OACG,GAAgB,MACpB,GAAuB,MAAM,SAAC,EAAG,GAAA,OAAwB,IAAlB,EAAE,QAAQ,EAAA,GAAW,EAAK,MAE5E,CAAA,IAAA,4BAAA,MAAA,WACI,IAAI,EAAM,GAAW,MAAM,GAAe,WAC1C,OAAmB,IAAf,EAAI,OACG,GAAgB,MACpB,GAAuB,MAAM,SAAC,EAAG,GAAA,OAAM,EAAE,MAAK,SAAA,GAAA,OAAsB,IAAjB,EAAE,QAAQ,EAAA,MAAW,EAAK,GAAA,GAExF,CAAA,IAAA,QAAA,MAAA,eAAA,EAAA,KACU,EAAM,GAAW,MAAM,GAAe,WACxC,EAAU,KAAK,KACnB,IACI,EAAI,KAAK,EAAA,CAEb,MAAO,GACH,OAAO,GAAK,KAAM,GAAA,CAEtB,GAAmB,IAAf,EAAI,OACJ,OAAO,GAAgB,MAC3B,IAAM,EAAI,IAAI,KAAK,WAAW,MAAM,kBAAM,GAAY,EAAI,GAAI,EAAI,EAAI,OAAS,OAC/E,EAAE,mBAAqB,SAAA,GACnB,EAAyB,SAAd,EACP,EAAK,WACL,EAAK,YACT,EAAI,KAAK,EAAA,EAEb,IAAI,EAAI,EAkBR,OAjBA,EAAE,eAAc,SAAC,EAAQ,EAAS,GAE9B,IADA,IAAM,EAAM,EAAO,IACZ,EAAQ,EAAK,EAAI,IAAM,GAE1B,KADE,IACQ,EAAI,OAEV,OADA,EAAQ,IAAA,EAIhB,OAA6B,IAAzB,EAAQ,EAAK,EAAI,MAIjB,GAAQ,WAAQ,EAAO,SAAS,EAAI,GAAA,OAC7B,IAGR,CAAA,GAEX,CAAA,IAAA,WAAA,MAAA,SAAS,GACL,OAAO,KAAK,WAAW,CAAC,MAAS,GAAQ,CAAC,EAAO,KAAK,GAAG,UAAW,CAAE,eAAA,EAAsB,eAAA,GAAe,GAE/G,CAAA,IAAA,SAAA,MAAA,WACI,IAAM,EAAM,GAAW,MAAM,GAAe,WAC5C,GAAmB,IAAf,EAAI,OACJ,OAAO,IAAI,KAAK,WAAW,MAC/B,IACI,EAAI,KAAK,KAAK,WAAA,CAElB,MAAO,GACH,OAAO,GAAK,KAAM,GAAA,CAEtB,IAAM,EAAS,EAAI,QAAO,SAAC,EAAK,GAAA,OAAQ,EACpC,EAAI,OAAO,CAAC,CAAC,EAAI,EAAI,OAAS,GAAG,GAAI,KACrC,CAAC,MAAS,GAAA,GAAO,MAErB,OADA,EAAO,KAAK,CAAC,EAAI,EAAI,OAAS,GAAI,KAAK,GAAG,UACnC,KAAK,WAAW,EAAQ,CAAE,eAAA,EAAsB,eAAA,GAAe,GAE1E,CAAA,IAAA,aAAA,MAAA,SAAW,EAAQ,GAAA,IAAA,EAAA,KACT,EAAM,KAAK,KAAM,EAAY,KAAK,WAAY,EAAa,KAAK,YAAa,EAAM,KAAK,KAAM,EAAM,KAAK,KAC/G,GAAsB,IAAlB,EAAO,OACP,OAAO,GAAgB,MAC3B,IAAK,EAAO,OAAM,SAAA,GAAA,gBAAS,EAAM,aAC7B,EAAM,IACN,EAAU,EAAM,GAAI,EAAM,KAAO,KACjC,OAAO,GAAK,KAAM,6HAA8H,GAAW,iBAE/J,IAkBI,EAlBE,GAAiB,IAAA,IAAW,EAAQ,cACpC,EAAgB,IAAA,IAAW,EAAQ,cAerC,EAAgB,EACpB,SAAS,EAAY,EAAG,GAAK,OAAO,EAAc,EAAE,GAAI,EAAE,IAE1D,IACI,EAAM,EAAO,QAlBjB,SAAkB,EAAQ,GAEtB,IADA,IAAI,EAAI,EAAG,EAAI,EAAO,OACf,EAAI,IAAK,EAAG,CACf,IAAM,EAAQ,EAAO,GACrB,GAAI,EAAI,EAAS,GAAI,EAAM,IAAM,GAAK,EAAI,EAAS,GAAI,EAAM,IAAM,EAAG,CAClE,EAAM,GAAK,EAAI,EAAM,GAAI,EAAS,IAClC,EAAM,GAAK,EAAI,EAAM,GAAI,EAAS,IAClC,OAKR,OAFI,IAAM,GACN,EAAO,KAAK,GACT,CAAA,GAMuB,IAC9B,EAAI,KAAK,EAAA,CAEb,MAAO,GACH,OAAO,GAAK,KAAM,GAAA,CAEtB,IAAI,EAAW,EACT,EAA0B,EAC5B,SAAA,GAAA,OAAO,EAAU,EAAK,EAAI,GAAU,IAAM,GAC1C,SAAA,GAAA,OAAO,EAAU,EAAK,EAAI,GAAU,KAAO,GACzC,EAA0B,EAC5B,SAAA,GAAA,OAAO,EAAW,EAAK,EAAI,GAAU,IAAM,GAC3C,SAAA,GAAA,OAAO,EAAW,EAAK,EAAI,GAAU,KAAO,GAI5C,EAAW,EACT,EAAI,IAAI,KAAK,WAAW,MAAM,kBAAM,GAAY,EAAI,GAAG,GAAI,EAAI,EAAI,OAAS,GAAG,IAAK,GAAgB,EAAA,IAqC1G,OApCA,EAAE,mBAAqB,SAAA,GACD,SAAd,GACA,EAAW,EACX,EAAgB,IAGhB,EAAW,EACX,EAAgB,GAEpB,EAAI,KAAK,EAAA,EAEb,EAAE,eAAc,SAAC,EAAQ,EAAS,GAE9B,IADA,IAAI,EAAM,EAAO,IACV,EAAS,IAEZ,KADE,IACe,EAAI,OAEjB,OADA,EAAQ,IAAA,EAIhB,QAzBJ,SAA+B,GAC3B,OAAQ,EAAwB,KAAS,EAAwB,EAAA,CADrE,CAyB8B,KAGoB,IAArC,EAAK,KAAK,EAAK,EAAI,GAAU,KAAkD,IAArC,EAAK,KAAK,EAAK,EAAI,GAAU,KAI5E,GAAQ,WACA,IAAkB,EAClB,EAAO,SAAS,EAAI,GAAU,IAE9B,EAAO,SAAS,EAAI,GAAU,UAP/B,IAYR,CAAA,GAEX,CAAA,IAAA,kBAAA,MAAA,WACI,IAAM,EAAM,GAAW,MAAM,GAAe,WAC5C,OAAK,EAAI,OAAM,SAAA,GAAA,MAAkB,iBAAN,CAAA,IAGR,IAAf,EAAI,OACG,GAAgB,MACpB,KAAK,WAAW,EAAI,KAAK,SAAA,GAAA,MAAQ,CAAC,EAAK,EAAM,GAAA,KAJzC,GAAK,KAAM,iDAAA,CAAA,CApNxB,GA8ON,SAAS,GAAmB,GACxB,OAAO,IAAK,SAAU,GAGlB,OAFA,GAAe,GACf,EAAO,EAAM,OAAO,QAAA,CACb,IAGf,SAAS,GAAe,GAChB,EAAM,iBACN,EAAM,kBACN,EAAM,gBACN,EAAM,gBAAA,CAGd,IAEM,GAAe,GAAO,KAFa,kBAInC,GAAA,oBAAA,IAAA,EAAA,KAAA,EAAA,CAwJS,OAxJT,EAAA,EAAA,EAAA,IAAA,QAAA,MACF,WAKI,OAJA,GAAQ,GAAI,UACV,KAAK,UACgB,IAAnB,KAAK,WAAoB,GAAI,SAC7B,GAAI,aAAe,MAChB,IAAA,GAEX,CAAA,IAAA,UAAA,MAAA,WAEI,GADA,GAAQ,GAAI,QACa,KAAnB,KAAK,UAGP,IAFK,GAAI,SACL,GAAI,aAAe,MAChB,KAAK,cAAc,OAAS,IAAM,KAAK,WAAW,CACrD,IAAI,EAAW,KAAK,cAAc,QAClC,IACI,GAAO,EAAS,GAAI,EAAS,IAEjC,MAAO,GAAA,EAGf,OAAO,IAAA,GAEX,CAAA,IAAA,UAAA,MAAA,WACI,OAAO,KAAK,WAAa,GAAI,eAAiB,IAAA,GAElD,CAAA,IAAA,SAAA,MAAA,SAAO,GAAA,IAAA,EAAA,KACH,IAAK,KAAK,KACN,OAAO,KACX,IAAM,EAAQ,KAAK,GAAG,MAChB,EAAc,KAAK,GAAG,OAAO,YAEnC,GADA,GAAQ,KAAK,WACR,IAAa,EACd,OAAQ,GAAe,EAAY,MAC/B,IAAK,sBACD,MAAM,IAAI,GAAW,eAAe,GACxC,IAAK,kBACD,MAAM,IAAI,GAAW,WAAW,EAAY,QAAS,GACzD,QACI,MAAM,IAAI,GAAW,WAAW,GAG5C,IAAK,KAAK,OACN,MAAM,IAAI,GAAW,oBAuBzB,OAtBA,EAAmC,OAA5B,KAAK,YAAY,SACxB,EAAW,KAAK,SAAW,IACtB,KAAK,GAAG,KACH,KAAK,GAAG,KAAK,YAAY,KAAK,WAAY,KAAK,KAAM,CAAE,WAAY,KAAK,8BACxE,EAAM,YAAY,KAAK,WAAY,KAAK,KAAM,CAAE,WAAY,KAAK,gCAClE,QAAU,IAAK,SAAA,GACpB,GAAe,GACf,EAAK,QAAQ,EAAS,MAAA,IAE1B,EAAS,QAAU,IAAK,SAAA,GACpB,GAAe,GACf,EAAK,QAAU,EAAK,QAAQ,IAAI,GAAW,MAAM,EAAS,QAC1D,EAAK,QAAA,EACL,EAAK,GAAG,SAAS,KAAK,EAAA,IAE1B,EAAS,WAAa,IAAK,WACvB,EAAK,QAAA,EACL,EAAK,WACD,iBAAkB,GAClB,GAAa,eAAe,KAAK,EAAuB,aAAA,IAGzD,IAAA,GAEX,CAAA,IAAA,WAAA,MAAA,SAAS,EAAM,EAAI,GAAA,IAAA,EAAA,KACf,GAAa,cAAT,GAAsC,cAAd,KAAK,KAC7B,OAAO,GAAU,IAAI,GAAW,SAAS,4BAC7C,IAAK,KAAK,OACN,OAAO,GAAU,IAAI,GAAW,qBACpC,GAAI,KAAK,UACL,OAAO,IAAI,IAAa,SAAC,EAAS,GAC9B,EAAK,cAAc,KAAK,CAAC,WACjB,EAAK,SAAS,EAAM,EAAI,GAAY,KAAK,EAAS,EAAA,EACnD,IAAA,IAGV,GAAI,EACL,OAAO,IAAS,WACZ,IAAI,EAAI,IAAI,IAAa,SAAC,EAAS,GAC/B,EAAK,QACL,IAAM,EAAK,EAAG,EAAS,EAAQ,GAC3B,GAAM,EAAG,MACT,EAAG,KAAK,EAAS,EAAA,IAIzB,OAFA,EAAE,SAAQ,kBAAM,EAAK,SAAA,IACrB,EAAE,MAAA,EACK,CAAA,IAIX,IAAI,EAAI,IAAI,IAAa,SAAC,EAAS,GAC/B,IAAI,EAAK,EAAG,EAAS,EAAQ,GACzB,GAAM,EAAG,MACT,EAAG,KAAK,EAAS,EAAA,IAGzB,OADA,EAAE,MAAA,EACK,CAAA,GAGf,CAAA,IAAA,QAAA,MAAA,WACI,OAAO,KAAK,OAAS,KAAK,OAAO,QAAU,IAAA,GAE/C,CAAA,IAAA,UAAA,MAAA,SAAQ,GACJ,IAAI,EAAO,KAAK,QACV,EAAU,GAAa,QAAQ,GACrC,GAAI,EAAK,YACL,EAAK,YAAc,EAAK,YAAY,MAAK,kBAAM,CAAA,QAE9C,CACD,EAAK,YAAc,EACnB,EAAK,cAAgB,GACrB,IAAI,EAAQ,EAAK,SAAS,YAAY,EAAK,WAAW,KACrD,SAAS,IAEN,MADE,EAAK,WACA,EAAK,cAAc,QACrB,EAAK,cAAc,OAAnB,GACD,EAAK,cACL,EAAM,KAAA,KAAe,UAAY,EAAA,CALxC,EAAD,CAQJ,IAAI,EAAqB,EAAK,YAC9B,OAAO,IAAI,IAAa,SAAC,EAAS,GAC9B,EAAQ,MAAK,SAAA,GAAA,OAAO,EAAK,cAAc,KAAK,GAAK,EAAQ,KAAK,KAAM,IAAA,IAAQ,SAAA,GAAA,OAAO,EAAK,cAAc,KAAK,GAAK,EAAO,KAAK,KAAM,IAAA,IAAQ,SAAQ,WAC1I,EAAK,cAAgB,IACrB,EAAK,YAAc,cAKnC,CAAA,IAAA,QAAA,MAAA,WACQ,KAAK,SACL,KAAK,QAAA,EACD,KAAK,UACL,KAAK,SAAS,QAClB,KAAK,QAAQ,IAAI,GAAW,OAAA,GAGpC,CAAA,IAAA,QAAA,MAAA,SAAM,GACF,IAAM,EAAkB,KAAK,kBAAoB,KAAK,gBAAkB,CAAC,GACzE,GAAI,EAAO,EAAgB,GACvB,OAAO,EAAe,GAC1B,IAAM,EAAc,KAAK,OAAO,GAChC,IAAK,EACD,MAAM,IAAI,GAAW,SAAS,SAAW,EAAY,4BAEzD,IAAM,EAAwB,IAAI,KAAK,GAAG,MAAM,EAAW,EAAa,MAGxE,OAFA,EAAsB,KAAO,KAAK,GAAG,KAAK,MAAM,GAChD,EAAe,GAAa,EACrB,CAAA,KAAA,CAAA,CAxJT,GAiMN,SAAS,GAAgB,EAAM,EAAS,EAAQ,EAAO,EAAM,EAAU,GACnE,MAAO,CACH,KAAA,EACA,QAAA,EACA,OAAA,EACA,MAAA,EACA,KAAA,EACA,SAAA,EACA,KAAM,IAAW,EAAY,IAAM,KAAO,EAAQ,IAAM,KAAO,EAAO,KAAO,IAAM,GAAgB,GAAA,CAG3G,SAAS,GAAgB,GACrB,MAA0B,iBAAZ,EACV,EACA,EAAW,IAAM,GAAG,KAAK,KAAK,EAAS,KAAO,IAAO,GAG7D,SAAS,GAAkB,EAAM,EAAS,GACtC,MAAO,CACH,KAAA,EACA,QAAA,EACA,QAAA,EACA,YAAa,KACb,WApsFe,EAosFU,EApsFH,EAosFY,SAAA,GAAA,MAAS,CAAC,EAAM,KAAM,EAAA,EAnsFrD,EAAM,QAAO,SAAC,EAAQ,EAAM,GAC/B,IAAI,EAAe,EAAU,GAG7B,OAFI,IACA,EAAO,EAAa,IAAM,EAAa,IACpC,CAAA,GACR,CAAC,KANR,IAAuB,EAAO,CAAA,CA2sF9B,IAAI,GAAa,SAAA,GACb,IAGI,OAFA,EAAY,KAAK,CAAC,KAClB,GAAY,iBAAM,CAAC,KACZ,CAAC,IAEZ,MAAO,GAEH,OADA,GAAY,kBAAM,EAAA,EACX,EAAA,GAIf,SAAS,GAAgB,GACrB,OAAe,MAAX,EACO,aAEiB,iBAAZ,EAOpB,SAAmC,GAE/B,OAAqB,IADP,EAAQ,MAAM,KAClB,OACC,SAAA,GAAA,OAAO,EAAI,EAAA,EAGX,SAAA,GAAA,OAAO,EAAa,EAAK,EAAA,EANxC,CANyC,GAG1B,SAAA,GAAA,OAAO,EAAa,EAAK,EAAA,EAaxC,SAAS,GAAS,GACd,MAAO,GAAG,MAAM,KAAK,EAAA,CAEzB,IAAI,GAAc,EAClB,SAAS,GAAgB,GACrB,OAAkB,MAAX,EACH,MACmB,iBAAZ,EACH,EAAA,IAAA,OACI,EAAQ,KAAK,UAE7B,SAAS,GAAa,EAAI,EAAa,GAqDnC,SAAS,EAAgB,GACrB,GAAmB,IAAf,EAAM,KACN,OAAO,KACX,GAAmB,IAAf,EAAM,KACN,MAAM,IAAI,MAAM,4CACpB,IAAQ,EAAuC,EAAzC,MAAS,EAAgC,EAAlC,MAAS,EAAyB,EAA3B,UAAa,EAAc,EAAhB,UAQ/B,YAAO,IAPU,OAAA,IACb,EACI,KACA,EAAY,WAAW,IAAS,QAAA,IACpC,EACI,EAAY,WAAW,IAAS,GAChC,EAAY,MAAM,EAAO,IAAS,IAAa,EAAA,CA2P3D,IAAA,EA3TA,SAAuB,EAAI,GACvB,IAAM,EAAS,GAAS,EAAG,kBAC3B,MAAO,CACH,OAAQ,CACJ,KAAM,EAAG,KACT,OAAQ,EAAO,KAAI,SAAA,GAAA,OAAS,EAAM,YAAY,EAAA,IAAQ,KAAI,SAAA,GACtD,IAAQ,EAA2B,EAA7B,QAAW,EAAkB,EAApB,cACT,EAAW,EAAQ,GACnB,EAAsB,MAAX,EACX,EAAiB,CAAC,EAClB,EAAS,CACX,KAAM,EAAM,KACZ,WAAY,CACR,KAAM,KACN,cAAA,EACA,SAAA,EACA,SAAA,EACA,QAAA,EACA,cAAA,EACA,QAAA,EACA,WAAY,GAAgB,IAEhC,QAAS,GAAS,EAAM,YAAY,KAAI,SAAA,GAAA,OAAa,EAAM,MAAM,EAAA,IAC5D,KAAI,SAAA,GACL,IAAQ,EAAsC,EAAxC,KAAQ,EAAgC,EAAlC,OAAU,EAAwB,EAA1B,WAAc,EAAY,EAAd,QAE1B,EAAS,CACX,KAAA,EACA,SAHa,EAAQ,GAIrB,QAAA,EACA,OAAA,EACA,WAAA,EACA,WAAY,GAAgB,IAGhC,OADA,EAAe,GAAgB,IAAY,EACpC,CAAA,IAEX,kBAAoB,SAAA,GAAA,OAAY,EAAe,GAAgB,GAAA,GAMnE,OAJA,EAAe,OAAS,EAAO,WAChB,MAAX,IACA,EAAe,GAAgB,IAAY,EAAO,YAE/C,CAAA,KAGf,UAAW,EAAO,OAAS,GAAM,WAAY,EAAM,YAAY,EAAO,OAC3C,oBAAd,WAA6B,SAAS,KAAK,UAAU,aACzD,oBAAoB,KAAK,UAAU,YACpC,GAAG,OAAO,UAAU,UAAU,MAAM,kBAAkB,GAAK,MAjD3E,CA2T4C,EAAI,GAAxC,EAAA,EAAF,OAAU,EAAA,EAAF,UACR,EAAS,EAAO,OAAO,KAAI,SAAA,GAAA,OAzPjC,SAA2B,GACvB,IAAM,EAAY,EAAY,KA4L9B,MAAO,CACH,KAAM,EACN,OAAQ,EACR,OA9LJ,SAAA,GAA6C,IAA3B,EAAA,EAAF,MAAS,EAAA,EAAF,KAAQ,EAAA,EAAF,KAAQ,EAAA,EAAF,OAAU,EAAA,EAAF,MACvC,OAAO,IAAI,SAAQ,SAAC,EAAS,GACzB,EAAU,GAAK,GACf,IAAM,EAAQ,EAAM,YAAY,GAC1B,EAA4B,MAAjB,EAAM,QACjB,EAAsB,QAAT,GAA2B,QAAT,EACrC,IAAK,GAAuB,WAAT,GAA8B,gBAAT,EACpC,MAAM,IAAI,MAAM,2BAA6B,GACjD,IAMI,EANI,GAAW,GAAQ,GAAU,CAAE,OAAQ,IAAzC,OACN,GAAI,GAAQ,GAAU,EAAK,SAAW,EAAO,OACzC,MAAM,IAAI,MAAM,iEAEpB,GAAe,IAAX,EACA,OAAO,EAAQ,CAAE,YAAa,EAAG,SAAU,CAAC,EAAG,QAAS,GAAI,gBAAA,IAEhE,IAAM,EAAO,GACP,EAAW,GACb,EAAc,EACZ,EAAe,SAAA,KACf,EACF,GAAe,EAAA,EAEnB,GAAa,gBAAT,EAAwB,CACxB,GAAmB,IAAf,EAAM,KACN,OAAO,EAAQ,CAAE,YAAA,EAAa,SAAA,EAAU,QAAS,GAAI,gBAAA,IACtC,IAAf,EAAM,KACN,EAAK,KAAK,EAAM,EAAM,SAEtB,EAAK,KAAK,EAAM,EAAM,OAAO,EAAgB,IAAA,KAEhD,CACD,IAIW,EAAA,EAJY,EACnB,EACI,CAAC,EAAQ,GACT,CAAC,EAAQ,MACb,CAAC,EAAM,SAJJ,EAAA,EAAA,GAAO,EAAA,EAAA,GAKd,GAAI,EACA,IAAK,IAAI,EAAI,EAAG,EAAI,IAAU,EAC1B,EAAK,KAAK,EAAO,QAAA,IAAS,EAAM,GAC5B,EAAM,GAAM,EAAM,GAAI,EAAM,IAC5B,EAAM,GAAM,EAAM,KACtB,EAAI,QAAU,OAIlB,IAAK,IAAI,EAAI,EAAG,EAAI,IAAU,EAC1B,EAAK,KAAK,EAAM,EAAM,GAAM,EAAM,KAClC,EAAI,QAAU,CAAA,CAI1B,IAAM,EAAO,SAAA,GACT,IAAM,EAAa,EAAM,OAAO,OAChC,EAAK,SAAQ,SAAC,EAAK,GAAA,OAAmB,MAAb,EAAI,QAAkB,EAAS,GAAK,EAAI,MAAA,IACjE,EAAQ,CACJ,YAAA,EACA,SAAA,EACA,QAAkB,WAAT,EAAoB,EAAO,EAAK,KAAI,SAAA,GAAA,OAAO,EAAI,MAAA,IACxD,WAAA,GAAA,EAGR,EAAI,QAAU,SAAA,GACV,EAAa,GACb,EAAK,EAAA,EAET,EAAI,UAAY,CAAA,KA8HpB,QAAO,SAAA,GAAA,IAAG,EAAA,EAAF,MAAS,EAAA,EAAF,KAAA,OACJ,IAAI,SAAQ,SAAC,EAAS,GACzB,EAAU,GAAK,GAef,IAdA,IAKI,EALE,EAAQ,EAAM,YAAY,GAC1B,EAAS,EAAK,OACd,EAAS,IAAI,MAAM,GACrB,EAAW,EACX,EAAgB,EAEd,EAAiB,SAAA,GACnB,IAAM,EAAM,EAAM,OACb,EAAO,EAAI,MAAQ,EAAI,SAEtB,IAAkB,GACpB,EAAQ,EAAA,EAEV,EAAe,GAAmB,GAC/B,EAAI,EAAG,EAAI,IAAU,EAEf,MADC,EAAK,MAEb,EAAM,EAAM,IAAI,EAAK,KACjB,KAAO,EACX,EAAI,UAAY,EAChB,EAAI,QAAU,IACZ,GAGO,IAAb,GACA,EAAQ,EAAA,KAGpB,IAAG,SAAA,GAAA,IAAG,EAAA,EAAF,MAAS,EAAA,EAAF,IAAA,OACA,IAAI,SAAQ,SAAC,EAAS,GACzB,EAAU,GAAK,GACf,IACM,EADQ,EAAM,YAAY,GACd,IAAI,GACtB,EAAI,UAAY,SAAA,GAAA,OAAS,EAAQ,EAAM,OAAO,OAAA,EAC9C,EAAI,QAAU,GAAmB,EAAA,KAGzC,MAnFJ,SAAe,GACX,OAAQ,SAAA,GAAA,OACG,IAAI,SAAQ,SAAC,EAAS,GACzB,EAAU,GAAK,GACf,IAAQ,EAAgC,EAAlC,MAAS,EAAyB,EAA3B,OAAU,EAAiB,EAAnB,MAAS,EAAU,EAAZ,MACtB,EAAkB,IAAU,WAAuB,EACjD,EAAiB,EAAnB,MAAS,EAAU,EAAZ,MACP,EAAQ,EAAM,YAAY,GAC1B,EAAS,EAAM,aAAe,EAAQ,EAAM,MAAM,EAAM,MACxD,EAAc,EAAgB,GACpC,GAAc,IAAV,EACA,OAAO,EAAQ,CAAE,OAAQ,KAC7B,GAAI,EAAW,CACX,IAAM,EAAM,EACR,EAAO,OAAO,EAAa,GAC3B,EAAO,WAAW,EAAa,GACnC,EAAI,UAAY,SAAA,GAAA,OAAS,EAAQ,CAAE,OAAQ,EAAM,OAAO,QAAA,EACxD,EAAI,QAAU,GAAmB,EAAA,KAEhC,CACD,IAAI,EAAQ,EACN,EAAM,KAAY,kBAAmB,GACvC,EAAO,WAAW,GAClB,EAAO,cAAc,GACnB,EAAS,GACf,EAAI,UAAY,SAAA,GACZ,IAAM,EAAS,EAAI,OACnB,OAAK,GAEL,EAAO,KAAK,EAAS,EAAO,MAAQ,EAAO,cACrC,IAAU,EACL,EAAQ,CAAE,OAAA,SACrB,EAAO,YAJI,EAAQ,CAAE,OAAA,GAAA,EAMzB,EAAI,QAAU,GAAmB,EAAA,MAlCjD,CAmFiB,GACb,WApKJ,SAAA,GAAqD,IAA/B,EAAA,EAAF,MAAS,EAAA,EAAF,OAAU,EAAA,EAAF,MAAS,EAAA,EAAF,QAAW,EAAA,EAAF,OAC/C,OAAO,IAAI,SAAQ,SAAC,EAAS,GACzB,EAAU,GAAK,GACf,IAAQ,EAAiB,EAAnB,MAAS,EAAU,EAAZ,MACP,EAAQ,EAAM,YAAY,GAC1B,EAAS,EAAM,aACjB,EACA,EAAM,MAAM,EAAM,MAChB,EAAY,EACd,EACI,aACA,OACJ,EACI,aACA,OACF,EAAM,KAAY,kBAAmB,GACvC,EAAO,WAAW,EAAgB,GAAQ,GAC1C,EAAO,cAAc,EAAgB,GAAQ,GACjD,EAAI,QAAU,GAAmB,GACjC,EAAI,UAAY,IAAK,SAAA,GACjB,IAAM,EAAS,EAAI,OACnB,GAAK,EAAL,CAIA,EAAO,QAAU,GACjB,EAAO,MAAA,EACP,IAAM,EAAkB,EAAO,SAAS,KAAK,GACzC,EAA4B,EAAO,mBACnC,IACA,EAA4B,EAA0B,KAAK,IAC/D,IAAM,EAAiB,EAAO,QAAQ,KAAK,GAErC,EAAyB,WAAQ,MAAM,IAAI,MAAM,uBACvD,EAAO,MAAQ,EACf,EAAO,KAAO,EAAO,SAAW,EAAO,mBAAqB,EAAO,QAHjC,WAAQ,MAAM,IAAI,MAAM,uBAI1D,EAAO,KAAO,GAAK,GACnB,EAAO,KAAO,eAAA,EAAA,KACN,EAAS,EACb,OAAO,KAAK,OAAM,kBAAM,IAAW,EAAK,WAAa,EAAK,MAAA,IAAQ,MAAK,kBAAM,CAAA,KAEjF,EAAO,MAAS,SAAA,GACZ,IAAM,EAAmB,IAAI,SAAQ,SAAC,EAAkB,GACpD,EAAmB,GAAK,GACxB,EAAI,QAAU,GAAmB,GACjC,EAAO,KAAO,EACd,EAAO,KAAO,SAAA,GACV,EAAO,KAAO,EAAO,SAAW,EAAO,mBAAqB,EAAO,QAAU,EAC7E,EAAiB,EAAA,KAGnB,EAAkB,WACpB,GAAI,EAAI,OACJ,IACI,GAAA,CAEJ,MAAO,GACH,EAAO,KAAK,EAAA,MAIhB,EAAO,MAAA,EACP,EAAO,MAAQ,WAAQ,MAAM,IAAI,MAAM,6BACvC,EAAO,MAAA,EAWf,OARA,EAAI,UAAY,IAAK,SAAA,GACjB,EAAI,UAAY,EAChB,GAAA,IAEJ,EAAO,SAAW,EAClB,EAAO,mBAAqB,EAC5B,EAAO,QAAU,EACjB,IACO,CAAA,EAEX,EAAQ,EAtDS,MAAb,EAAQ,KAsDJ,GACT,EAAA,KAwFP,MAAA,SAAA,GAAe,IAAP,EAAA,EAAF,MAAS,EAAA,EAAF,MACD,EAAiB,EAAnB,MAAS,EAAU,EAAZ,MACb,OAAO,IAAI,SAAQ,SAAC,EAAS,GACzB,IAAM,EAAQ,EAAM,YAAY,GAC1B,EAAS,EAAM,aAAe,EAAQ,EAAM,MAAM,EAAM,MACxD,EAAc,EAAgB,GAC9B,EAAM,EAAc,EAAO,MAAM,GAAe,EAAO,QAC7D,EAAI,UAAY,IAAK,SAAA,GAAA,OAAM,EAAQ,EAAG,OAAO,OAAA,IAC7C,EAAI,QAAU,GAAmB,EAAA,MAnPjD,CAyPkE,EAAA,IAC5D,EAAW,CAAC,EAElB,OADA,EAAO,SAAQ,SAAA,GAAA,OAAS,EAAS,EAAM,MAAQ,CAAA,IACxC,CACH,MAAO,SACP,YAAa,EAAG,YAAY,KAAK,GACjC,MAAA,SAAM,GAEF,IADe,EAAS,GAEpB,MAAM,IAAI,MAAA,UAAA,OAAgB,EAAA,gBAC9B,OAAO,EAAS,EAAA,EAEpB,SAAA,IACA,QAAS,GAAU,GACnB,OAAA,EAAA,CAaR,SAAS,GAAyB,EAAI,GAClC,IAAM,EAAQ,EAAS,GACjB,EARV,SAAgC,EAAa,EAAA,EAAmC,GAAA,IAA1B,EAAA,EAAF,YAC1C,GADyD,EAAF,UAHjE,SAA+B,EAAW,GACtC,OAAO,EAAY,QAAO,SAAC,EAAA,GAAA,IAAQ,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,GAAmB,GAAS,EAAO,GAAA,GAAU,EAAA,CADpF,CAIyC,GAAa,EAAO,EAAa,GAAW,EAAY,SAC7F,MAAO,CACH,OAAA,EAAA,CAHR,CAQ0C,EAAG,aAAc,EAAO,EAAG,MAAO,GACxE,EAAG,KAAO,EAAO,OACjB,EAAG,OAAO,SAAQ,SAAA,GACd,IAAM,EAAY,EAAM,KACpB,EAAG,KAAK,OAAO,OAAO,MAAK,SAAA,GAAA,OAAO,EAAI,OAAS,CAAA,MAC/C,EAAM,KAAO,EAAG,KAAK,MAAM,GACvB,EAAG,aAAsB,EAAG,QAC5B,EAAG,GAAW,KAAO,EAAM,MAAA,IAM3C,SAAS,GAAc,EAAI,EAAM,EAAY,GACzC,EAAW,SAAQ,SAAA,GACf,IAAM,EAAS,EAAS,GACxB,EAAK,SAAQ,SAAA,GACT,IAAM,EAAW,EAAsB,EAAK,KACvC,GAAa,UAAW,QAAA,IAAY,EAAS,SAC1C,IAAQ,EAAG,YAAY,WAAa,aAAe,EAAG,YACtD,EAAQ,EAAK,EAAW,CACpB,IAAA,WAAQ,OAAO,KAAK,MAAM,EAAA,EAC1B,IAAA,SAAI,GACA,EAAe,KAAM,EAAW,CAAE,MAAA,EAAO,UAAA,EAAgB,cAAA,EAAoB,YAAA,GAAY,IAKjG,EAAI,GAAa,IAAI,EAAG,MAAM,EAAW,GAAA,OAM7D,SAAS,GAAgB,EAAI,GACzB,EAAK,SAAQ,SAAA,GACT,IAAK,IAAI,KAAO,EACR,EAAI,aAAgB,EAAG,cAChB,EAAI,EAAA,IAI3B,SAAS,GAAkB,EAAG,GAC1B,OAAO,EAAE,KAAK,QAAU,EAAE,KAAK,OAAA,CAEnC,SAAS,GAAa,EAAI,EAAY,EAAiB,GACnD,IAAM,EAAe,EAAG,UAClB,EAAQ,EAAG,mBAAmB,YAAa,EAAG,YAAa,GACjE,EAAM,OAAO,GACb,EAAM,YAAY,MAAM,GACxB,IAAM,EAAoB,EAAM,QAAQ,KAAK,GACvC,EAAY,GAAI,WAAa,GACnC,IAAS,WACL,GAAI,MAAQ,EACZ,GAAI,UAAY,EACG,IAAf,GACA,EAAK,GAAc,SAAQ,SAAA,GACvB,GAAY,EAAiB,EAAW,EAAa,GAAW,QAAS,EAAa,GAAW,QAAA,IAErG,GAAyB,EAAI,GAC7B,GAAa,QAAO,kBAAM,EAAG,GAAG,SAAS,KAAK,EAAA,IAAQ,MAAM,IAMxE,SAAgC,EAAI,EAAY,EAAO,GACnD,IAAM,EAAQ,GACR,EAAW,EAAG,UAChB,EAAe,EAAG,UAAY,GAAkB,EAAI,EAAG,MAAO,GAC9D,GAAA,EAuEJ,OAtEkB,EAAS,QAAO,SAAA,GAAA,OAAK,EAAE,KAAK,SAAW,CAAA,IAC/C,SAAQ,SAAA,GACd,EAAM,MAAK,WACP,IAAM,EAAY,EACZ,EAAY,EAAQ,KAAK,SAC/B,GAA2B,EAAI,EAAW,GAC1C,GAA2B,EAAI,EAAW,GAC1C,EAAe,EAAG,UAAY,EAC9B,IAAM,EAAO,GAAc,EAAW,GACtC,EAAK,IAAI,SAAQ,SAAA,GACb,GAAY,EAAiB,EAAM,GAAI,EAAM,GAAG,QAAS,EAAM,GAAG,QAAA,IAEtE,EAAK,OAAO,SAAQ,SAAA,GAChB,GAAI,EAAO,SACP,MAAM,IAAI,GAAW,QAAQ,4CAG7B,IAAM,EAAQ,EAAgB,YAAY,EAAO,MACjD,EAAO,IAAI,SAAQ,SAAA,GAAA,OAAO,GAAS,EAAO,EAAA,IAC1C,EAAO,OAAO,SAAQ,SAAA,GAClB,EAAM,YAAY,EAAI,MACtB,GAAS,EAAO,EAAA,IAEpB,EAAO,IAAI,SAAQ,SAAA,GAAA,OAAW,EAAM,YAAY,EAAA,OAGxD,IAAM,EAAiB,EAAQ,KAAK,eACpC,GAAI,GAAkB,EAAQ,KAAK,QAAU,EAAY,CACrD,GAAyB,EAAI,GAC7B,EAAM,gBAAkB,CAAC,EACzB,GAAA,EACA,IAAI,EAAgB,EAAa,GACjC,EAAK,IAAI,SAAQ,SAAA,GACb,EAAc,GAAS,EAAU,EAAA,IAErC,GAAgB,EAAI,CAAC,EAAG,YAAY,YACpC,GAAc,EAAI,CAAC,EAAG,YAAY,WAAY,EAAK,GAAgB,GACnE,EAAM,OAAS,EACf,IAII,EAJE,EAAwB,GAAgB,GAC1C,GACA,KAGJ,IAAM,EAAkB,GAAa,QAAO,WAExC,IADA,EAAc,EAAe,KAErB,EAAuB,CACvB,IAAI,EAAc,GAAwB,KAAK,KAAM,MACrD,EAAY,KAAK,EAAa,EAAA,KAI1C,OAAQ,GAA2C,mBAArB,EAAY,KACtC,GAAa,QAAQ,GAAe,EAAgB,MAAK,kBAAM,CAAA,QAG3E,EAAM,MAAK,SAAA,GACF,GAA6B,IAsF9C,SAA6B,EAAW,GACpC,GAAG,MAAM,KAAK,EAAS,GAAG,kBAAkB,SAAQ,SAAA,GAAA,OAAqC,MAAxB,EAAU,IAAsB,EAAS,GAAG,kBAAkB,EAAA,IADnI,CArFkC,EAAQ,KAAK,SACA,GAEnC,GAAgB,EAAI,CAAC,EAAG,YAAY,YACpC,GAAc,EAAI,CAAC,EAAG,YAAY,WAAY,EAAG,YAAa,EAAG,WACjE,EAAM,OAAS,EAAG,SAAA,OAG1B,SAAS,IACL,OAAO,EAAM,OAAS,GAAa,QAAQ,EAAM,OAAN,CAAc,EAAM,WAAW,KAAK,GAC3E,GAAa,SAAA,CAEd,GAAW,MAAK,WAkE3B,IAA6B,EAAW,EAAA,EAjEE,EAkEtC,EADyB,EAjED,GAkER,SAAQ,SAAA,GACf,EAAS,GAAG,iBAAiB,SAAS,IACvC,GAAY,EAAU,EAAW,EAAU,GAAW,QAAS,EAAU,GAAW,QAAA,OAhJhG,CAHmC,EAAI,EAAY,EAAO,GAAiB,MAAM,EAAA,IAkFjF,SAAS,GAAc,EAAW,GAC9B,IAKI,EALE,EAAO,CACT,IAAK,GACL,IAAK,GACL,OAAQ,IAGZ,IAAK,KAAS,EACL,EAAU,IACX,EAAK,IAAI,KAAK,GAEtB,IAAK,KAAS,EAAW,CACrB,IAAM,EAAS,EAAU,GAAQ,EAAS,EAAU,GACpD,GAAK,EAGA,CACD,IAAM,EAAS,CACX,KAAM,EACN,IAAK,EACL,UAAA,EACA,IAAK,GACL,IAAK,GACL,OAAQ,IAEZ,GACA,IAAM,EAAO,QAAQ,SAAW,KAAU,IAAM,EAAO,QAAQ,SAAW,KACrE,EAAO,QAAQ,OAAS,EAAO,QAAQ,OAAS,GAEjD,EAAO,UAAA,EACP,EAAK,OAAO,KAAK,OAEhB,CACD,IAAM,EAAa,EAAO,UACpB,EAAa,EAAO,UACtB,OAAA,EACJ,IAAK,KAAW,EACP,EAAW,IACZ,EAAO,IAAI,KAAK,GAExB,IAAK,KAAW,EAAY,CACxB,IAAM,EAAS,EAAW,GAAU,EAAS,EAAW,GACnD,EAEI,EAAO,MAAQ,EAAO,KAC3B,EAAO,OAAO,KAAK,GAFnB,EAAO,IAAI,KAAK,EAAA,EAIpB,EAAO,IAAI,OAAS,GAAK,EAAO,IAAI,OAAS,GAAK,EAAO,OAAO,OAAS,IACzE,EAAK,OAAO,KAAK,EAAA,OAlCzB,EAAK,IAAI,KAAK,CAAC,EAAO,GAAA,CAuC9B,OAAO,CAAA,CAEX,SAAS,GAAY,EAAU,EAAW,EAAS,GAC/C,IAAM,EAAQ,EAAS,GAAG,kBAAkB,EAAW,EAAQ,QAC3D,CAAE,QAAS,EAAQ,QAAS,cAAe,EAAQ,MACnD,CAAE,cAAe,EAAQ,OAE7B,OADA,EAAQ,SAAQ,SAAA,GAAA,OAAO,GAAS,EAAO,EAAA,IAChC,CAAA,CAYX,SAAS,GAAS,EAAO,GACrB,EAAM,YAAY,EAAI,KAAM,EAAI,QAAS,CAAE,OAAQ,EAAI,OAAQ,WAAY,EAAI,OAAA,CAEnF,SAAS,GAAkB,EAAI,EAAO,GAClC,IAAM,EAAe,CAAC,EAetB,OAdqB,EAAM,EAAM,iBAAkB,GACtC,SAAQ,SAAA,GAKjB,IAJA,IAAM,EAAQ,EAAS,YAAY,GAC/B,EAAU,EAAM,QACd,EAAU,GAAgB,GAAgB,GAAU,GAAW,IAAI,OAAgB,EAAM,cAAe,GAA8B,iBAAZ,GAAA,GAC1H,EAAU,GACP,EAAI,EAAG,EAAI,EAAM,WAAW,SAAU,EAAG,CAC9C,IAAM,EAAW,EAAM,MAAM,EAAM,WAAW,IAC9C,EAAU,EAAS,QACnB,IAAI,EAAQ,GAAgB,EAAS,KAAM,IAAW,EAAS,SAAU,EAAS,YAAA,EAAmB,GAA8B,iBAAZ,GAAA,GACvH,EAAQ,KAAK,EAAA,CAEjB,EAAa,GAAa,GAAkB,EAAW,EAAS,EAAA,IAE7D,CAAA,CAaX,SAAS,GAA2B,EAAI,EAAQ,GAE5C,IADA,IAAM,EAAa,EAAS,GAAG,iBACtB,EAAI,EAAG,EAAI,EAAW,SAAU,EAAG,CACxC,IAAM,EAAY,EAAW,GACvB,EAAQ,EAAS,YAAY,GACnC,EAAG,WAAa,WAAY,EAC5B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,WAAW,SAAU,EAAG,CAC9C,IAAM,EAAY,EAAM,WAAW,GAC7B,EAAU,EAAM,MAAM,GAAW,QACjC,EAA+B,iBAAZ,EAAuB,EAAU,IAAM,EAAM,GAAS,KAAK,KAAO,IAC3F,GAAI,EAAO,GAAY,CACnB,IAAM,EAAY,EAAO,GAAW,UAAU,GAC1C,IACA,EAAU,KAAO,SACV,EAAO,GAAW,UAAU,GACnC,EAAO,GAAW,UAAU,GAAa,EAAA,GAKhC,oBAAd,WAA6B,SAAS,KAAK,UAAU,aAC3D,oBAAoB,KAAK,UAAU,YACpC,EAAQ,mBAAqB,aAAmB,EAAQ,mBACxD,GAAG,OAAO,UAAU,UAAU,MAAM,kBAAkB,GAAK,MAC3D,EAAG,YAAA,EAAa,CAYxB,IAAM,GAAA,oBAAA,IAAA,EAAA,KAAA,EAAA,CAuCS,OAvCT,EAAA,EAAA,EAAA,IAAA,mBAAA,MACF,SAAiB,EAAQ,GACrB,EAAK,GAAQ,SAAQ,SAAA,GACjB,GAA0B,OAAtB,EAAO,GAAqB,CAC5B,IAAI,EAA2B,EAAO,GAZzB,MAAM,KAAK,KAAI,SAAC,EAAO,GAE5C,IAAM,GADN,EAAQ,EAAM,QACK,QAAQ,eAAgB,IACrC,EAAU,MAAM,KAAK,GAAQ,EAAK,MAAM,cAAc,GAAG,MAAM,KAAO,EAC5E,OAAO,GAAgB,EAAM,GAAW,KAAM,KAAK,KAAK,GAAQ,KAAK,KAAK,GAAQ,OAAO,KAAK,GAAQ,EAAQ,GAAuB,IAAb,EAAA,IAS5G,EAAU,EAAQ,QACtB,GAAI,EAAQ,MACR,MAAM,IAAI,GAAW,OAAO,sCAChC,EAAQ,SAAQ,SAAA,GACZ,GAAI,EAAI,KACJ,MAAM,IAAI,GAAW,OAAO,wDAChC,IAAK,EAAI,QACL,MAAM,IAAI,GAAW,OAAO,2DAEpC,EAAU,GAAa,GAAkB,EAAW,EAAS,EAAA,OAIzE,CAAA,IAAA,SAAA,MAAA,SAAO,GACH,IAAM,EAAK,KAAK,GAChB,KAAK,KAAK,aAAe,KAAK,KAAK,aAC/B,EAAO,KAAK,KAAK,aAAc,GAC/B,EACJ,IAAM,EAAW,EAAG,UACd,EAAa,CAAC,EAChB,EAAW,CAAC,EAUhB,OATA,EAAS,SAAQ,SAAA,GACb,EAAO,EAAY,EAAQ,KAAK,cAChC,EAAY,EAAQ,KAAK,SAAW,CAAC,EACrC,EAAQ,iBAAiB,EAAY,EAAA,IAEzC,EAAG,UAAY,EACf,GAAgB,EAAI,CAAC,EAAG,WAAY,EAAI,EAAG,YAAY,YACvD,GAAc,EAAI,CAAC,EAAG,WAAY,EAAI,EAAG,YAAY,UAAW,KAAK,KAAK,QAAS,EAAK,GAAW,GACnG,EAAG,YAAc,EAAK,GACf,IAAA,GAEX,CAAA,IAAA,UAAA,MAAA,SAAQ,GAEJ,OADA,KAAK,KAAK,eAAiB,GAAgB,KAAK,KAAK,gBAAkB,GAAK,GACrE,IAAA,KAAA,CAAA,CAvCT,GAwDN,SAAS,GAAgB,EAAW,GAChC,IAAI,EAAY,EAAsB,WAStC,OARK,IACD,EAAY,EAAsB,WAAI,IAAI,GAnzE/B,YAmzEmD,CAC1D,OAAQ,GACR,UAAA,EACA,YAAA,KAEM,QAAQ,GAAG,OAAO,CAAE,QAAS,SAEpC,EAAU,MAAM,WAE3B,SAAS,GAAmB,GACxB,OAAO,GAA4C,mBAAxB,EAAU,SAAA,CAoBzC,SAAS,GAAI,GACT,OAAO,IAAS,WAEZ,OADA,GAAI,YAAA,EACG,GAAA,IAIf,SAAS,KACL,IAKI,EAFJ,OAHgB,UAAU,eACtB,WAAW,KAAK,UAAU,aACzB,iBAAiB,KAAK,UAAU,YACnB,UAAU,UAGrB,IAAI,SAAQ,SAAU,GACzB,IAAI,EAAS,WAAc,OAAO,UAAU,YAAY,QAAQ,EAAA,EAChE,EAAa,YAAY,EAAQ,KACjC,GAAA,IACD,SAAQ,WAAc,OAAO,cAAc,EAAA,IANnC,QAAQ,SAAA,CASvB,SAAS,GAAa,GAClB,QAAS,SAAU,EAAA,CAEvB,IAAM,GAAW,SAAX,EAAqB,EAAY,GACnC,IAAI,KAGC,CACD,IAAM,EAAK,IAAI,EAIf,OAHI,GAAe,MAAO,GACtB,EAAO,EAAI,GAER,CAAA,CAPP,EAAO,KAAM,UAAU,OAAS,CAAE,EAAG,EAAG,KAAM,EAAY,GAAI,UAAU,OAAS,EAAI,EAAK,GAAe,CAAE,EAAG,KA2BtH,SAAS,GAAS,EAAQ,EAAM,GAC5B,IAAM,EAAO,GAAI,EAAM,GACvB,IAAI,MAAM,GAAV,CAEA,GAAI,EAAO,EACP,MAAM,aACV,GAAI,GAAa,GACb,OAAO,EAAO,EAAQ,CAAE,KAAA,EAAM,GAAA,EAAI,EAAG,IACzC,IAAM,EAAO,EAAO,EACd,EAAQ,EAAO,EACrB,GAAI,GAAI,EAAI,EAAO,MAAQ,EAIvB,OAHA,EACM,GAAS,EAAM,EAAM,GACpB,EAAO,EAAI,CAAE,KAAA,EAAM,GAAA,EAAI,EAAG,EAAG,EAAG,KAAM,EAAG,MACzC,GAAU,GAErB,GAAI,GAAI,EAAM,EAAO,IAAM,EAIvB,OAHA,EACM,GAAS,EAAO,EAAM,GACrB,EAAO,EAAI,CAAE,KAAA,EAAM,GAAA,EAAI,EAAG,EAAG,EAAG,KAAM,EAAG,MACzC,GAAU,GAEjB,GAAI,EAAM,EAAO,MAAQ,IACzB,EAAO,KAAO,EACd,EAAO,EAAI,KACX,EAAO,EAAI,EAAQ,EAAM,EAAI,EAAI,GAEjC,GAAI,EAAI,EAAO,IAAM,IACrB,EAAO,GAAK,EACZ,EAAO,EAAI,KACX,EAAO,EAAI,EAAO,EAAI,EAAO,EAAE,EAAI,EAAI,GAE3C,IAAM,GAAkB,EAAO,EAC3B,IAAS,EAAO,GAChB,GAAY,EAAQ,GAEpB,GAAS,GACT,GAAY,EAAQ,EAlCd,CAkCc,CAG5B,SAAS,GAAY,EAAQ,GAQpB,GAAa,IAPlB,SAAS,EAAa,EAAA,GAAuB,IAAb,EAAA,EAAF,KAAQ,EAAA,EAAF,GAAM,EAAA,EAAF,EAAK,EAAA,EAAF,EACvC,GAAS,EAAQ,EAAM,GACnB,GACA,EAAa,EAAQ,GACrB,GACA,EAAa,EAAQ,EAAA,CAL7B,CAQiB,EAAQ,EAAA,CAE7B,SAAS,GAAc,EAAW,GAC9B,IAAM,EAAK,GAAoB,GAC3B,EAAc,EAAG,OACrB,GAAI,EAAY,KACZ,OAAO,EAKX,IAJA,IAAI,EAAI,EAAY,MACd,EAAK,GAAoB,GAC3B,EAAc,EAAG,KAAK,EAAE,MACxB,EAAI,EAAY,OACZ,EAAY,OAAS,EAAY,MAAM,CAC3C,GAAI,GAAI,EAAE,KAAM,EAAE,KAAO,GAAK,GAAI,EAAE,GAAI,EAAE,OAAS,EAC/C,OAAO,EACX,GAAI,EAAE,KAAM,EAAE,MAAQ,EACf,GAAK,EAAc,EAAG,KAAK,EAAE,OAAO,MACpC,GAAK,EAAc,EAAG,KAAK,EAAE,OAAO,KAAA,CAE/C,OAAO,EAEX,SAAS,GAAoB,GACzB,IAAI,EAAQ,GAAa,GAAQ,KAAO,CAAE,EAAG,EAAG,EAAG,GACnD,MAAO,CACH,KAAA,SAAK,GAED,IADA,IAAM,EAAc,UAAU,OAAS,EAChC,GACH,OAAQ,EAAM,GACV,KAAK,EAED,GADA,EAAM,EAAI,EACN,EACA,KAAO,EAAM,EAAE,GAAK,GAAI,EAAK,EAAM,EAAE,MAAQ,GACzC,EAAQ,CAAE,GAAI,EAAO,EAAG,EAAM,EAAE,EAAG,EAAG,QAG1C,KAAO,EAAM,EAAE,GACX,EAAQ,CAAE,GAAI,EAAO,EAAG,EAAM,EAAE,EAAG,EAAG,GAElD,KAAK,EAED,GADA,EAAM,EAAI,GACL,GAAe,GAAI,EAAK,EAAM,EAAE,KAAO,EACxC,MAAO,CAAE,MAAO,EAAM,EAAG,MAAA,GACjC,KAAK,EACD,GAAI,EAAM,EAAE,EAAG,CACX,EAAM,EAAI,EACV,EAAQ,CAAE,GAAI,EAAO,EAAG,EAAM,EAAE,EAAG,EAAG,GACtC,SAER,KAAK,EACD,EAAQ,EAAM,GAG1B,MAAO,CAAE,MAAA,EAAM,GAI3B,SAAS,GAAU,GACf,IAAI,EAAI,EACF,IAA6B,QAAnB,EAAK,EAAO,SAAA,IAAe,OAAA,EAAyB,EAAG,IAAM,KAA2B,QAAnB,EAAK,EAAO,SAAA,IAAe,OAAA,EAAyB,EAAG,IAAM,GAC5I,EAAI,EAAO,EAAI,IAAM,GAAQ,EAAI,IAAM,GAC7C,GAAI,EAAG,CACH,IAAM,EAAU,MAAN,EAAY,IAAM,IACtB,EAAA,EAAA,GAAiB,GACjB,EAAe,EAAO,GAC5B,EAAO,KAAO,EAAa,KAC3B,EAAO,GAAK,EAAa,GACzB,EAAO,GAAK,EAAa,GACzB,EAAU,GAAK,EAAa,GAC5B,EAAO,GAAK,EACZ,EAAU,EAAI,GAAa,EAAA,CAE/B,EAAO,EAAI,GAAa,EAAA,CAE5B,SAAS,GAAA,GAAkB,IAAH,EAAA,EAAF,EAAK,EAAA,EAAF,EACrB,OAAQ,EAAK,EAAI,KAAK,IAAI,EAAE,EAAG,EAAE,GAAK,EAAE,EAAK,EAAI,EAAE,EAAI,GAAK,EAGhE,SAAS,GAAuB,EAAQ,GAOpC,OANA,EAAK,GAAQ,SAAQ,SAAA,GACb,EAAO,GACP,GAAY,EAAO,GAAO,EAAO,IAEjC,EAAO,GAAQ,EAAsB,EAAO,GAAA,IAE7C,CAAA,CAGX,SAAS,GAAe,EAAK,GACzB,OAAO,OAAO,KAAK,GAAK,MAAM,SAAA,GAAA,OAAQ,EAAI,IAAQ,GAAc,EAAI,GAAM,EAAI,GAAA,IAzJlF,EAAM,GAAS,UAAA,EAAA,CACX,IAAA,SAAI,GAEA,OADA,GAAY,KAAM,GACX,IAAA,EAEX,OAAA,SAAO,GAEH,OADA,GAAS,KAAM,EAAK,GACb,IAAA,EAEX,QAAA,SAAQ,GAAA,IAAA,EAAA,KAEJ,OADA,EAAK,SAAQ,SAAA,GAAA,OAAO,GAAS,EAAM,EAAK,EAAA,IACjC,IAAA,GAEV,IAAA,WACG,OAAO,GAAoB,KAAA,KA8InC,IAAM,GAAQ,CAAC,EAEX,GAAkB,CAAC,EACnB,IAAA,EACJ,SAAS,GAAwB,GAC7B,GAAuB,GAAiB,GACnC,KACD,IAAA,EACA,YAAW,WACP,IAAA,EACA,IAAM,EAAQ,GACd,GAAkB,CAAC,EACnB,GAAqB,EAAA,GACtB,IAGX,SAAS,GAAqB,GAA2C,IAA7B,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,IAAA,UAAA,GAClC,EAAkB,IAAI,IAC5B,IAAK,IAAM,KAAO,EAAc,CAC5B,IAAM,EAAQ,yBAAyB,KAAK,GAC5C,GAAI,EAAO,CACP,IAAA,EAAA,EAA8B,EAAA,GAArB,EAAA,EAAA,GAAQ,EAAA,EAAA,GACX,EAAW,GAAA,SAAA,OAAe,EAAA,KAAA,OAAU,IACtC,GACA,GAA0B,EAAU,EAAc,EAAiB,EAAA,EAG/E,EAAgB,SAAS,SAAA,GAAA,OAAY,GAAA,IAEzC,SAAS,GAA0B,EAAU,EAAc,EAAoB,GAE3E,IADA,IAAM,EAAoB,GAA8B,GACxD,EAAA,EAAA,EAAmC,OAAO,QAAQ,EAAS,QAAQ,OAAA,EAAA,EAAA,OAAA,IAAQ,CAAtE,IAEmB,EAFnB,EAAA,EAAA,EAAA,GAAA,GAAO,EAAA,EAAA,GACF,EAAkB,GAA8B,GACtD,EAAA,EAFmB,EAAA,IAEC,IAApB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MACQ,KADG,EAAA,EAAA,MACH,EAAM,QAAU,GAAe,EAAc,EAAM,QACnD,EAAM,YAAY,SAAS,SAAA,GAAA,OAAY,EAAmB,IAAI,EAAA,IAEzD,GACL,EAAgB,KAAK,EAAA,CAGzB,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,CAAA,GACA,EAAkB,KAAK,CAAC,EAAW,GAAA,CAE3C,GAAI,EAAA,KAC2C,EAD3C,EAAA,EAC2C,GAAA,IAA3C,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MACI,KAAA,EAAA,EAAA,EAAA,MAAA,GADQ,EAAA,EAAA,GAAW,EAAA,EAAA,GACnB,EAAS,QAAQ,MAAM,GAAa,CAAA,QAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,GAkIhD,SAAS,GAAc,GACnB,IAAI,EAAW,SAAA,GAAA,OAAU,EAAS,KAAK,EAAA,EAAmD,EAAY,EAAK,GAAW,EAAU,GAAtE,SAAA,GAAA,OAAS,EAAS,MAAM,EAAA,IAClF,SAAS,EAAK,GACV,OAAQ,SAAA,GACJ,IAAI,EAAO,EAAQ,GAAM,EAAQ,EAAK,MACtC,OAAO,EAAK,KAAO,EACb,GAA+B,mBAAf,EAAM,KAEpB,EAAM,KAAK,EAAW,GADtB,EAAQ,GAAS,QAAQ,IAAI,GAAO,KAAK,EAAW,GAAW,EAAU,EAAA,EAIzF,OAAO,EAAK,EAAL,EAAA,CAGX,SAAS,GAAuB,EAAM,EAAa,GAC/C,IAAI,EAAI,UAAU,OAClB,GAAI,EAAI,EACJ,MAAM,IAAI,GAAW,gBAAgB,qBAEzC,IADA,IAAI,EAAO,IAAI,MAAM,EAAI,KAChB,GACL,EAAK,EAAI,GAAK,UAAU,GAG5B,OAFA,EAAY,EAAK,MAEV,CAAC,EADK,EAAQ,GACC,EAAA,CAE1B,SAAS,GAAsB,EAAI,EAAM,EAAY,EAAmB,GACpE,OAAO,GAAa,UAAU,MAAK,WAC/B,IAAM,EAAY,GAAI,WAAa,GAC7B,EAAQ,EAAG,mBAAmB,EAAM,EAAY,EAAG,UAAW,GACpE,EAAM,UAAA,EACN,IAAM,EAAY,CACd,MAAO,EACP,UAAW,GAEf,GAAI,EACA,EAAM,SAAW,EAAkB,cAGnC,IACI,EAAM,SACN,EAAG,OAAO,eAAiB,EAE/B,MAAO,GACH,OAAI,EAAG,OAAS,GAAS,cAAgB,EAAG,YAAc,EAAG,OAAO,eAAiB,GACjF,QAAQ,KAAK,4BACb,EAAG,SACI,EAAG,OAAO,MAAK,kBAAM,GAAsB,EAAI,EAAM,EAAY,KAAM,EAAA,KAE3E,GAAU,EAAA,CAGzB,IAII,EAJE,EAAmB,GAAgB,GACrC,GACA,KAGJ,IAAM,EAAkB,GAAa,QAAO,WAExC,GADA,EAAc,EAAU,KAAK,EAAO,GAEhC,GAAI,EAAkB,CAClB,IAAI,EAAc,GAAwB,KAAK,KAAM,MACrD,EAAY,KAAK,EAAa,EAAA,KAEG,mBAArB,EAAY,MAAoD,mBAAtB,EAAY,QAClE,EAAc,GAAc,GAAA,GAGrC,GACH,OAAQ,GAA2C,mBAArB,EAAY,KACtC,GAAa,QAAQ,GAAa,MAAK,SAAA,GAAA,OAAK,EAAM,OAC9C,EACE,GAAU,IAAI,GAAW,gBAAgB,kEAC7C,EAAgB,MAAK,kBAAM,CAAA,KAAc,MAAK,SAAA,GAAA,OAC5C,GACA,EAAM,WACH,EAAM,YAAY,MAAK,kBAAM,CAAA,OACrC,OAAM,SAAA,GAAA,OACL,EAAM,QAAQ,GACP,GAAU,EAAA,OAK7B,SAAS,GAAI,EAAG,EAAO,GAEnB,IADA,IAAM,EAAS,EAAQ,GAAK,EAAE,QAAU,CAAC,GAChC,EAAI,EAAG,EAAI,IAAS,EACzB,EAAO,KAAK,GAChB,OAAO,CAAA,CAuIX,IAAM,GAAyB,CAC3B,MAAO,SACP,KAAM,yBACN,MAAO,EACP,OAzIJ,SAAsC,GAClC,OAAA,EAAA,EAAA,GACO,GAAA,IACH,MAAA,SAAM,GACI,IAAA,EAAQ,EAAK,MAAM,GACjB,EAAW,EAAb,OACA,EAAc,CAAC,EACf,EAAoB,GAC1B,SAAS,EAAkB,EAAS,EAAS,GACzC,IAAM,EAAe,GAAgB,GAC/B,EAAa,EAAY,GAAgB,EAAY,IAAiB,GACtE,EAAuB,MAAX,EAAkB,EAAuB,iBAAZ,EAAuB,EAAI,EAAQ,OAC5E,EAAY,EAAU,EACtB,EAAA,EAAA,EAAA,GACC,GAAA,IACH,KAAM,EAAA,GAAA,OACG,EAAA,kBAAA,OAA6B,EAAc,KAAA,KAC9C,EAAc,KACpB,cAAA,EACA,UAAA,EACA,QAAA,EACA,UAAA,EACA,WAAY,GAAgB,GAC5B,QAAS,GAAa,EAAc,SAaxC,OAXA,EAAU,KAAK,GACV,EAAa,cACd,EAAkB,KAAK,GAEvB,EAAY,GAIZ,EAHqC,IAAd,EACnB,EAAQ,GACR,EAAQ,MAAM,EAAG,EAAY,GACC,EAAU,EAAG,GAEnD,EAAU,MAAK,SAAC,EAAG,GAAA,OAAM,EAAE,QAAU,EAAE,OAAA,IAChC,CAAA,CAEX,IAAM,EAAa,EAAkB,EAAO,WAAW,QAAS,EAAG,EAAO,YAC1E,EAAY,OAAS,CAAC,GACtB,IAA2B,EAA3B,EAAA,EAAoB,EAAO,SAAA,IAA3B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MACI,KADO,EAAA,EAAA,MACP,EAAkB,EAAM,QAAS,EAAG,EAAA,CAiBxC,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,UAAS,EAAiB,GACtB,IAZoB,EAAO,EAYrB,EAAQ,EAAI,MAAM,MACxB,OAAO,EAAM,UAAA,EAAA,EAAA,GACN,GAAA,IACH,MAAO,CACH,MAAO,EAAM,cACb,OAjBY,EAiBU,EAAI,MAAM,MAjBb,EAiBoB,EAAM,QAhB9C,CACH,KAAqB,IAAf,EAAM,KACR,EACA,EAAM,KACV,MAAO,GAAI,EAAM,MAAO,EAAM,UAAY,EAAK,QAAU,EAAK,QAAS,GACvE,WAAA,EACA,MAAO,GAAI,EAAM,MAAO,EAAM,UAAY,EAAK,QAAU,EAAK,QAAS,GACvE,WAAA,OAWA,CAnBuB,CAqB/B,IAAM,EAAA,EAAA,EAAA,GACC,GAAA,IACH,OAAA,EAAA,EAAA,GACO,GAAA,IACH,WAAA,EACA,QAAS,EACT,kBA/BR,SAAuB,GACnB,IAAM,EAAS,EAAY,GAAgB,IAC3C,OAAO,GAAU,EAAO,MA+BxB,MAAM,SAAA,GAAA,OACK,EAAM,MAAM,EAAiB,GAAA,EAExC,MAAM,SAAA,GAAA,OACK,EAAM,MAAM,EAAiB,GAAA,EAExC,WAAA,SAAW,GACP,IAAA,EAA0C,EAAI,MAAM,MAA5C,EAAA,EAAF,QAAW,EAAA,EAAF,UAAa,EAAA,EAAF,UAC1B,OAAK,EAyCE,EAAM,WAAW,EAAiB,IACpC,MAAK,SAAA,GAAA,OAAU,GAxCpB,SAA6B,GAWzB,IAAM,EAAgB,OAAO,OAAO,EAAQ,CACxC,SAAU,CAAE,MAXhB,SAAmB,GACR,MAAP,EACI,EAAO,SAAS,GAAI,EAAK,EAAI,QAAU,EAAK,QAAU,EAAK,QAAS,IACpE,EAAI,OACA,EAAO,SAAS,EAAO,IAAI,MAAM,EAAG,GAC/B,OAAO,EAAI,QACV,EAAK,QACL,EAAK,QAAS,IACpB,EAAO,UAAA,GAIf,mBAAoB,CAChB,MAAA,SAAM,EAAK,GACP,EAAO,mBAAmB,GAAI,EAAK,EAAK,QAAS,GAAU,EAAA,GAGnE,WAAY,CACR,IAAG,kBACQ,EAAO,UAAA,GAGtB,IAAK,CACD,IAAA,WACI,IAAM,EAAM,EAAO,IACnB,OAAqB,IAAd,EACH,EAAI,GACJ,EAAI,MAAM,EAAG,EAAA,GAGzB,MAAO,CACH,IAAG,kBACQ,EAAO,KAAA,KAI1B,OAAO,CAAA,CArCX,CAwCkD,EAAA,IAzCvC,EAAM,WAAW,EAyCsB,IAG1D,OAAO,CAAA,MAWnB,SAAS,GAAc,EAAG,EAAG,EAAI,GA+B7B,OA9BA,EAAK,GAAM,CAAC,EACZ,EAAO,GAAQ,GACf,EAAK,GAAG,SAAS,SAAA,GACb,GAAK,EAAO,EAAG,GAGV,CACD,IAAI,EAAK,EAAE,GAAO,EAAK,EAAE,GACzB,GAAkB,iBAAP,GAAiC,iBAAP,GAAmB,GAAM,EAAI,CAC9D,IAAM,EAAa,GAAY,GAE3B,IADe,GAAY,GAE3B,EAAG,EAAO,GAAQ,EAAE,GAEA,WAAf,EACL,GAAc,EAAI,EAAI,EAAI,EAAO,EAAO,KAEnC,IAAO,IACZ,EAAG,EAAO,GAAQ,EAAE,GAAA,MAGnB,IAAO,IACZ,EAAG,EAAO,GAAQ,EAAE,GAAA,MAlBxB,EAAG,EAAO,QAAA,CAAQ,IAqB1B,EAAK,GAAG,SAAS,SAAA,GACR,EAAO,EAAG,KACX,EAAG,EAAO,GAAQ,EAAE,GAAA,IAGrB,CAAA,CAGX,SAAS,GAAiB,EAAY,GAClC,MAAiB,WAAb,EAAI,KACG,EAAI,KACR,EAAI,MAAQ,EAAI,OAAO,IAAI,EAAW,WAAA,CAGjD,IAAM,GAAkB,CACpB,MAAO,SACP,KAAM,kBACN,MAAO,EACP,OAAS,SAAA,GAAA,OAAA,EAAA,EAAA,GACF,GAAA,IACH,MAAA,SAAM,GACI,IAAA,EAAY,EAAS,MAAM,GACzB,EAAe,EAAU,OAA3B,WACA,EAAA,EAAA,EAAA,GACC,GAAA,IACH,OAAA,SAAO,GACG,IAAA,EAAU,GAAI,MAAA,EACqB,EAAQ,MAAM,GAAW,KAA1D,EAAA,EAAF,SAAY,EAAA,EAAF,SAAY,EAAA,EAAF,SAC1B,OAAQ,EAAI,MACR,IAAK,MACD,GAAI,EAAS,OAAS,GAClB,MACJ,OAAO,EAAQ,SAAS,aAAa,kBAAM,EAAe,EAAA,OAC9D,IAAK,MACD,GAAI,EAAS,OAAS,IAAO,EAAS,OAAS,GAC3C,MACJ,OAAO,EAAQ,SAAS,aAAa,kBAAM,EAAe,EAAA,OAC9D,IAAK,SACD,GAAI,EAAS,OAAS,GAClB,MACJ,OAAO,EAAQ,SAAS,aAAa,kBAAM,EAAe,EAAA,OAC9D,IAAK,cACD,GAAI,EAAS,OAAS,GAClB,MACJ,OAAO,EAAQ,SAAS,aAAa,kBAsE7C,SAAqB,GACjB,OAAO,EAAgB,EAAI,MAAO,EAAI,MAAO,KADjD,CAtE+D,EAAA,OAE/D,OAAO,EAAU,OAAO,GACxB,SAAS,EAAe,GACpB,IAAM,EAAU,GAAI,MACd,EAAO,EAAI,MAAQ,GAAiB,EAAY,GACtD,IAAK,EACD,MAAM,IAAI,MAAM,gBAQpB,MAJiB,YAHjB,EAAmB,QAAb,EAAI,MAA+B,QAAb,EAAI,KAAA,EAAA,EAAA,GACvB,GAAA,IAAK,KAAA,IAAA,EAAA,GACL,IACD,OACJ,EAAI,OAAA,EAAa,EAAI,SACrB,EAAI,OACJ,EAAI,KAAA,EAAW,EAAI,OAgF/C,SAA2B,EAAO,EAAK,GACnC,MAAoB,QAAb,EAAI,KACL,QAAQ,QAAQ,IAChB,EAAM,QAAQ,CAAE,MAAO,EAAI,MAAO,KAAM,EAAe,MAAO,cAHxE,CA/EiD,EAAW,EAAK,GAAM,MAAK,SAAA,GAChD,IAAM,EAAW,EAAK,KAAI,SAAC,EAAK,GAC5B,IAAM,EAAgB,EAAe,GAC/B,EAAM,CAAE,QAAS,KAAM,UAAW,MACxC,GAAiB,WAAb,EAAI,KACJ,EAAS,KAAK,KAAK,EAAK,EAAK,EAAe,QAE3C,GAAiB,QAAb,EAAI,WAAA,IAAkB,EAA6B,CACxD,IAAM,EAAsB,EAAS,KAAK,KAAK,EAAK,EAAK,EAAI,OAAO,GAAI,GAC7D,MAAP,GAAsC,MAAvB,IACf,EAAM,EACN,EAAI,KAAK,GAAK,EACT,EAAW,UACZ,EAAa,EAAI,OAAO,GAAI,EAAW,QAAS,GAAA,KAIvD,CACD,IAAM,EAAa,GAAc,EAAe,EAAI,OAAO,IACrD,EAAoB,EAAS,KAAK,KAAK,EAAK,EAAY,EAAK,EAAe,GAClF,GAAI,EAAmB,CACnB,IAAM,EAAiB,EAAI,OAAO,GAClC,OAAO,KAAK,GAAmB,SAAQ,SAAA,GAC/B,EAAO,EAAgB,GACvB,EAAe,GAAW,EAAkB,GAG5C,EAAa,EAAgB,EAAS,EAAkB,GAAA,KAKxE,OAAO,CAAA,IAEX,OAAO,EAAU,OAAO,GAAK,MAAK,SAAA,GAC9B,IADiE,IAAhC,EAAA,EAAA,SAAU,EAAA,EAAA,QAAS,EAAA,EAAA,YAAa,EAAA,EAAA,WACxD,EAAI,EAAG,EAAI,EAAK,SAAU,EAAG,CAClC,IAAM,EAAU,EAAU,EAAQ,GAAK,EAAK,GACtC,EAAM,EAAS,GACN,MAAX,EACA,EAAI,SAAW,EAAI,QAAQ,EAAS,IAGpC,EAAI,WAAa,EAAI,UAAuB,QAAb,EAAI,MAAkB,EAAe,GAChE,EAAI,OAAO,GACX,EAAA,CAIZ,MAAO,CAAE,SAAA,EAAU,QAAA,EAAS,YAAA,EAAa,WAAA,EAAA,IAC1C,OAAM,SAAA,GAAA,OACL,EAAS,SAAQ,SAAA,GAAA,OAAO,EAAI,SAAW,EAAI,QAAQ,EAAA,IAC5C,QAAQ,OAAO,EAAA,OAOlC,SAAS,EAAgB,EAAO,EAAO,GACnC,OAAO,EAAU,MAAM,CAAE,MAAA,EAAO,QAAA,EAAe,MAAO,CAAE,MAAO,EAAY,MAAA,GAAS,MAAA,IAC/E,MAAK,SAAA,GAAA,IAAG,EAAA,EAAA,OAAA,OACF,EAAe,CAAE,KAAM,SAAU,KAAM,EAAQ,MAAA,IAAS,MAAK,SAAA,GAAA,OAC5D,EAAI,YAAc,EACX,QAAQ,OAAO,EAAI,SAAS,IACnC,EAAO,OAAS,EACT,CAAE,SAAU,GAAI,YAAa,EAAG,gBAAA,GAGhC,EAAgB,EAAA,EAAA,EAAA,GAAY,GAAA,IAAO,MAAO,EAAO,EAAO,OAAS,GAAI,WAAA,IAAmB,EAAA,WAOvH,OAAO,CAAA,MAUnB,SAAS,GAAwB,EAAM,EAAO,GAC1C,IACI,IAAK,EACD,OAAO,KACX,GAAI,EAAM,KAAK,OAAS,EAAK,OACzB,OAAO,KAEX,IADA,IAAM,EAAS,GACN,EAAI,EAAG,EAAI,EAAG,EAAI,EAAM,KAAK,QAAU,EAAI,EAAK,SAAU,EAC3B,IAAhC,GAAI,EAAM,KAAK,GAAI,EAAK,MAE5B,EAAO,KAAK,EAAQ,EAAU,EAAM,OAAO,IAAM,EAAM,OAAO,MAC5D,GAEN,OAAO,EAAO,SAAW,EAAK,OAAS,EAAS,KAEpD,MAAO,GACH,OAAO,MAGf,IAAM,GAAgC,CAClC,MAAO,SACP,OAAQ,EACR,OAAS,SAAA,GAAA,MACE,CACH,MAAQ,SAAA,GACJ,IAAM,EAAQ,EAAK,MAAM,GACzB,OAAA,EAAA,EAAA,GACO,GAAA,IACH,QAAU,SAAA,GACN,IAAK,EAAI,MACL,OAAO,EAAM,QAAQ,GAEzB,IAAM,EAAe,GAAwB,EAAI,KAAM,EAAI,MAAc,OAAiB,UAAd,EAAI,OAChF,OAAI,EACO,GAAa,QAAQ,GAEzB,EAAM,QAAQ,GAAK,MAAM,SAAA,GAAA,OAC5B,EAAI,MAAc,OAAI,CAClB,KAAM,EAAI,KACV,OAAsB,UAAd,EAAI,MAAoB,EAAU,GAAO,GAE9C,CAAA,KAGf,OAAS,SAAA,GAAA,MACY,QAAb,EAAI,OACJ,EAAI,MAAc,OAAI,MACnB,EAAM,OAAO,EAAA,QAQ5C,SAAS,GAAkB,EAAK,GAC5B,MAA2B,aAAnB,EAAI,MAAM,QACZ,EAAI,SACL,EAAI,MAAM,UACqB,aAAhC,EAAI,MAAM,GAAG,SAAS,QACrB,EAAM,OAAO,WAAW,QAAA,CAGjC,SAAS,GAAkB,EAAM,GAC7B,OAAQ,GACJ,IAAK,QACD,OAAO,EAAI,SAAW,EAAI,OAC9B,IAAK,MAEL,IAAK,UAEL,IAAK,QAEL,IAAK,aACD,OAAO,GAInB,IAAM,GAA0B,CAC5B,MAAO,SACP,MAAO,EACP,KAAM,gBACN,OAAS,SAAA,GACL,IAAM,EAAS,EAAK,OAAO,KACrB,EAAa,IAAI,GAAS,EAAK,QAAS,EAAK,SACnD,OAAA,EAAA,EAAA,GACO,GAAA,IACH,YAAa,SAAC,EAAQ,EAAM,GACxB,GAAI,GAAI,QAAmB,aAAT,EACd,MAAM,IAAI,GAAW,SAAA,+DAAA,OAAwE,GAAI,UAErG,OAAO,EAAK,YAAY,EAAQ,EAAM,EAAA,EAE1C,MAAQ,SAAA,GACE,IAAA,EAAQ,EAAK,MAAM,GACjB,EAAW,EAAb,OACE,EAAe,EAAjB,WACE,EAAyB,EAA3B,WAAc,EAAa,EAAf,SACZ,EAAA,EAAA,EAAA,GACC,GAAA,IACH,OAAS,SAAA,GACC,IAAA,EAAQ,EAAI,MACZ,EAAe,EAAI,eAAiB,EAAI,aAAe,CAAC,GACxD,EAAe,SAAA,GACjB,IAAM,EAAA,SAAA,OAAgB,EAAA,KAAA,OAAU,EAAA,KAAA,OAAa,GAC7C,OAAQ,EAAa,KAChB,EAAa,GAAQ,IAAI,GAAA,EAE5B,EAAa,EAAY,IACzB,EAAe,EAAY,SACzB,EAAS,EAAX,KAOQ,EAAA,EANqB,gBAAb,EAAI,KACpB,CAAC,EAAI,OACQ,WAAb,EAAI,KACA,CAAC,EAAI,MACL,EAAI,OAAO,OAAS,GAChB,CAAC,GAAiB,EAAY,GAAK,QAAO,SAAA,GAAA,OAAM,CAAA,IAAK,EAAI,QACzD,MANT,EAAA,EAAA,GAAM,EAAA,EAAA,GAOL,EAAW,EAAI,MAAc,OACnC,GAAI,EAAQ,GAAO,CACf,EAAW,QAAQ,GACnB,IAAM,EAAmB,WAAT,GAAqB,EAAK,SAAW,EAAQ,OAAS,GAAwB,EAAM,GAAY,KAC3G,GAAoB,QAAT,GACZ,EAAa,QAAQ,IAErB,GAAW,IA4H3C,SAA8B,EAAa,EAAQ,EAAS,GAoBxD,EAAO,QAAQ,SAnBf,SAA0B,GACtB,IAAM,EAAW,EAAY,EAAG,MAAQ,IACxC,SAAS,EAAW,GAChB,OAAc,MAAP,EAAc,EAAG,WAAW,GAAO,KAE9C,IAAM,EAAgB,SAAA,GAAA,OAAQ,EAAG,YAAc,EAAQ,GACjD,EAAI,SAAQ,SAAA,GAAA,OAAO,EAAS,OAAO,EAAA,IACnC,EAAS,OAAO,EAAA,GACrB,GAAW,GAAS,SAAQ,SAAC,EAAG,GAC7B,IAAM,EAAS,GAAW,EAAW,EAAQ,IACvC,EAAS,GAAW,EAAW,EAAQ,IACjB,IAAxB,GAAI,EAAQ,KACE,MAAV,GACA,EAAa,GACH,MAAV,GACA,EAAa,GAAA,MAIN,CApB3B,CA3HqD,EAAa,EAAQ,EAAS,EAAA,MAGtD,GAAI,EAAM,CACX,IAAM,EAAQ,CAAE,KAAM,EAAK,MAAO,GAAI,EAAK,OAC3C,EAAa,IAAI,GACjB,EAAW,IAAI,EAAA,MAGf,EAAW,IAAI,GACf,EAAa,IAAI,GACjB,EAAO,QAAQ,SAAQ,SAAA,GAAA,OAAO,EAAY,EAAI,MAAM,IAAI,EAAA,IAE5D,OAAO,EAAM,OAAO,GAAK,MAAM,SAAA,GAAA,OACvB,GAAsB,QAAb,EAAI,MAA+B,QAAb,EAAI,MACnC,EAAW,QAAQ,EAAI,SAE3B,EAAM,aAAe,GAAuB,EAAM,cAAgB,CAAC,EAAG,GAC/D,CAAA,OAIb,EAAW,SAAX,GAA8B,IAC5B,EAAI,EADwB,EAAA,EAAhB,MAAS,EAAA,EAAA,MAAO,EAAA,EAAA,MAEhC,MAAO,CACH,EACA,IAAI,GAAgC,QAAtB,EAAK,EAAM,aAAA,IAAmB,EAAgB,EAAK,EAAK,QAAgC,QAAtB,EAAK,EAAM,aAAA,IAAmB,EAAgB,EAAK,EAAK,SAAA,EAG1I,EAAkB,CACpB,IAAM,SAAA,GAAA,MAAQ,CAAC,EAAY,IAAI,GAAS,EAAI,KAAA,EAC5C,QAAU,SAAA,GAAA,MAAQ,CAAC,GAAY,IAAI,IAAW,QAAQ,EAAI,MAAA,EAC1D,MAAO,EACP,MAAO,EACP,WAAY,GAoFhB,OAlFA,EAAK,GAAiB,SAAQ,SAAA,GAC1B,EAAW,GAAU,SAAU,GAC3B,IAAQ,EAAW,GAAb,OACA,IAAgB,EAEhB,EADS,GAAkB,GAAK,IAAU,GAAkB,EAAQ,GAEpE,EAAI,OAAS,CAAC,EACd,EACN,GAAI,EAAa,CACP,IAAA,EAAe,SAAA,GACjB,IAAM,EAAA,SAAA,OAAgB,EAAA,KAAA,OAAU,EAAA,KAAA,OAAa,GAC7C,OAAQ,EAAO,KACV,EAAO,GAAQ,IAAI,GAAA,EAEtB,EAAa,EAAY,IACzB,EAAe,EAAY,SAC6B,EAAA,EAAxB,EAAgB,GAAQ,GAAA,GAAvD,EAAA,EAAA,GAAc,EAAA,EAAA,GAErB,GADA,EAAY,EAAa,MAAQ,IAAI,IAAI,IACpC,EAAa,aAAc,CAC5B,GAAe,UAAX,EAGC,CACD,IAAM,EAAyB,UAAX,GAChB,GACA,EAAI,QACJ,EAAM,MAAA,EAAA,EAAA,GACC,GAAA,IACH,QAAA,KAER,OAAO,EAAM,GAAQ,MAAM,KAAM,WAAW,MAAM,SAAA,GAC9C,GAAe,UAAX,EAAoB,CACpB,GAAI,GAAY,EAAI,OAChB,OAAO,EAAY,MAAK,SAAA,GAAA,IAAW,EAAA,EAAR,OAAA,OACvB,EAAW,QAAQ,GACZ,CAAA,IAGf,IAAM,EAAQ,EAAI,OACZ,EAAI,OAAO,IAAI,GACf,EAAI,OACN,EAAI,OACJ,EAAW,QAAQ,GAGnB,EAAa,QAAQ,EAAA,MAGxB,GAAe,eAAX,EAAyB,CAC9B,IAAM,EAAS,EACT,EAAa,EAAI,OACvB,OAAQ,GACJ,OAAO,OAAO,EAAQ,CAClB,IAAK,CACD,IAAG,kBACC,EAAa,OAAO,EAAO,YACpB,EAAO,GAAA,GAGtB,WAAY,CACR,IAAA,WACI,IAAM,EAAO,EAAO,WAEpB,OADA,EAAa,OAAO,GACb,CAAA,GAGf,MAAO,CACH,IAAG,kBACC,GAAc,EAAW,OAAO,EAAO,YAChC,EAAO,KAAA,KAKlC,OAAO,CAAA,IAtDX,EAAa,IAAI,EAAA,EA2D7B,OAAO,EAAM,GAAQ,MAAM,KAAM,UAAA,KAGlC,CAAA,MA0CvB,SAAS,GAAc,EAAK,GACxB,OAfJ,SAAsB,EAAK,GACvB,YAAO,IAAA,EAAM,QAEP,EAAM,UACF,GAAI,EAAK,EAAM,OAAS,EACxB,GAAI,EAAK,EAAM,QAAU,GALvC,CAewB,EAAK,IAR7B,SAAsB,EAAK,GACvB,YAAO,IAAA,EAAM,QAEP,EAAM,UACF,GAAI,EAAK,EAAM,OAAS,EACxB,GAAI,EAAK,EAAM,QAAU,GALvC,CAQoD,EAAK,EAAA,CAGzD,SAAS,GAAmB,EAAQ,EAAK,EAAK,EAAO,EAAY,GAC7D,IAAK,GAAsB,IAAf,EAAI,OACZ,OAAO,EACX,IAAM,EAAQ,EAAI,MAAM,MAElB,EADa,EAAM,OAAO,WACE,WAC5B,EAAe,EAAM,WACrB,GAAwB,EAAM,eAAiB,GAAO,WACxD,EAAc,EAAI,QAAO,SAAC,EAAQ,GAClC,IAAI,EAAgB,EACd,EAA6B,QAAZ,EAAG,MAA8B,QAAZ,EAAG,KACzC,EAAG,OAAO,QAAQ,SAAA,GAAA,OAAM,GAAc,EAAa,GAAI,EAAI,MAAM,MAAA,IAAQ,KAAI,SAAA,GAAA,OAC3E,EAAI,EAAU,GACV,GACA,OAAO,OAAO,GACX,CAAA,IAET,GACN,OAAQ,EAAG,MACP,IAAK,MACD,EAAgB,EAAO,OAAO,EAAI,OAC5B,EACA,EAAe,KAAK,SAAA,GAAA,OAAM,EAAe,EAAA,KAC/C,MACJ,IAAK,MACD,IAAM,GAAS,IAAI,IAAW,QAAQ,EAAG,OAAO,KAAK,SAAA,GAAA,OAAM,EAAe,EAAA,KAC1E,EAAgB,EACX,QAAQ,SAAA,GACT,IAAM,EAAM,EAAI,OAAS,EAAe,GAAQ,EAChD,OAAQ,GAAc,IAAI,GAAS,GAAM,EAAA,IAExC,OAAO,EAAI,OACV,EACA,EAAe,KAAK,SAAA,GAAA,OAAM,EAAe,EAAA,KAC/C,MACJ,IAAK,SACD,IAAM,GAAe,IAAI,IAAW,QAAQ,EAAG,MAC/C,EAAgB,EAAO,QAAQ,SAAA,GAC3B,IAAM,EAAM,EAAI,OAAS,EAAe,GAAQ,EAChD,OAAQ,GAAc,IAAI,GAAS,GAAM,EAAA,IAE7C,MACJ,IAAK,cACD,IAAM,EAAQ,EAAG,MACjB,EAAgB,EAAO,QAAQ,SAAA,GAAA,OAAU,GAAc,EAAe,GAAO,EAAA,IAGrF,OAAO,CAAA,GACR,GACH,OAAI,IAAgB,EACT,GACX,EAAY,MAAK,SAAC,EAAG,GAAA,OAAM,GAAI,EAAqB,GAAI,EAAqB,KACzE,GAAI,EAAe,GAAI,EAAe,GAAA,IACtC,EAAI,OAAS,EAAI,MAAQ,MACrB,EAAY,OAAS,EAAI,MACzB,EAAY,OAAS,EAAI,MAEpB,EAAO,SAAW,EAAI,OAAS,EAAY,OAAS,EAAI,QAC7D,EAAW,OAAA,IAGZ,EAAY,OAAO,OAAO,GAAe,EAAA,CAGpD,SAAS,GAAe,EAAI,GACxB,OAAoC,IAA5B,GAAI,EAAG,MAAO,EAAG,QACO,IAA5B,GAAI,EAAG,MAAO,EAAG,UACf,EAAG,aAAgB,EAAG,aACtB,EAAG,aAAgB,EAAG,SAAA,CA6FhC,IAAM,GAAkB,CACpB,MAAO,SACP,MAAO,EACP,KAAM,QACN,OAAS,SAAA,GACL,IAAM,EAAS,EAAK,OAAO,KACrB,EAAA,EAAA,EAAA,GACC,GAAA,IACH,YAAa,SAAC,EAAQ,EAAM,GACxB,IAAM,EAAW,EAAK,YAAY,EAAQ,EAAM,GAChD,GAAa,cAAT,EAAsB,CAChB,IAAA,EAAK,IAAI,gBACP,EAAW,EAAb,OACA,EAAkB,SAAA,GAAA,OAAiB,WAErC,GADA,EAAG,QACU,cAAT,EAAsB,CACtB,IACwB,EADlB,EAAsB,IAAI,IAChC,EAAA,EAAwB,GAAA,IAAxB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAgC,KAArB,EAAA,EAAA,MACD,EAAW,GAAA,SAAA,OAAe,EAAA,KAAA,OAAU,IACpC,EAAQ,EAAK,MAAM,GACzB,GAAI,EAAU,CACV,IAAM,EAAM,EAAS,cAAc,QAAQ,SAAA,GAAA,OAAO,EAAG,QAAU,CAAA,IAC/D,GAAI,EAAI,OAAS,EAAG,CAChB,EAAS,cAAgB,EAAS,cAAc,QAAQ,SAAA,GAAA,OAAO,EAAG,QAAU,CAAA,IAC5E,IAAK,IAAL,EAAA,EAAA,EAAsB,OAAO,OAAO,EAAS,QAAQ,OAAA,EAAA,EAAA,OAAA,IAAA,CAAhD,IAC2B,EADrB,EAAA,EAAA,GAAA,EAAA,EACa,EAAQ,SAAA,IAA5B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MACI,KADO,EAAA,EAAA,MACP,GAAiB,MAAb,EAAM,KACN,EAAS,aAET,GAAI,IAAiB,EAAM,MAAO,CAC9B,IAAM,EAAgB,OAAO,SAAS,EAAM,KACtC,EAAS,GAAmB,EAAM,IAAK,EAAM,IAAK,EAAK,EAAO,EAAO,GACvE,EAAM,OACN,GAAa,EAAS,GACtB,EAAM,YAAY,SAAS,SAAA,GAAA,OAAY,EAAoB,IAAI,EAAA,KAE1D,IAAW,EAAM,MACtB,EAAM,IAAM,EACZ,EAAM,QAAU,GAAa,QAAQ,CAAE,OAAQ,IAAA,MAI/C,EAAM,OACN,GAAa,EAAS,GAE1B,EAAM,YAAY,SAAS,SAAA,GAAA,OAAY,EAAoB,IAAI,EAAA,WAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,KAQ3F,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,CAAA,EAAoB,SAAS,SAAA,GAAA,OAAY,GAAA,OAGjD,EAAS,iBAAiB,QAAS,GAAA,GAAuB,CACtD,OAAA,IAEJ,EAAS,iBAAiB,QAAS,GAAA,GAAuB,CACtD,OAAA,IAEJ,EAAS,iBAAiB,WAAY,GAAA,GAAsB,CACxD,OAAA,GAAA,CAGR,OAAO,CAAA,EAEX,MAAA,SAAM,GACF,IAAM,EAAY,EAAK,MAAM,GACvB,EAAU,EAAU,OAAO,WAC3B,EAAA,EAAA,EAAA,GACC,GAAA,IACH,OAAA,SAAO,GACH,GAAI,EAAQ,UACwB,aAAhC,GAAI,MAAM,GAAG,SAAS,MAEtB,OAAO,EAAU,OAAO,GAE5B,IAAM,EAAW,GAAA,SAAA,OAAe,EAAA,KAAA,OAAU,IAC1C,IAAK,EACD,OAAO,EAAU,OAAO,GAC5B,IAAM,EAAU,EAAU,OAAO,GA2BjC,MA1BkB,QAAb,EAAI,MAA+B,QAAb,EAAI,QAAoB,EAAI,OAAO,QAAU,IAAM,GAAiB,EAAS,GAAK,MAAK,SAAA,GAAA,OAAc,MAAP,CAAA,MAmBrH,EAAS,cAAc,KAAK,GAC5B,GAAwB,EAAI,cAC5B,EAAQ,OAAM,WACV,GAAa,EAAS,cAAe,GACrC,GAAwB,EAAI,aAAA,KAtBhC,EAAQ,MAAM,SAAA,GACV,IAAM,EAAA,EAAA,EAAA,GACC,GAAA,IACH,OAAQ,EAAI,OAAO,KAAI,SAAC,EAAO,GAC3B,IAAM,EAAe,EAAQ,QAAQ,SAAS,KACxC,EAAU,GAAA,EAAA,GAEL,GAGX,OADA,EAAa,EAAc,EAAQ,QAAS,EAAI,QAAQ,IACjD,CAAA,MAGf,EAAS,cAAc,KAAK,GAC5B,gBAAe,kBAAM,GAAwB,EAAI,aAAA,OAWlD,CAAA,EAEX,MAAA,SAAM,GACF,IAAK,GAAkB,GAAK,KAAe,GAAkB,QAAS,GAClE,OAAO,EAAU,MAAM,GACrB,IAAA,EAAgD,cAAhC,GAAI,MAAM,GAAG,SAAS,MAAA,EAChB,GAApB,EAAA,EAAF,QAAW,EAAA,EAAF,OACf,EAzKxB,SAA6B,EAAQ,EAAW,EAAM,GAClD,IAAM,EAAW,GAAA,SAAA,OAAe,EAAA,KAAA,OAAU,IAC1C,IAAK,EACD,MAAO,GACX,IAAM,EAAU,EAAS,QAAQ,GACjC,IAAK,EACD,MAAO,CAAC,MAAM,EAAO,EAAU,MACnC,IACM,EAAU,GADE,EAAI,MAAQ,EAAI,MAAM,MAAM,KAAO,OAChB,IACrC,IAAK,EACD,MAAO,CAAC,MAAM,EAAO,EAAU,MACnC,OAAQ,GACJ,IAAK,QACD,IAAM,EAAa,EAAQ,MAAM,SAAA,GAAA,OAAU,EAAM,IAAI,QAAU,EAAI,OAC/D,EAAM,IAAI,SAAW,EAAI,QACzB,GAAe,EAAM,IAAI,MAAM,MAAO,EAAI,MAAM,MAAA,IACpD,OAAI,EACO,CACH,GAAA,EAEA,EACA,GAQD,CANY,EAAQ,MAAM,SAAA,GAAA,OACf,UAAW,EAAM,IAAM,EAAM,IAAI,MAAQ,MACtC,EAAI,SAChB,EAAI,QAAS,EAAM,IAAI,SA/B5C,SAAsB,EAAI,GACtB,OAjCJ,SAAuB,EAAQ,EAAQ,EAAY,GAC/C,QAAI,IAAA,EACA,YAAO,IAAA,GAAwB,EAAI,EACvC,QAAI,IAAA,EACA,OAAO,EACX,IAAM,EAAI,GAAI,EAAQ,GACtB,GAAU,IAAN,EAAS,CACT,GAAI,GAAc,EACd,OAAO,EACX,GAAI,EACA,OAAO,EACX,GAAI,EACA,OAAQ,EAEhB,OAAO,CAAA,CAdX,CAiC0B,EAAG,MAAO,EAAG,MAAO,EAAG,UAAW,EAAG,YAAc,GAjB7E,SAAuB,EAAQ,EAAQ,EAAY,GAC/C,QAAI,IAAA,EACA,YAAO,IAAA,EAAuB,EAAI,EACtC,QAAI,IAAA,EACA,OAAQ,EACZ,IAAM,EAAI,GAAI,EAAQ,GACtB,GAAU,IAAN,EAAS,CACT,GAAI,GAAc,EACd,OAAO,EACX,GAAI,EACA,OAAQ,EACZ,GAAI,EACA,OAAO,EAEf,OAAO,CAAA,CAdX,CAkBsB,EAAG,MAAO,EAAG,MAAO,EAAG,UAAW,EAAG,YAAc,EA8BrD,CAAa,EAAM,IAAI,MAAM,MAAO,EAAI,MAAM,MAAA,OAE3B,EAAU,GACzC,IAAK,QACD,IAAM,EAAa,EAAQ,MAAM,SAAA,GAAA,OAAU,GAAe,EAAM,IAAI,MAAM,MAAO,EAAI,MAAM,MAAA,IAC3F,MAAO,CAAC,IAAc,EAAY,EAAU,GAAA,CAhCxD,CAyKgG,EAAQ,EAAW,QAAS,GAAA,EAAA,EAAA,EAAA,GAA/F,EAAA,EAAA,GAAY,EAAA,EAAA,GAAY,EAAA,EAAA,GAAU,EAAA,EAAA,GACvC,GAAI,GAAc,EACd,EAAW,OAAS,EAAI,WAEvB,CACD,IAAM,EAAU,EAAU,MAAM,GAAK,MAAM,SAAA,GACvC,IAAM,EAAS,EAAI,OAEnB,GADA,EAAW,IAAM,EACb,EAAe,CACf,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,IAAK,EACxC,OAAO,OAAO,EAAO,IAEzB,OAAO,OAAO,EAAA,MAGd,EAAI,OAAS,EAAU,GAE3B,OAAO,CAAA,IACR,OAAM,SAAA,GAAA,OACD,GAAa,GACb,GAAa,EAAW,GACrB,QAAQ,OAAO,EAAA,IAE1B,EAAa,CACT,OAAQ,EAAI,OACZ,QAAA,EACA,YAAa,IAAI,IACjB,KAAM,QACN,IAAA,EACA,OAAA,GAEA,EACA,EAAU,KAAK,IAGf,EAAY,CAAC,GACR,IACD,EAAW,GAAA,SAAA,OAAe,EAAA,KAAA,OAAU,IAAe,CAC/C,QAAS,CACL,MAAO,CAAC,EACR,MAAO,CAAC,GAEZ,KAAM,IAAI,IACV,cAAe,GACf,gBAAiB,CAAC,IAG1B,EAAS,QAAQ,MAAM,EAAI,MAAM,MAAM,MAAQ,IAAM,EAAA,CAI7D,OAxLxB,SAA+B,EAAY,EAAW,EAAS,GAC3D,EAAW,YAAY,IAAI,GAC3B,EAAO,iBAAiB,SAAS,WAC7B,EAAW,YAAY,OAAO,GACM,IAAhC,EAAW,YAAY,MAKnC,SAA0B,EAAY,GAClC,YAAW,WAC6B,IAAhC,EAAW,YAAY,MACvB,GAAa,EAAW,EAAA,GAE7B,KALP,CAJ6B,EAAY,EAAA,IAkLjB,CAAsB,EAAY,EAAW,EAAS,GAC/C,EAAW,QAAQ,MAAM,SAAA,GAAA,MACrB,CACH,OAAQ,GAAmB,EAAI,OAAQ,EAAK,MAAA,OAAA,EAAoD,EAAS,cAAe,EAAW,EAAY,GAAA,OAK/J,OAAO,CAAA,IAGf,OAAO,CAAA,GAIf,SAAS,GAAO,EAAQ,GACpB,OAAO,IAAI,MAAM,EAAQ,CACrB,IAAG,SAAC,EAAQ,EAAM,GAAA,MACD,OAAT,EACO,EACJ,QAAQ,IAAI,EAAQ,EAAM,EAAA,IAK7C,IA8UI,GA9UE,GAAA,WACF,SAAA,EAAY,EAAM,GAAA,IAAA,EAAA,KAAA,EAAA,KAAA,GACd,KAAK,aAAe,CAAC,EACrB,KAAK,MAAQ,EACb,IAAM,EAAO,EAAQ,aACrB,KAAK,SAAW,EAAA,EAAA,CACZ,OAAQ,EAAQ,OAChB,UAAA,EACA,UAAW,EAAK,UAChB,YAAa,EAAK,YAClB,MAAO,UACJ,GAEP,KAAK,MAAQ,CACT,UAAW,EAAQ,UACnB,YAAa,EAAQ,aAEzB,IAAQ,EAAY,EAAd,OACN,KAAK,UAAY,CAAC,EAClB,KAAK,UAAY,GACjB,KAAK,YAAc,GACnB,KAAK,WAAa,CAAC,EACnB,KAAK,MAAQ,KACb,KAAK,OAAS,KACd,IAjxF6B,EAixFvB,EAAQ,CACV,YAAa,KACb,eAAA,EACA,kBAAmB,KACnB,cAAA,EACA,eAAgB,GAChB,eAAgB,KAChB,WAAY,GACZ,cAAe,KACf,YAAA,EACA,eAAgB,GAEpB,EAAM,eAAiB,IAAI,IAAa,SAAA,GACpC,EAAM,eAAiB,CAAA,IAE3B,EAAM,cAAgB,IAAI,IAAa,SAAC,EAAG,GACvC,EAAM,WAAa,CAAA,IAEvB,KAAK,OAAS,EACd,KAAK,KAAO,EACZ,KAAK,GAAK,GAAO,KAAM,WAAY,UAAW,gBAAiB,QAAS,CAAE,MAAO,CAAC,GAAiB,MACnG,KAAK,GAAG,MAAM,UAAY,EAAS,KAAK,GAAG,MAAM,WAAW,SAAA,GAAA,OACjD,SAAC,EAAY,GAChB,EAAQ,KAAI,WACR,IAAM,EAAQ,EAAK,OACnB,GAAI,EAAM,aACD,EAAM,aACP,GAAa,UAAU,KAAK,GAC5B,GACA,EAAU,QAEb,GAAI,EAAM,kBACX,EAAM,kBAAkB,KAAK,GACzB,GACA,EAAU,OAEb,CACD,EAAU,GACV,IAAM,EAAK,EACN,GACD,GAAU,SAAS,IACf,EAAG,GAAG,MAAM,YAAY,GACxB,EAAG,GAAG,MAAM,YAAY,EAAA,YAMhD,KAAK,YAj0FwB,EAi0FiB,KAh0F3C,GAAqB,GAAW,WAAW,SAAoB,EAAa,GAC/E,KAAK,GAAK,EACV,IAAI,EAAW,GAAU,EAAQ,KACjC,GAAI,EACA,IACI,EAAW,GAAA,CAEf,MAAO,GACH,EAAQ,CAAA,CAEhB,IAAM,EAAW,EAAY,KACvB,EAAQ,EAAS,MACjB,EAAc,EAAM,KAAK,QAAQ,KACvC,KAAK,KAAO,CACR,MAAO,EACP,MAAO,EAAS,MAChB,WAAa,EAAS,OAAU,EAAM,OAAO,QAAQ,SAAW,EAAS,QAAU,EAAM,OAAO,QAAQ,KACxG,MAAO,EACP,UAAA,EACA,IAAK,OACL,OAAQ,GACR,UAAW,KACX,OAAQ,KACR,aAAc,KACd,WAAA,EACA,QAAS,KACT,OAAQ,EACR,MAAO,IACP,MAAO,EACP,GAAI,EAAS,GACb,YAAa,IAAgB,GAAS,EAAc,UAmyFxD,KAAK,MAxxGb,SAAgC,GAC5B,OAAO,GAAqB,GAAM,WAAW,SAAe,EAAM,EAAa,GAC3E,KAAK,GAAK,EACV,KAAK,IAAM,EACX,KAAK,KAAO,EACZ,KAAK,OAAS,EACd,KAAK,KAAO,EAAG,WAAW,GAAQ,EAAG,WAAW,GAAM,KAAO,GAAO,KAAM,CACtE,SAAY,CAAC,GAAmB,IAChC,QAAW,CAAC,GAAmB,IAC/B,SAAY,CAAC,GAAmB,IAChC,SAAY,CAAC,GAAmB,KAAA,IAV5C,CAwxG4C,MACpC,KAAK,YA1wEb,SAAsC,GAClC,OAAO,GAAqB,GAAY,WAAW,SAAqB,EAAM,EAAY,EAAU,EAA6B,GAAA,IAAA,EAAA,KAC7H,KAAK,GAAK,EACV,KAAK,KAAO,EACZ,KAAK,WAAa,EAClB,KAAK,OAAS,EACd,KAAK,4BAA8B,EACnC,KAAK,SAAW,KAChB,KAAK,GAAK,GAAO,KAAM,WAAY,QAAS,SAC5C,KAAK,OAAS,GAAU,KACxB,KAAK,QAAA,EACL,KAAK,UAAY,EACjB,KAAK,cAAgB,GACrB,KAAK,SAAW,KAChB,KAAK,QAAU,KACf,KAAK,YAAc,KACnB,KAAK,cAAgB,KACrB,KAAK,WAAa,EAClB,KAAK,YAAc,IAAI,IAAa,SAAC,EAAS,GAC1C,EAAK,SAAW,EAChB,EAAK,QAAU,CAAA,IAEnB,KAAK,YAAY,MAAK,WAClB,EAAK,QAAA,EACL,EAAK,GAAG,SAAS,MAAA,IAClB,SAAA,GACC,IAAI,EAAY,EAAK,OAMrB,OALA,EAAK,QAAA,EACL,EAAK,GAAG,MAAM,KAAK,GACnB,EAAK,OACD,EAAK,OAAO,QAAQ,GACpB,GAAa,EAAK,UAAY,EAAK,SAAS,QACzC,GAAU,EAAA,OAhC7B,CA0wEwD,MAChD,KAAK,QA1/Cb,SAAkC,GAC9B,OAAO,GAAqB,GAAQ,WAAW,SAAiB,GAC5D,KAAK,GAAK,EACV,KAAK,KAAO,CACR,QAAS,EACT,aAAc,KACd,SAAU,CAAC,EACX,OAAQ,CAAC,EACT,eAAgB,SAR5B,CA0/CgD,MACxC,KAAK,YA58Eb,SAAsC,GAClC,OAAO,GAAqB,GAAY,WAAW,SAAqB,EAAO,EAAO,GAYlF,GAXA,KAAK,GAAK,EACV,KAAK,KAAO,CACR,MAAO,EACP,MAAiB,QAAV,EAAkB,KAAO,EAChC,GAAI,GAER,KAAK,KAAO,KAAK,WAAa,GAC9B,KAAK,YAAc,SAAC,EAAG,GAAA,OAAM,GAAI,EAAG,EAAA,EACpC,KAAK,KAAO,SAAC,EAAG,GAAA,OAAM,GAAI,EAAG,GAAK,EAAI,EAAI,CAAA,EAC1C,KAAK,KAAO,SAAC,EAAG,GAAA,OAAM,GAAI,EAAG,GAAK,EAAI,EAAI,CAAA,EAC1C,KAAK,aAAe,EAAG,MAAM,aACxB,KAAK,aACN,MAAM,IAAI,GAAW,UAAA,IAdjC,CA48EwD,MAChD,KAAK,GAAG,iBAAiB,SAAA,GACjB,EAAG,WAAa,EAChB,QAAQ,KAAA,iDAAA,OAAsD,EAAK,KAAA,6CAEnE,QAAQ,KAAA,gDAAA,OAAqD,EAAK,KAAA,oDACtE,EAAK,MAAM,CAAE,iBAAA,IACb,EAAK,OAAO,cAAA,CAAe,IAE/B,KAAK,GAAG,WAAW,SAAA,IACV,EAAG,YAAc,EAAG,WAAa,EAAG,WACrC,QAAQ,KAAA,iBAAA,OAAsB,EAAK,KAAA,mBAEnC,QAAQ,KAAA,YAAA,OAAiB,EAAK,KAAA,kDAAA,OAAqD,EAAG,WAAa,QAE3G,KAAK,QAAU,GAAU,EAAQ,aACjC,KAAK,mBAAqB,SAAC,EAAM,EAAY,EAAU,GAAA,OAAsB,IAAI,EAAK,YAAY,EAAM,EAAY,EAAU,EAAK,SAAS,4BAA6B,EAAA,EACzK,KAAK,eAAiB,SAAA,GAClB,EAAK,GAAG,WAAW,KAAK,GACxB,GACK,QAAO,SAAA,GAAA,OAAK,EAAE,OAAS,EAAK,MAAQ,IAAM,IAAS,EAAE,OAAO,OAAA,IAC5D,KAAI,SAAA,GAAA,OAAK,EAAE,GAAG,iBAAiB,KAAK,EAAA,KAE7C,KAAK,IAAI,IACT,KAAK,IAAI,IACT,KAAK,IAAI,IACT,KAAK,IAAI,IACT,KAAK,IAAI,IACT,IAAM,EAAQ,IAAI,MAAM,KAAM,CAC1B,IAAK,SAAC,EAAG,EAAM,GACX,GAAa,SAAT,EACA,OAAO,EACX,GAAa,UAAT,EACA,OAAQ,SAAA,GAAA,OAAc,GAAO,EAAK,MAAM,GAAY,EAAA,EACxD,IAAM,EAAK,QAAQ,IAAI,EAAG,EAAM,GAChC,OAAI,aAAc,GACP,GAAO,EAAI,GACT,WAAT,EACO,EAAG,KAAI,SAAA,GAAA,OAAK,GAAO,EAAG,EAAA,IACpB,uBAAT,EACO,WAEH,OAAO,GADI,EAAG,MAAM,KAAM,WACR,EAAA,EAEnB,CAAA,IAGf,KAAK,IAAM,EACX,EAAO,SAAQ,SAAA,GAAA,OAAS,EAAM,EAAA,IA+LP,OA7L3B,EAAA,EAAA,EAAA,IAAA,UAAA,MAAA,SAAQ,GACJ,GAAI,MAAM,IAAkB,EAAgB,GACxC,MAAM,IAAI,GAAW,KAAK,0CAE9B,GADA,EAAgB,KAAK,MAAsB,GAAhB,GAAsB,GAC7C,KAAK,OAAS,KAAK,OAAO,cAC1B,MAAM,IAAI,GAAW,OAAO,4CAChC,KAAK,MAAQ,KAAK,IAAI,KAAK,MAAO,GAClC,IAAM,EAAW,KAAK,UAClB,EAAkB,EAAS,QAAO,SAAA,GAAA,OAAK,EAAE,KAAK,UAAY,CAAA,IAAe,GAC7E,OAAI,IAEJ,EAAkB,IAAI,KAAK,QAAQ,GACnC,EAAS,KAAK,GACd,EAAS,KAAK,IACd,EAAgB,OAAO,CAAC,GACxB,KAAK,OAAO,YAAA,EACL,EAAA,GAEX,CAAA,IAAA,aAAA,MAAA,SAAW,GAAA,IAAA,EAAA,KACP,OAAQ,KAAK,QAAU,KAAK,OAAO,cAAgB,GAAI,YAAc,KAAK,MAAS,IAAO,IAAI,IAAa,SAAC,EAAS,GACjH,GAAI,EAAK,OAAO,aACZ,OAAO,EAAO,IAAI,GAAW,eAAe,EAAK,OAAO,cAE5D,IAAK,EAAK,OAAO,cAAe,CAC5B,IAAK,EAAK,SAAS,SAEf,YADA,EAAO,IAAI,GAAW,gBAG1B,EAAK,OAAO,MAAM,GAAA,CAEtB,EAAK,OAAO,eAAe,KAAK,EAAS,EAAA,IAC1C,KAAK,EAAA,GAEZ,CAAA,IAAA,MAAA,MAAA,SAAA,GAA4B,IAAtB,EAAA,EAAF,MAAS,EAAA,EAAF,OAAU,EAAA,EAAF,MAAS,EAAA,EAAF,KAClB,GACA,KAAK,MAAM,CAAE,MAAA,EAAO,KAAA,IACxB,IAAM,EAAc,KAAK,aAAa,KAAW,KAAK,aAAa,GAAS,IAG5E,OAFA,EAAY,KAAK,CAAE,MAAA,EAAO,OAAA,EAAQ,MAAgB,MAAT,EAAgB,GAAK,EAAO,KAAA,IACrE,EAAY,MAAK,SAAC,EAAG,GAAA,OAAM,EAAE,MAAQ,EAAE,KAAA,IAChC,IAAA,GAEX,CAAA,IAAA,QAAA,MAAA,SAAA,GAAqB,IAAb,EAAA,EAAF,MAAS,EAAA,EAAF,KAAQ,EAAA,EAAF,OAMf,OALI,GAAS,KAAK,aAAa,KAC3B,KAAK,aAAa,GAAS,KAAK,aAAa,GAAO,QAAO,SAAA,GAAA,OAAM,EAAS,EAAG,SAAW,IACpF,GAAO,EAAG,OAAS,CAAA,KAGpB,IAAA,GAEX,CAAA,IAAA,OAAA,MAAA,eAAA,EAAA,KACI,OAAO,GAAO,IACd,kBA/zCR,SAAmB,GACT,IAAA,EAAQ,EAAG,OACT,EAAc,EAAG,MAAnB,UACN,GAAI,EAAM,eAAiB,EAAG,MAC1B,OAAO,EAAM,eAAe,MAAK,kBAAM,EAAM,YACzC,GAAU,EAAM,aAChB,CAAA,IACR,KAAU,EAAM,cAAc,aAAe,MAC7C,EAAM,eAAA,EACN,EAAM,YAAc,KACpB,EAAM,cAAA,EACN,IAAM,EAAgB,EAAM,cAC5B,SAAS,IACL,GAAI,EAAM,gBAAkB,EACxB,MAAM,IAAI,GAAW,eAAe,2BAE5C,IAAI,EAAiB,EAAM,eAC3B,EAAqB,KAAM,GAAA,EAC3B,OAAO,GAAa,KAAK,CAAC,GAAqC,oBAAd,UAA4B,GAAa,UAAY,MAAY,MAAK,kBAAM,IAAI,IAAa,SAAC,EAAS,GAEhJ,GADA,KACK,EACD,MAAM,IAAI,GAAW,WACzB,IAAM,EAAS,EAAG,KACZ,EAAM,EAAM,WACd,EAAU,KAAK,GACf,EAAU,KAAK,EAAQ,KAAK,MAAiB,GAAX,EAAG,QACzC,IAAK,EACD,MAAM,IAAI,GAAW,WACzB,EAAI,QAAU,GAAmB,GACjC,EAAI,UAAY,GAAK,EAAG,gBACxB,EAAI,gBAAkB,IAAK,SAAA,GAEvB,GADA,EAAqB,EAAI,YACrB,EAAM,aAAe,EAAG,SAAS,aAAc,CAC/C,EAAI,QAAU,GACd,EAAmB,QACnB,EAAI,OAAO,QACX,IAAM,EAAS,EAAU,eAAe,GACxC,EAAO,UAAY,EAAO,QAAU,IAAK,WACrC,EAAO,IAAI,GAAW,eAAA,YAAA,OAA2B,EAAA,0BAGpD,CACD,EAAmB,QAAU,GAAmB,GAChD,IAAI,EAAS,EAAE,WAAa,KAAK,IAAI,EAAG,IAAM,EAAI,EAAE,WACpD,EAAa,EAAS,EACtB,EAAG,MAAQ,EAAI,OACf,GAAa,EAAI,EAAS,GAAI,EAAoB,EAAA,IAEvD,GACH,EAAI,UAAY,IAAK,WACjB,EAAqB,KACrB,IAriCa,EAqiCP,EAAQ,EAAG,MAAQ,EAAI,OACvB,EAAmB,EAAM,EAAM,kBACrC,GAAI,EAAiB,OAAS,EAC1B,IACI,IAAM,EAAW,EAAM,YAxiCd,KADJ,EAyiCkD,GAxiCzD,OAAe,EAAW,GAAK,EAwiC6C,YACtE,EAAM,WAnblC,SAA0B,EAAI,EAAO,GACjC,EAAG,MAAQ,EAAM,QAAU,GAC3B,IAAM,EAAe,EAAG,UAAY,GAAkB,EAAI,EAAO,GACjE,EAAG,YAAc,EAAM,EAAM,iBAAkB,GAC/C,GAAc,EAAI,CAAC,EAAG,YAAa,EAAK,GAAe,EAAA,CAJ3D,CAob6C,EAAI,EAAO,IAE5B,GAA2B,EAAI,EAAG,UAAW,GAhbzE,SAA+B,EAAI,GAC/B,IACM,EAAO,GADW,GAAkB,EAAI,EAAG,MAAO,GACZ,EAAG,WAC/C,QAAS,EAAK,IAAI,QAAU,EAAK,OAAO,MAAK,SAAA,GAAA,OAAM,EAAG,IAAI,QAAU,EAAG,OAAO,MAAA,KAHlF,CAibuD,EAAI,IAC3B,QAAQ,KAAK,uHAGrB,GAAyB,EAAI,EAAA,CAEjC,MAAO,GAAA,CAEX,GAAY,KAAK,GACjB,EAAM,gBAAkB,IAAK,SAAA,GACzB,EAAM,SAAA,EACN,EAAG,GAAG,iBAAiB,KAAK,EAAA,IAEhC,EAAM,QAAU,IAAK,SAAA,GACjB,EAAG,GAAG,SAAS,KAAK,EAAA,IAEpB,GA1UpB,SAAA,EAAwD,GAAA,IAA1B,EAAA,EAAF,UAAa,EAAA,EAAF,aAClC,GAAmB,IAv0EL,cAw0EX,GACA,GAAgB,EAAW,GAAa,IAAI,CAAE,KAAA,IAAQ,MAAM,GAAA,CAHpE,CA2UuC,EAAG,MAAO,GACjC,GAAA,GACD,EAAA,SACD,MAAK,kBACX,IACA,EAAM,kBAAoB,GACnB,GAAa,QAAQ,IAAI,kBAAM,EAAG,GAAG,MAAM,KAAK,EAAG,IAAA,KAAO,MAAK,SAAS,IAC3E,GAAI,EAAM,kBAAkB,OAAS,EAAG,CACpC,IAAI,EAAa,EAAM,kBAAkB,OAAO,GAAiB,IAEjE,OADA,EAAM,kBAAoB,GACnB,GAAa,QAAQ,IAAI,kBAAM,EAAW,EAAG,IAAA,KAAO,KAAK,EAAA,QAGzE,SAAQ,WACH,EAAM,gBAAkB,IACxB,EAAM,kBAAoB,KAC1B,EAAM,eAAA,EAAgB,IAE3B,OAAM,SAAA,GACL,EAAM,YAAc,EACpB,IACI,GAAsB,EAAmB,OAAA,CAE7C,MAAO,GAAA,CAIP,OAHI,IAAkB,EAAM,eACxB,EAAG,SAEA,GAAU,EAAA,IAClB,SAAQ,WACP,EAAM,cAAA,EACN,GAAA,IACD,MAAK,WACJ,GAAI,EAAY,CACZ,IAAM,EAAa,CAAC,EACpB,EAAG,OAAO,SAAQ,SAAA,GACd,EAAM,OAAO,QAAQ,SAAQ,SAAA,GACrB,EAAI,OACJ,EAAA,SAAA,OAAoB,EAAG,KAAA,KAAA,OAAQ,EAAM,KAAA,KAAA,OAAQ,EAAI,OAAU,IAAI,IAAA,IAAoB,CAAC,CAAC,UAE7F,EAAA,SAAA,OAAoB,EAAG,KAAA,KAAA,OAAQ,EAAM,KAAA,MAAW,EAAA,SAAA,OAAoB,EAAG,KAAA,KAAA,OAAQ,EAAM,KAAA,WAAgB,IAAI,IAAA,IAAoB,CAAC,CAAC,SAEnI,GAx0C6B,kBAw0CkB,KAAK,GACpD,GAAqB,GAAA,EAAY,CAErC,OAAO,CAAA,IAssCD,CAAU,EAAA,MAEpB,CAAA,IAAA,SAAA,MAAA,WACI,IAAM,EAAQ,KAAK,OACb,EAAM,GAAY,QAAQ,MAGhC,GAFI,GAAO,GACP,GAAY,OAAO,EAAK,GACxB,KAAK,MAAO,CACZ,IACI,KAAK,MAAM,OAAA,CAEf,MAAO,GAAA,CACP,KAAK,MAAQ,KAEjB,EAAM,eAAiB,IAAI,IAAa,SAAA,GACpC,EAAM,eAAiB,CAAA,IAE3B,EAAM,cAAgB,IAAI,IAAa,SAAC,EAAG,GACvC,EAAM,WAAa,CAAA,MAG3B,CAAA,IAAA,QAAA,MAAA,WAA+C,IAAvC,GAAuC,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAnB,CAAE,iBAAA,IAAxB,gBACF,KAAK,SACL,IAAM,EAAQ,KAAK,OACf,IACA,KAAK,SAAS,UAAA,GAClB,EAAM,YAAc,IAAI,GAAW,eAC/B,EAAM,eACN,EAAM,WAAW,EAAM,YAAA,GAE/B,CAAA,IAAA,SAAA,MAAA,eAAA,EAAA,KACU,EAAe,UAAU,OAAS,EAClC,EAAQ,KAAK,OACnB,OAAO,IAAI,IAAa,SAAC,EAAS,GAC9B,IAAM,EAAW,WACb,EAAK,MAAM,CAAE,iBAAA,IACb,IAAI,EAAM,EAAK,MAAM,UAAU,eAAe,EAAK,MACnD,EAAI,UAAY,IAAK,YA7lDrC,SAAA,EAAwD,GAAA,IAA1B,EAAA,EAAF,UAAa,EAAA,EAAF,aAClC,GAAmB,IA50EL,cA60EX,GACA,GAAgB,EAAW,GAAa,OAAO,GAAM,MAAM,GAAA,CAHnE,CA8lDuC,EAAK,MAAO,EAAK,MACpC,GAAA,IAEJ,EAAI,QAAU,GAAmB,GACjC,EAAI,UAAY,EAAK,cAAA,EAEzB,GAAI,EACA,MAAM,IAAI,GAAW,gBAAgB,wCACrC,EAAM,cACN,EAAM,eAAe,KAAK,GAG1B,GAAA,MAIZ,CAAA,IAAA,YAAA,MAAA,WACI,OAAO,KAAK,KAAA,GAEhB,CAAA,IAAA,SAAA,MAAA,WACI,OAAsB,OAAf,KAAK,KAAA,GAEhB,CAAA,IAAA,gBAAA,MAAA,WACI,IAAM,EAAc,KAAK,OAAO,YAChC,OAAO,GAAqC,mBAArB,EAAY,IAAA,GAEvC,CAAA,IAAA,YAAA,MAAA,WACI,OAAmC,OAA5B,KAAK,OAAO,WAAA,GAEvB,CAAA,IAAA,oBAAA,MAAA,WACI,OAAO,KAAK,OAAO,UAAA,GAEnB,CAAA,IAAA,SAAA,IAAA,eAAA,EAAA,KACA,OAAO,EAAK,KAAK,YAAY,KAAI,SAAA,GAAA,OAAQ,EAAK,WAAW,EAAA,MAE7D,CAAA,IAAA,cAAA,MAAA,WACI,IAAM,EAAO,GAAuB,MAAM,KAAM,WAChD,OAAO,KAAK,aAAa,MAAM,KAAM,EAAA,GAEzC,CAAA,IAAA,eAAA,MAAA,SAAa,EAAM,EAAQ,GAAA,IAAA,EAAA,KACnB,EAAoB,GAAI,MACvB,GAAqB,EAAkB,KAAO,OAA+B,IAAvB,EAAK,QAAQ,OACpE,EAAoB,MACxB,IAEI,EAAS,EAFP,GAA0C,IAAvB,EAAK,QAAQ,KACtC,EAAO,EAAK,QAAQ,IAAK,IAAI,QAAQ,IAAK,IAE1C,IAOI,GANA,EAAa,EAAO,KAAI,SAAA,GACpB,IAAI,EAAY,aAAiB,EAAK,MAAQ,EAAM,KAAO,EAC3D,GAAyB,iBAAd,EACP,MAAM,IAAI,UAAU,mFACxB,OAAO,CAAA,IAEC,KAAR,GA79HC,aA69Hc,EACf,EA99HC,eA+9HA,IAAY,MAAR,GA99HH,aA89HmB,EAGrB,MAAM,IAAI,GAAW,gBAAgB,6BAA+B,GAFpE,EA/9HE,YAk+HN,GAAI,EAAmB,CACnB,GAp+HC,aAo+HG,EAAkB,MAn+HpB,cAm+HyC,EAAuB,CAC9D,IAAI,EAIA,MAAM,IAAI,GAAW,eAAe,0FAHpC,EAAoB,KAKxB,GACA,EAAW,SAAQ,SAAA,GACf,GAAI,IAA0E,IAArD,EAAkB,WAAW,QAAQ,GAAmB,CAC7E,IAAI,EAIA,MAAM,IAAI,GAAW,eAAe,SAAW,EAC3C,wCAJJ,EAAoB,SAQhC,GAAoB,IAAsB,EAAkB,SAC5D,EAAoB,OAIhC,MAAO,GACH,OAAO,EACH,EAAkB,SAAS,MAAM,SAAC,EAAG,GAAa,EAAO,EAAA,IACzD,GAAU,EAAA,CAElB,IAAM,EAAmB,GAAsB,KAAK,KAAM,KAAM,EAAS,EAAY,EAAmB,GACxG,OAAQ,EACJ,EAAkB,SAAS,EAAS,EAAkB,QACtD,GAAI,MACA,GAAO,GAAI,WAAW,kBAAM,EAAK,WAAW,EAAA,IAC5C,KAAK,WAAW,EAAA,GAE5B,CAAA,IAAA,QAAA,MAAA,SAAM,GACF,IAAK,EAAO,KAAK,WAAY,GACzB,MAAM,IAAI,GAAW,aAAA,SAAA,OAAsB,EAAA,oBAE/C,OAAO,KAAK,WAAW,EAAA,KAAA,CAAA,CA3TzB,GA+TA,GAAqC,oBAAX,QAA0B,eAAgB,OACpE,OAAO,WACP,eACA,GAAA,WACF,SAAA,EAAY,GAAA,EAAA,KAAA,GACR,KAAK,WAAa,CAAA,CAMX,OAJX,EAAA,EAAA,EAAA,IAAA,YAAA,MAAA,SAAU,EAAG,EAAO,GAChB,OAAO,KAAK,WAAY,GAAkB,mBAAN,EAAkD,EAA/B,CAAE,KAAM,EAAG,MAAA,EAAO,SAAA,GAAA,GAE7E,CAAA,IAAC,GAAA,MAAD,WACI,OAAO,IAAA,KAAA,CAAA,CART,GAaN,IACI,GAAU,CACN,UAAW,EAAQ,WAAa,EAAQ,cAAgB,EAAQ,iBAAmB,EAAQ,YAC3F,YAAa,EAAQ,aAAe,EAAQ,kBAAA,CAGpD,MAAO,GACH,GAAU,CAAE,UAAW,KAAM,YAAa,MAG9C,SAAS,GAAU,GACf,IACI,EADA,GAAA,EAEE,EAAa,IAAI,IAAY,SAAA,GAC/B,IAkBI,EAlBE,EAAmB,GAAgB,GAiBrC,GAAA,EAEA,EAAY,CAAC,EACb,EAAa,CAAC,EACZ,EAAe,CACb,aACA,OAAO,CAAA,EAEX,YAAa,WACL,IAEJ,GAAA,EACI,GACA,EAAgB,QAChB,GACA,GAAa,eAAe,YAAY,GAAA,GAGpD,EAAS,OAAS,EAAS,MAAM,GACjC,IAAI,GAAA,EAIE,EAAoB,SAAA,GACtB,GAAuB,EAAW,GAH3B,GAAe,EAAY,IAK9B,GAAA,EAGF,EAAU,SAAV,IACF,IAAI,GACC,GAAQ,UADb,CAKA,EAAY,CAAC,EACb,IAAM,EAAS,CAAC,EACZ,GACA,EAAgB,QACpB,EAAkB,IAAI,gBACtB,IAAM,EAAM,CACR,OAAA,EACA,OAAQ,EAAgB,OACxB,QAAS,EACT,QAAA,EACA,MAAO,MAEL,EA/DV,SAAiB,GACb,IAAM,EAAc,KACpB,IACQ,GACA,KAEJ,IAAM,EAAK,GAAS,EAAS,GAI7B,OAHI,GACA,EAAG,QAAQ,IAER,CAAA,CAEX,QACI,GAAe,IAAA,EAbvB,CA+DwB,GACpB,QAAQ,QAAQ,GAAK,MAAM,SAAA,GACvB,GAAA,EACA,EAAe,EACX,GAAU,EAAI,OAAO,UAGzB,EAAY,CAAC,EA5nK7B,SAAuB,GACnB,IAAK,IAAM,KAAK,EACZ,GAAI,EAAO,EAAG,GACV,OAAO,EACf,OAAO,EAJX,CA6nKgB,EAAa,IACsB,IAC/B,GAvwFqB,iBAuwF0B,GAC/C,GAAA,GAEJ,EAAS,MAAQ,EAAS,KAAK,GAAA,IAC/B,SAAA,GAEA,GADA,GAAA,GACK,CAAC,sBAAuB,cAAc,SAAS,MAAA,OAAA,EAA0C,EAAI,MAAO,CACrG,GAAI,EACA,OACJ,EAAS,OAAS,EAAS,MAAM,EAAA,IAjC/B,CAiC+B,EAK7C,OADA,IACO,CAAA,IAIX,OAFA,EAAW,SAAW,kBAAM,CAAA,EAC5B,EAAW,SAAW,kBAAM,CAAA,EACrB,CAAA,CAGX,IAAM,GAAQ,GAiId,SAAS,GAAiB,GACtB,IAAI,EAAQ,GACZ,IACI,IAAA,EACA,GAAa,eAAe,KAAK,GACjC,GAAqB,GAAA,EAAa,CAEtC,QACI,GAAqB,CAAA,EAxI7B,EAAM,GAAA,EAAA,EAAA,GACC,IAAA,IACH,OAAO,SAAA,GAAA,OACQ,IAAI,GAAM,EAAc,CAAE,OAAQ,KACnC,QAAA,EAEd,OAAO,SAAA,GAAA,OACI,IAAI,GAAM,EAAM,CAAE,OAAQ,KAAM,OAAO,MAAK,SAAA,GAAA,OAC/C,EAAG,SAAA,CACI,IACR,MAAM,uBAAuB,mBAAM,KAE1C,iBAAA,SAAiB,GACb,IACI,OA91DZ,SAAA,GAAuC,IAAX,EAAA,EAAF,UAAa,EAAA,EAAF,YACjC,OAAO,GAAmB,GACpB,QAAQ,QAAQ,EAAU,aAAa,MAAM,SAAA,GAAA,OAAU,EACpD,KAAK,SAAA,GAAA,OAAS,EAAK,IAAA,IACnB,QAAQ,SAAA,GAAA,MAn0EF,cAm0EW,CAAA,OACpB,GAAgB,EAAW,GAAa,eAAe,aAAA,CALjE,CA81DoC,GAAM,cAAc,KAAK,EAAA,CAErD,MAAO,GACH,OAAO,GAAU,IAAI,GAAW,WAAA,GAGxC,YAAW,kBACP,SAAe,GACX,EAAO,KAAM,EAAA,GAIrB,kBAAkB,SAAA,GAAA,OACP,GAAI,MACP,GAAO,GAAI,UAAW,GACtB,GAAA,EAER,IAAA,GACA,MAAO,SAAU,GACb,OAAO,WACH,IACI,IAAI,EAAK,GAAc,EAAY,MAAM,KAAM,YAC/C,OAAK,GAAyB,mBAAZ,EAAG,KAEd,EADI,GAAa,QAAQ,EAAA,CAGpC,MAAO,GACH,OAAO,GAAU,EAAA,IAI7B,MAAO,SAAU,EAAa,EAAM,GAChC,IACI,IAAI,EAAK,GAAc,EAAY,MAAM,EAAM,GAAQ,KACvD,OAAK,GAAyB,mBAAZ,EAAG,KAEd,EADI,GAAa,QAAQ,EAAA,CAGpC,MAAO,GACH,OAAO,GAAU,EAAA,GAGzB,mBAAoB,CAChB,IAAK,kBAAM,GAAI,OAAS,OAE5B,QAAS,SAAU,EAAmB,GAClC,IAAM,EAAU,GAAa,QAAqC,mBAAtB,EACxC,GAAM,kBAAkB,GACxB,GACC,QAAQ,GAAmB,KAChC,OAAO,GAAI,MACP,GAAI,MAAM,QAAQ,GAClB,CAAA,EAER,QAAS,GACT,MAAO,CACH,IAAK,kBAAM,EAAA,EACX,IAAK,SAAA,GACD,GAAS,EAAiB,UAAV,EAAoB,mBAAM,EAAO,GAAA,GAGzD,OAAQ,EACR,OAAQ,EACR,MAAO,EACP,SAAU,EACV,OAAQ,GACR,GAAI,GACJ,UAAA,GACA,uBAAA,GACA,aAAc,EACd,aAAc,EACd,aA1wKJ,SAAsB,EAAK,GACA,iBAAZ,EACP,EAAa,EAAK,OAAA,GACb,WAAY,GACjB,GAAG,IAAI,KAAK,GAAS,SAAU,GAC3B,EAAa,EAAK,OAAA,EAAI,KAswK9B,aAAc,EACd,UAAW,EACX,cAAe,GACf,IAAA,GACA,KAAM,EACN,QAAA,IACA,OAAQ,GACR,YAAa,GACb,SAAU,GACV,aAAc,GACd,MAAA,GACA,OA1vIkB,iBA2vIlB,QA3vIkB,iBA2vIK,MAAM,KACxB,KAAI,SAAA,GAAA,OAAK,SAAS,EAAA,IAClB,QAAO,SAAC,EAAG,EAAG,GAAA,OAAM,EAAK,EAAI,KAAK,IAAI,GAAQ,EAAJ,EAAA,OAEnD,GAAM,OAAS,GAAU,GAAM,aAAa,aAEf,oBAAlB,eAA6D,oBAArB,mBAC/C,GAt4FqC,kBAs4FU,SAAA,GAEvC,IAAI,EADH,KAEG,IACA,EAAQ,SAAS,YAAY,gBACvB,gBA14FiB,yBA04F+B,EAAY,GAGlE,EAAQ,IAAI,YA74FW,qBA64FiC,CACpD,OAAQ,IAGhB,IAAA,EACA,cAAc,GACd,IAAA,EAAqB,IAG7B,iBAt5FmC,sBAs5Fc,SAAA,GAAG,IAAA,EAAA,EAAA,OAC3C,IACD,GAAiB,EAAA,KAe7B,IAAI,IAAA,EAEJ,GAAgC,oBAArB,iBAAkC,CACzC,IAAM,GAAK,IAAI,iBA16FoB,sBA26FX,mBAAb,GAAG,OACV,GAAG,QAEP,GA/6FqC,kBA+6FW,SAAA,GACvC,IACD,GAAG,YAAY,EAAA,IAGvB,GAAG,UAAa,SAAA,GACR,EAAG,MACH,GAAiB,EAAG,KAAA,OAG3B,GAAoB,oBAAT,MAA6C,oBAAd,UAA2B,CACtE,GA17FqC,kBA07FW,SAAA,GAC5C,IACS,KAC2B,oBAAjB,cACP,aAAa,QA77FM,qBA67FkC,KAAK,UAAU,CAChE,KAAM,KAAK,SACX,aAAA,KAGuB,iBAApB,KAAc,SACrB,EAAI,KAAc,QAAE,SAAS,CAAE,qBAAA,KAA8B,SAAS,SAAA,GAAA,OAAW,EAAO,YAAY,CAChG,KAp8Fe,qBAq8Ff,aAAA,GAAA,KAKhB,MAAO,GAAA,KAEqB,oBAArB,kBACP,iBAAiB,WAAY,SAAA,GACzB,GA98F2B,uBA88FvB,EAAG,IAAwC,CAC3C,IAAM,EAAO,KAAK,MAAM,EAAG,UACvB,GACA,GAAiB,EAAK,aAAA,KAItC,IAAM,GAAc,KAAK,UAAY,UAAU,cAC3C,IACA,GAAY,iBAAiB,WAGrC,SAAA,GAAmC,IAAA,EAAA,EAAF,KACzB,GA39F+B,uBA29FvB,EAAK,MACb,GAAiB,EAAK,aAAA,IAI9B,GAAa,gBA9mKb,SAAkB,EAAU,GACxB,IAAK,GAAY,aAAoB,IAAc,aAAoB,WAAa,aAAoB,cAAgB,EAAS,OAAS,GAAa,EAAS,MAC5J,OAAO,EACX,IAAI,EAAK,IAAI,GAAa,EAAS,MAAM,GAAW,EAAS,QAAS,GAMtE,MALI,UAAW,GACX,EAAQ,EAAI,QAAS,CAAE,IAAK,WACpB,OAAO,KAAK,MAAM,KAAA,IAGvB,CAAA,EAsmKX,GAAS,GAAO,IC7gLhB,IAAI,GAAgB,SAAS,EAAG,GAI9B,OAHA,GAAgB,OAAO,gBAClB,CAAE,UAAW,cAAgB,OAAS,SAAU,EAAG,GAAK,EAAE,UAAY,CAAG,GAC1E,SAAU,EAAG,GAAK,IAAK,IAAI,KAAK,EAAO,OAAO,UAAU,eAAe,KAAK,EAAG,KAAI,EAAE,GAAK,EAAE,GAAI,EAC7F,GAAc,EAAG,EAC1B,EAEO,SAAS,GAAU,EAAG,GAC3B,GAAiB,oBAAN,GAA0B,OAAN,EAC3B,MAAM,IAAI,UAAU,uBAAyB,OAAO,GAAK,iCAE7D,SAAS,IAAO,KAAK,YAAc,CAAG,CADtC,GAAc,EAAG,GAEjB,EAAE,UAAkB,OAAN,EAAa,OAAO,OAAO,IAAM,EAAG,UAAY,EAAE,UAAW,IAAI,EACjF,CAqFO,SAAS,GAAU,EAAS,EAAY,EAAG,GAEhD,OAAO,IAAK,IAAM,EAAI,WAAU,SAAU,EAAS,GAC/C,SAAS,EAAU,GAAS,IAAM,EAAK,EAAU,KAAK,GAAS,CAAE,MAAO,GAAK,EAAO,EAAI,CAAE,CAC1F,SAAS,EAAS,GAAS,IAAM,EAAK,EAAiB,MAAE,GAAS,CAAE,MAAO,GAAK,EAAO,EAAI,CAAE,CAC7F,SAAS,EAAK,GAJlB,IAAe,EAIa,EAAO,KAAO,EAAQ,EAAO,QAJ1C,EAIyD,EAAO,MAJhD,aAAiB,EAAI,EAAQ,IAAI,GAAE,SAAU,GAAW,EAAQ,EAAQ,KAIjB,KAAK,EAAW,EAAW,CAC7G,GAAM,EAAY,EAAU,MAAM,EAAS,GAAc,KAAK,OAClE,GACF,CAEO,SAAS,GAAY,EAAS,GACnC,IAAsG,EAAG,EAAG,EAAG,EAA3G,EAAI,CAAE,MAAO,EAAG,KAAM,WAAa,GAAW,EAAP,EAAE,GAAQ,MAAM,EAAE,GAAI,OAAO,EAAE,EAAI,EAAG,KAAM,GAAI,IAAK,IAChG,OAAO,EAAI,CAAE,KAAM,EAAK,GAAI,MAAS,EAAK,GAAI,OAAU,EAAK,IAAwB,oBAAX,SAA0B,EAAE,OAAO,UAAY,WAAa,OAAO,IAAM,GAAI,EACvJ,SAAS,EAAK,GAAK,OAAO,SAAU,GAAK,OACzC,SAAc,GACV,GAAI,EAAG,MAAM,IAAI,UAAU,mCAC3B,KAAO,IAAM,EAAI,EAAG,EAAG,KAAO,EAAI,IAAK,OACnC,GAAI,EAAI,EAAG,IAAM,EAAY,EAAR,EAAG,GAAS,EAAU,OAAI,EAAG,GAAK,EAAS,SAAO,EAAI,EAAU,SAAM,EAAE,KAAK,GAAI,GAAK,EAAE,SAAW,EAAI,EAAE,KAAK,EAAG,EAAG,KAAK,KAAM,OAAO,EAE3J,OADI,EAAI,EAAG,IAAG,EAAK,CAAS,EAAR,EAAG,GAAQ,EAAE,QACzB,EAAG,IACP,KAAK,EAAG,KAAK,EAAG,EAAI,EAAI,MACxB,KAAK,EAAc,OAAX,EAAE,QAAgB,CAAE,MAAO,EAAG,GAAI,MAAM,GAChD,KAAK,EAAG,EAAE,QAAS,EAAI,EAAG,GAAI,EAAK,CAAC,GAAI,SACxC,KAAK,EAAG,EAAK,EAAE,IAAI,MAAO,EAAE,KAAK,MAAO,SACxC,QACI,KAAkB,GAAZ,EAAI,EAAE,MAAY,OAAS,GAAK,EAAE,EAAE,OAAS,MAAkB,IAAV,EAAG,IAAsB,IAAV,EAAG,IAAW,CAAE,EAAI,EAAG,QAAU,CAC3G,GAAc,IAAV,EAAG,MAAc,GAAM,EAAG,GAAK,EAAE,IAAM,EAAG,GAAK,EAAE,IAAM,CAAE,EAAE,MAAQ,EAAG,GAAI,KAAO,CACrF,GAAc,IAAV,EAAG,IAAY,EAAE,MAAQ,EAAE,GAAI,CAAE,EAAE,MAAQ,EAAE,GAAI,EAAI,EAAI,KAAO,CACpE,GAAI,GAAK,EAAE,MAAQ,EAAE,GAAI,CAAE,EAAE,MAAQ,EAAE,GAAI,EAAE,IAAI,KAAK,GAAK,KAAO,CAC9D,EAAE,IAAI,EAAE,IAAI,MAChB,EAAE,KAAK,MAAO,SAEtB,EAAK,EAAK,KAAK,EAAS,EAC5B,CAAE,MAAO,GAAK,EAAK,CAAC,EAAG,GAAI,EAAI,CAAG,CAAE,QAAU,EAAI,EAAI,CAAG,CACzD,GAAY,EAAR,EAAG,GAAQ,MAAM,EAAG,GAAI,MAAO,CAAE,MAAO,EAAG,GAAK,EAAG,QAAK,EAAQ,MAAM,EAC9E,CAtBgD,CAAK,CAAC,EAAG,GAAK,CAAG,CAuBnE,CAE6B,OAAO,OAgB7B,SAAS,GAAS,GACvB,IAAI,EAAsB,oBAAX,QAAyB,OAAO,SAAU,EAAI,GAAK,EAAE,GAAI,EAAI,EAC5E,GAAI,EAAG,OAAO,EAAE,KAAK,GACrB,GAAI,GAAyB,kBAAb,EAAE,OAAqB,MAAO,CAC1C,KAAM,WAEF,OADI,GAAK,GAAK,EAAE,SAAQ,OAAI,GACrB,CAAE,MAAO,GAAK,EAAE,KAAM,MAAO,EACxC,GAEJ,MAAM,IAAI,UAAU,EAAI,0BAA4B,kCACtD,CAEO,SAAS,GAAO,EAAG,GACxB,IAAI,EAAsB,oBAAX,QAAyB,EAAE,OAAO,UACjD,IAAK,EAAG,OAAO,EACf,IAAmB,EAAY,EAA3B,EAAI,EAAE,KAAK,GAAO,EAAK,GAC3B,IACI,WAAc,IAAN,GAAgB,KAAM,MAAQ,EAAI,EAAE,QAAQ,MAAM,EAAG,KAAK,EAAE,MACxE,CACA,MAAO,GAAS,EAAI,CAAE,MAAO,EAAS,CAAC,QAEnC,IACQ,IAAM,EAAE,OAAS,EAAI,EAAU,SAAI,EAAE,KAAK,EAClD,CAAC,QACS,GAAI,EAAG,MAAM,EAAE,KAAO,CACpC,CACA,OAAO,CACT,CAkBO,SAAS,GAAc,EAAI,EAAM,GACtC,GAAI,GAA6B,IAArB,UAAU,OAAc,IAAK,IAA4B,EAAxB,EAAI,EAAG,EAAI,EAAK,OAAY,EAAI,EAAG,KACxE,GAAQ,KAAK,IACR,IAAI,EAAK,MAAM,UAAU,MAAM,KAAK,EAAM,EAAG,IAClD,EAAG,GAAK,EAAK,IAGrB,OAAO,EAAG,OAAO,GAAM,MAAM,UAAU,MAAM,KAAK,GACpD,CAEO,SAAS,GAAQ,GACtB,OAAO,gBAAgB,IAAW,KAAK,EAAI,EAAG,MAAQ,IAAI,GAAQ,EACpE,CAEO,SAAS,GAAiB,EAAS,EAAY,GACpD,IAAK,OAAO,cAAe,MAAM,IAAI,UAAU,wCAC/C,IAAoD,EAAhD,EAAI,EAAU,MAAM,EAAS,GAAc,IAAQ,EAAI,GAC3D,OAAO,EAAI,CAAC,EAAG,EAAK,QAAS,EAAK,SAAU,EAAK,UAAW,EAAE,OAAO,eAAiB,WAAc,OAAO,IAAM,EAAG,EACpH,SAAS,EAAK,GAAS,EAAE,KAAI,EAAE,GAAK,SAAU,GAAK,OAAO,IAAI,SAAQ,SAAU,EAAG,GAAK,EAAE,KAAK,CAAC,EAAG,EAAG,EAAG,IAAM,GAAK,EAAO,EAAG,EAAI,GAAI,EAAG,CACzI,SAAS,EAAO,EAAG,GAAK,KACxB,SAAc,GAAK,EAAE,iBAAiB,GAAU,QAAQ,QAAQ,EAAE,MAAM,GAAG,KAAK,EAAS,GAAU,EAAO,EAAE,GAAG,GAAI,EAAI,CADzF,CAAK,EAAE,GAAG,GAAK,CAAE,MAAO,GAAK,EAAO,EAAE,GAAG,GAAI,EAAI,CAAE,CAEjF,SAAS,EAAQ,GAAS,EAAO,OAAQ,EAAQ,CACjD,SAAS,EAAO,GAAS,EAAO,QAAS,EAAQ,CACjD,SAAS,EAAO,EAAG,GAAS,EAAE,GAAI,EAAE,QAAS,EAAE,QAAQ,EAAO,EAAE,GAAG,GAAI,EAAE,GAAG,GAAK,CACnF,CAQO,SAAS,GAAc,GAC5B,IAAK,OAAO,cAAe,MAAM,IAAI,UAAU,wCAC/C,IAAiC,EAA7B,EAAI,EAAE,OAAO,eACjB,OAAO,EAAI,EAAE,KAAK,IAAM,EAAqC,GAAS,GAA2B,EAAI,CAAC,EAAG,EAAK,QAAS,EAAK,SAAU,EAAK,UAAW,EAAE,OAAO,eAAiB,WAAc,OAAO,IAAM,EAAG,GAC9M,SAAS,EAAK,GAAK,EAAE,GAAK,EAAE,IAAM,SAAU,GAAK,OAAO,IAAI,SAAQ,SAAU,EAAS,IACvF,SAAgB,EAAS,EAAQ,EAAG,GAAK,QAAQ,QAAQ,GAAG,MAAK,SAAS,GAAK,EAAQ,CAAE,MAAO,EAAG,KAAM,GAAM,GAAG,EAAS,EADb,CAAO,EAAS,GAA7B,EAAI,EAAE,GAAG,IAA8B,KAAM,EAAE,MAAQ,GAAI,CAAG,CAEjK,CAOyB,OAAO,OAyDkB,oBAApB,iBAAiC,gBCvTzD,SAAU,GAAW,GACzB,MAAwB,oBAAV,CAChB,CCGM,SAAU,GAAoB,GAClC,IAKM,EAAW,GALF,SAAC,GACd,MAAM,KAAK,GACX,EAAS,OAAQ,IAAI,OAAQ,KAC/B,IAKA,OAFA,EAAS,UAAY,OAAO,OAAO,MAAM,WACzC,EAAS,UAAU,YAAc,EAC1B,CACT,CCDO,IAAM,GAA+C,IAC1D,SAAC,GACC,gBAA4C,GAC1C,EAAO,MACP,KAAK,QAAU,EACR,EAAO,OAAM,4CACxB,EAAO,KAAI,SAAC,EAAK,GAAM,OAAG,EAAI,EAAC,KAAK,EAAI,UAAjB,IAA+B,KAAK,QACnD,GACJ,KAAK,KAAO,sBACZ,KAAK,OAAS,CAChB,CARA,ICfE,SAAU,GAAa,EAA6B,GACxD,GAAI,EAAK,CACP,IAAM,EAAQ,EAAI,QAAQ,GAC1B,GAAK,GAAS,EAAI,OAAO,EAAO,GAEpC,CCOA,IAAA,GAAA,WAyBE,SAAA,EAAoB,GAAA,KAAA,gBAAA,EAdb,KAAA,QAAS,EAER,KAAA,WAAmD,KAMnD,KAAA,YAAqD,IAMV,CA4JrD,OApJE,EAAA,UAAA,YAAA,uBACM,EAEJ,IAAK,KAAK,OAAQ,CAChB,KAAK,QAAS,EAGN,IAAA,EAAe,KAAI,WAC3B,GAAI,EAEF,GADA,KAAK,WAAa,KACd,MAAM,QAAQ,OAChB,IAAqB,IAAA,EAAA,GAAA,GAAU,EAAA,EAAA,QAAA,EAAA,KAAA,EAAA,EAAA,OAAE,CAAhB,EAAA,MACR,OAAO,6GAGhB,EAAW,OAAO,MAId,IAAiB,EAAqB,KAAI,gBAClD,GAAI,GAAW,GACb,IACE,IACA,MAAO,GACP,EAAS,aAAa,GAAsB,EAAE,OAAS,CAAC,GAIpD,IAAA,EAAgB,KAAI,YAC5B,GAAI,EAAa,CACf,KAAK,YAAc,SACnB,IAAwB,IAAA,EAAA,GAAA,GAAW,EAAA,EAAA,QAAA,EAAA,KAAA,EAAA,EAAA,OAAE,CAAhC,IAAM,EAAS,EAAA,MAClB,IACE,GAAc,GACd,MAAO,GACP,EAAe,OAAN,QAAM,IAAN,EAAA,EAAU,GACf,aAAe,GACjB,EAAM,GAAA,GAAA,GAAA,GAAO,IAAM,GAAK,EAAI,SAE5B,EAAO,KAAK,uGAMpB,GAAI,EACF,MAAM,IAAI,GAAoB,GAGpC,EAoBA,EAAA,UAAA,IAAA,SAAI,SAGF,GAAI,GAAY,IAAa,KAC3B,GAAI,KAAK,OAGP,GAAc,OACT,CACL,GAAI,aAAoB,EAAc,CAGpC,GAAI,EAAS,QAAU,EAAS,WAAW,MACzC,OAEF,EAAS,WAAW,OAErB,KAAK,YAA8B,QAAhB,EAAA,KAAK,mBAAW,IAAA,EAAA,EAAI,IAAI,KAAK,GAGvD,EAOQ,EAAA,UAAA,WAAR,SAAmB,GACT,IAAA,EAAe,KAAI,WAC3B,OAAO,IAAe,GAAW,MAAM,QAAQ,IAAe,EAAW,SAAS,EACpF,EASQ,EAAA,UAAA,WAAR,SAAmB,GACT,IAAA,EAAe,KAAI,WAC3B,KAAK,WAAa,MAAM,QAAQ,IAAe,EAAW,KAAK,GAAS,GAAc,EAAa,CAAC,EAAY,GAAU,CAC5H,EAMQ,EAAA,UAAA,cAAR,SAAsB,GACZ,IAAA,EAAe,KAAI,WACvB,IAAe,EACjB,KAAK,WAAa,KACT,MAAM,QAAQ,IACvB,GAAU,EAAY,EAE1B,EAgBA,EAAA,UAAA,OAAA,SAAO,GACG,IAAA,EAAgB,KAAI,YAC5B,GAAe,GAAU,EAAa,GAElC,aAAoB,GACtB,EAAS,cAAc,KAE3B,EAlLc,EAAA,MAAS,WACrB,IAAM,EAAQ,IAAI,EAElB,OADA,EAAM,QAAS,EACR,CACT,CAJuB,GAmLzB,EArLA,GAuLa,GAAqB,GAAa,MAEzC,SAAU,GAAe,GAC7B,OACE,aAAiB,IAChB,GAAS,WAAY,GAAS,GAAW,EAAM,SAAW,GAAW,EAAM,MAAQ,GAAW,EAAM,YAEzG,CAEA,SAAS,GAAc,GACjB,GAAW,GACb,IAEA,EAAU,aAEd,CChNO,IAAM,GAAuB,CAClC,iBAAkB,KAClB,sBAAuB,KACvB,aAAS,EACT,uCAAuC,EACvC,0BAA0B,GCGf,GAAmC,CAG9C,WAAU,SAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,MAAC,KAAD,UAAA,QAAA,EAAA,SAAA,kBAAA,EAAA,UAAA,EAAA,CAAA,GAAV,SAAW,EAAqB,OAAkB,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,GAAA,UAAA,GACxC,IAAA,EAAa,GAAe,SACpC,OAAY,OAAR,QAAQ,IAAR,OAAQ,EAAR,EAAU,YACL,EAAS,WAAU,MAAnB,EAAQ,GAAA,CAAY,EAAS,GAAO,GAAK,KAE3C,WAAU,WAAC,EAAD,GAAC,CAAA,EAAS,GAAO,GAAK,IACzC,IACA,aAAY,SAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,MAAC,KAAD,UAAA,QAAA,EAAA,SAAA,kBAAA,EAAA,UAAA,EAAA,CAAA,GAAZ,SAAa,GACH,IAAA,EAAa,GAAe,SACpC,QAAgB,OAAR,QAAQ,IAAR,OAAQ,EAAR,EAAU,eAAgB,cAAc,EAClD,IACA,cAAU,GCjBN,SAAU,GAAqB,GACnC,GAAgB,YAAW,WACjB,IAAA,EAAqB,GAAM,iBACnC,IAAI,EAKF,MAAM,EAHN,EAAiB,EAKrB,GACF,CCtBM,SAAU,KAAS,CCMlB,IAAM,GAA+B,GAAmB,SAAK,OAAW,GA0BzE,SAAU,GAAmB,EAAuB,EAAY,GACpE,MAAO,CACL,KAAI,EACJ,MAAK,EACL,MAAK,EAET,CCrCA,IAAI,GAAuD,KASrD,SAAU,GAAa,GAC3B,GAAI,GAAO,sCAAuC,CAChD,IAAM,GAAU,GAKhB,GAJI,IACF,GAAU,CAAE,aAAa,EAAO,MAAO,OAEzC,IACI,EAAQ,CACJ,IAAA,EAAyB,GAAvB,EAAW,EAAA,YAAE,EAAK,EAAA,MAE1B,GADA,GAAU,KACN,EACF,MAAM,QAMV,GAEJ,CCVA,IAAA,GAAA,SAAA,GA6BE,SAAA,EAAY,GAAZ,IAAA,EACE,EAAA,KAAA,OAAO,YATC,EAAA,WAAqB,EAUzB,GACF,EAAK,YAAc,EAGf,GAAe,IACjB,EAAY,IAAI,IAGlB,EAAK,YAAc,IAEvB,CA2EF,OApHmC,GAAA,EAAA,GAgB1B,EAAA,OAAP,SAAiB,EAAwB,EAA2B,GAClE,OAAO,IAAI,GAAe,EAAM,EAAO,EACzC,EAgCA,EAAA,UAAA,KAAA,SAAK,GACC,KAAK,UACP,GFjDA,SAA8B,GAClC,OAAO,GAAmB,IAAK,OAAO,EACxC,CE+CgC,CAAiB,GAAQ,MAEnD,KAAK,MAAM,EAEf,EASA,EAAA,UAAA,MAAA,SAAM,GACA,KAAK,UACP,GFxEG,GAAmB,SAAK,EEwEiB,GAAM,OAElD,KAAK,WAAY,EACjB,KAAK,OAAO,GAEhB,EAQA,EAAA,UAAA,SAAA,WACM,KAAK,UACP,GAA0B,GAAuB,OAEjD,KAAK,WAAY,EACjB,KAAK,YAET,EAEA,EAAA,UAAA,YAAA,WACO,KAAK,SACR,KAAK,WAAY,EACjB,EAAA,UAAM,YAAW,KAAC,MAClB,KAAK,YAAc,KAEvB,EAEU,EAAA,UAAA,MAAV,SAAgB,GACd,KAAK,YAAY,KAAK,EACxB,EAEU,EAAA,UAAA,OAAV,SAAiB,GACf,IACE,KAAK,YAAY,MAAM,GACvB,QACA,KAAK,cAET,EAEU,EAAA,UAAA,UAAV,WACE,IACE,KAAK,YAAY,WACjB,QACA,KAAK,cAET,EACF,CAAA,CApHA,CAAmC,IA2H7B,GAAQ,SAAS,UAAU,KAEjC,SAAS,GAAyC,EAAQ,GACxD,OAAO,GAAM,KAAK,EAAI,EACxB,CAMA,IAAA,GAAA,WACE,SAAA,EAAoB,GAAA,KAAA,gBAAA,CAAwC,CAoC9D,OAlCE,EAAA,UAAA,KAAA,SAAK,GACK,IAAA,EAAoB,KAAI,gBAChC,GAAI,EAAgB,KAClB,IACE,EAAgB,KAAK,GACrB,MAAO,GACP,GAAqB,GAG3B,EAEA,EAAA,UAAA,MAAA,SAAM,GACI,IAAA,EAAoB,KAAI,gBAChC,GAAI,EAAgB,MAClB,IACE,EAAgB,MAAM,GACtB,MAAO,GACP,GAAqB,QAGvB,GAAqB,EAEzB,EAEA,EAAA,UAAA,SAAA,WACU,IAAA,EAAoB,KAAI,gBAChC,GAAI,EAAgB,SAClB,IACE,EAAgB,WAChB,MAAO,GACP,GAAqB,GAG3B,EACF,CAAA,CArCA,GAuCA,GAAA,SAAA,GACE,SAAA,EACE,EACA,EACA,GAHF,IAOM,EAWE,EAlBR,EAKE,EAAA,KAAA,OAAO,KAGH,GAAW,KAAoB,EAGjC,EAAkB,CAChB,KAAqB,OAAd,QAAc,IAAd,EAAA,OAAkB,EACzB,MAAY,OAAL,QAAK,IAAL,EAAA,OAAS,EAChB,SAAkB,OAAR,QAAQ,IAAR,EAAA,OAAY,GAKpB,GAAQ,GAAO,2BAIjB,EAAU,OAAO,OAAO,IAChB,YAAc,WAAM,OAAA,EAAK,aAAL,EAC5B,EAAkB,CAChB,KAAM,EAAe,MAAQ,GAAK,EAAe,KAAM,GACvD,MAAO,EAAe,OAAS,GAAK,EAAe,MAAO,GAC1D,SAAU,EAAe,UAAY,GAAK,EAAe,SAAU,KAIrE,EAAkB,SAMtB,EAAK,YAAc,IAAI,GAAiB,IAC1C,CACF,OAzCuC,GAAA,EAAA,GAyCvC,CAAA,CAzCA,CAAuC,IA2CvC,SAAS,GAAqB,GDvMxB,IAAuB,ECwMvB,GAAO,uCDxMgB,ECyMZ,EDxMX,GAAO,uCAAyC,KAClD,GAAQ,aAAc,EACtB,GAAQ,MAAQ,IC0MhB,GAAqB,EAEzB,CAiBA,SAAS,GAA0B,EAA2C,GACpE,IAAA,EAA0B,GAAM,sBACxC,GAAyB,GAAgB,YAAW,WAAM,OAAA,EAAsB,EAAc,EAApC,GAC5D,CAOO,IAAM,GAA6D,CACxE,QAAQ,EACR,KAAM,GACN,MAtBF,SAA6B,GAC3B,MAAM,CACR,EAqBE,SAAU,IC5QC,GAAwD,oBAAX,QAAyB,OAAO,YAAe,eCoCnG,SAAU,GAAY,GAC1B,OAAO,CACT,CCsCM,SAAU,GAAoB,GAClC,OAAmB,IAAf,EAAI,OACC,GAGU,IAAf,EAAI,OACC,EAAI,GAGN,SAAe,GACpB,OAAO,EAAI,QAAO,SAAC,EAAW,GAA4B,OAAA,EAAG,EAAH,GAAU,EACtE,CACF,CC9EA,IAAA,GAAA,WAkBE,SAAA,EAAY,GACN,IACF,KAAK,WAAa,EAEtB,CAwbF,OA5ZE,EAAA,UAAA,KAAA,SAAQ,GACN,IAAM,EAAa,IAAI,EAGvB,OAFA,EAAW,OAAS,KACpB,EAAW,SAAW,EACf,CACT,EA6IA,EAAA,UAAA,UAAA,SACE,EACA,EACA,GAHF,IA2RuB,EA3RvB,EAAA,KAKQ,GAsRe,EAtRW,IAuRjB,aAAiB,IALpC,SAAuB,GACrB,OAAO,GAAS,GAAW,EAAM,OAAS,GAAW,EAAM,QAAU,GAAW,EAAM,SACxF,CAGoD,CAAW,IAAU,GAAe,GAvRlC,EAAiB,IAAI,GAAe,EAAgB,EAAO,GAoB7G,OAlBA,IAAa,WACL,IAAA,EAAuB,EAArB,EAAQ,EAAA,SAAE,EAAM,EAAA,OACxB,EAAW,IACT,EAGI,EAAS,KAAK,EAAY,GAC1B,EAIA,EAAK,WAAW,GAGhB,EAAK,cAAc,GAE3B,IAEO,CACT,EAGU,EAAA,UAAA,cAAV,SAAwB,GACtB,IACE,OAAO,KAAK,WAAW,GACvB,MAAO,GAIP,EAAK,MAAM,GAEf,EA6DA,EAAA,UAAA,QAAA,SAAQ,EAA0B,GAAlC,IAAA,EAAA,KAGE,OAAO,IAFP,EAAc,GAAe,KAEA,SAAC,EAAS,GACrC,IAAM,EAAa,IAAI,GAAkB,CACvC,KAAM,SAAC,GACL,IACE,EAAK,GACL,MAAO,GACP,EAAO,GACP,EAAW,cAEf,EACA,MAAO,EACP,SAAU,IAEZ,EAAK,UAAU,EACjB,GACF,EAGU,EAAA,UAAA,WAAV,SAAqB,SACnB,OAAkB,QAAX,EAAA,KAAK,cAAM,IAAA,OAAA,EAAA,EAAE,UAAU,EAChC,EAOA,EAAA,UAAC,IAAD,WACE,OAAO,IACT,EA4FA,EAAA,UAAA,KAAA,eAAK,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GACH,OAAO,GAAc,EAAd,CAA0B,KACnC,EA6BA,EAAA,UAAA,UAAA,SAAU,GAAV,IAAA,EAAA,KAGE,OAAO,IAFP,EAAc,GAAe,KAEN,SAAC,EAAS,GAC/B,IAAI,EACJ,EAAK,WACH,SAAC,GAAS,OAAC,EAAQ,CAAT,IACV,SAAC,GAAa,OAAA,EAAO,EAAP,IACd,WAAM,OAAA,EAAQ,EAAR,GAEV,GACF,EA1aO,EAAA,OAAkC,SAAI,GAC3C,OAAO,IAAI,EAAc,EAC3B,EAyaF,EA9cA,GAudA,SAAS,GAAe,SACtB,OAAoC,QAA7B,EAAW,OAAX,QAAW,IAAX,EAAA,EAAe,GAAO,eAAO,IAAA,EAAA,EAAI,OAC1C,CCpdO,IAAM,GAAuD,IAClE,SAAC,GACC,kBACE,EAAO,MACP,KAAK,KAAO,0BACZ,KAAK,QAAU,qBACjB,CAJA,ICPJ,GAAA,SAAA,GAwBE,SAAA,IAAA,IAAA,EAEE,EAAA,KAAA,OAAO,YAzBT,EAAA,QAAS,EAED,EAAA,iBAAyC,KAGjD,EAAA,UAA2B,GAE3B,EAAA,WAAY,EAEZ,EAAA,UAAW,EAEX,EAAA,YAAmB,MAenB,CAkHF,OA7IgC,GAAA,EAAA,GA8B9B,EAAA,UAAA,KAAA,SAAQ,GACN,IAAM,EAAU,IAAI,GAAiB,KAAM,MAE3C,OADA,EAAQ,SAAW,EACZ,CACT,EAGU,EAAA,UAAA,eAAV,WACE,GAAI,KAAK,OACP,MAAM,IAAI,EAEd,EAEA,EAAA,UAAA,KAAA,SAAK,GAAL,IAAA,EAAA,KACE,IAAa,mBAEX,GADA,EAAK,kBACA,EAAK,UAAW,CACd,EAAK,mBACR,EAAK,iBAAmB,MAAM,KAAK,EAAK,gBAE1C,IAAuB,IAAA,EAAA,GAAA,EAAK,kBAAgB,EAAA,EAAA,QAAA,EAAA,KAAA,EAAA,EAAA,OAAE,CAA3B,EAAA,MACR,KAAK,sGAGpB,GACF,EAEA,EAAA,UAAA,MAAA,SAAM,GAAN,IAAA,EAAA,KACE,IAAa,WAEX,GADA,EAAK,kBACA,EAAK,UAAW,CACnB,EAAK,SAAW,EAAK,WAAY,EACjC,EAAK,YAAc,EAEnB,IADQ,IAAA,EAAc,EAAI,UACnB,EAAU,QACf,EAAU,QAAS,MAAM,GAG/B,GACF,EAEA,EAAA,UAAA,SAAA,eAAA,EAAA,KACE,IAAa,WAEX,GADA,EAAK,kBACA,EAAK,UAAW,CACnB,EAAK,WAAY,EAEjB,IADQ,IAAA,EAAc,EAAI,UACnB,EAAU,QACf,EAAU,QAAS,WAGzB,GACF,EAEA,EAAA,UAAA,YAAA,WACE,KAAK,UAAY,KAAK,QAAS,EAC/B,KAAK,UAAY,KAAK,iBAAmB,IAC3C,EAEA,OAAA,eAAI,EAAA,UAAA,WAAQ,KAAZ,iBACE,OAAqB,QAAd,EAAA,KAAK,iBAAS,IAAA,OAAA,EAAA,EAAE,QAAS,CAClC,kCAGU,EAAA,UAAA,cAAV,SAAwB,GAEtB,OADA,KAAK,iBACE,EAAA,UAAM,cAAa,KAAC,KAAA,EAC7B,EAGU,EAAA,UAAA,WAAV,SAAqB,GAGnB,OAFA,KAAK,iBACL,KAAK,wBAAwB,GACtB,KAAK,gBAAgB,EAC9B,EAGU,EAAA,UAAA,gBAAV,SAA0B,GAA1B,IAAA,EAAA,KACQ,EAAqC,KAAnC,EAAQ,EAAA,SAAE,EAAS,EAAA,UAAE,EAAS,EAAA,UACtC,OAAI,GAAY,EACP,IAET,KAAK,iBAAmB,KACxB,EAAU,KAAK,GACR,IAAI,IAAa,WACtB,EAAK,iBAAmB,KACxB,GAAU,EAAW,EACvB,IACF,EAGU,EAAA,UAAA,wBAAV,SAAkC,GAC1B,IAAA,EAAuC,KAArC,EAAQ,EAAA,SAAE,EAAW,EAAA,YAAE,EAAS,EAAA,UACpC,EACF,EAAW,MAAM,GACR,GACT,EAAW,UAEf,EAQA,EAAA,UAAA,aAAA,WACE,IAAM,EAAkB,IAAI,GAE5B,OADA,EAAW,OAAS,KACb,CACT,EAxHO,EAAA,OAAkC,SAAI,EAA0B,GACrE,OAAO,IAAI,GAAoB,EAAa,EAC9C,EAuHF,EA7IA,CAAgC,IAkJhC,GAAA,SAAA,GACE,SAAA,EAES,EACP,GAHF,IAAA,EAKE,EAAA,KAAA,OAAO,YAHA,EAAA,YAAA,EAIP,EAAK,OAAS,GAChB,CAkBF,OA1ByC,GAAA,EAAA,GAUvC,EAAA,UAAA,KAAA,SAAK,WACmB,QAAtB,EAAgB,QAAhB,EAAA,KAAK,mBAAW,IAAA,OAAA,EAAA,EAAE,YAAI,IAAA,GAAA,EAAA,KAAA,EAAG,EAC3B,EAEA,EAAA,UAAA,MAAA,SAAM,WACmB,QAAvB,EAAgB,QAAhB,EAAA,KAAK,mBAAW,IAAA,OAAA,EAAA,EAAE,aAAK,IAAA,GAAA,EAAA,KAAA,EAAG,EAC5B,EAEA,EAAA,UAAA,SAAA,mBAC4B,QAA1B,EAAgB,QAAhB,EAAA,KAAK,mBAAW,IAAA,OAAA,EAAA,EAAE,gBAAQ,IAAA,GAAA,EAAA,KAAA,EAC5B,EAGU,EAAA,UAAA,WAAV,SAAqB,WACnB,OAAyC,QAAlC,EAAW,QAAX,EAAA,KAAK,cAAM,IAAA,OAAA,EAAA,EAAE,UAAU,UAAW,IAAA,EAAA,EAAI,EAC/C,EACF,CAAA,CA1BA,CAAyC,ICxJzC,GAAA,SAAA,GACE,SAAA,EAAoB,GAApB,IAAA,EACE,EAAA,KAAA,OAAO,YADW,EAAA,OAAA,GAEpB,CAyBF,OA5BwC,GAAA,EAAA,GAKtC,OAAA,eAAI,EAAA,UAAA,QAAK,KAAT,WACE,OAAO,KAAK,UACd,kCAGU,EAAA,UAAA,WAAV,SAAqB,GACnB,IAAM,EAAe,EAAA,UAAM,WAAU,KAAC,KAAA,GAEtC,OADC,EAAa,QAAU,EAAW,KAAK,KAAK,QACtC,CACT,EAEA,EAAA,UAAA,SAAA,WACQ,IAAA,EAAoC,KAAlC,EAAQ,EAAA,SAAE,EAAW,EAAA,YAAE,EAAM,EAAA,OACrC,GAAI,EACF,MAAM,EAGR,OADA,KAAK,iBACE,CACT,EAEA,EAAA,UAAA,KAAA,SAAK,GACH,EAAA,UAAM,KAAI,KAAC,KAAC,KAAK,OAAS,EAC5B,EACF,CAAA,CA5BA,CAAwC,ICc3B,GAA6B,IAAiB,SAAC,GAAW,kBACrE,EAAO,MACP,KAAK,KAAO,aACZ,KAAK,QAAU,yBACjB,CAJuE,ICxBhE,IAAM,GAAe,SAAI,GAA8B,OAAA,GAAyB,kBAAb,EAAE,QAAoC,oBAAN,CAA5C,ECMxD,SAAU,GAAU,GACxB,OAAO,GAAgB,OAAL,QAAK,IAAL,OAAK,EAAL,EAAO,KAC3B,CCHM,SAAU,GAAoB,GAClC,OAAO,GAAW,EAAM,IAC1B,CCLM,SAAU,GAAmB,GACjC,OAAO,OAAO,eAAiB,GAAc,OAAH,QAAG,IAAH,OAAG,EAAH,EAAM,OAAO,eACzD,CCAM,SAAU,GAAiC,GAE/C,OAAO,IAAI,UACT,iBACY,OAAV,GAAmC,kBAAV,EAAqB,oBAAsB,IAAI,EAAK,KAAG,2HAGtF,CCHO,IAAM,GAPW,oBAAX,QAA0B,OAAO,SAIrC,OAAO,SAHL,aCEL,SAAU,GAAW,GACzB,OAAO,GAAgB,OAAL,QAAK,IAAL,OAAK,EAAL,EAAQ,IAC5B,CCHM,SAAiB,GAAsC,qGACrD,EAAS,EAAe,qEAGF,SAAA,GAAM,EAAO,uBAA/B,EAAkB,EAAA,OAAhB,EAAK,EAAA,MAAM,EAAA,oBACf,aACF,SAAA,EAAA,2BAEI,WAAN,SAAA,EAAA,sBAAA,EAAA,+CAGF,EAAO,2CAIL,SAAU,GAAwB,GAGtC,OAAO,GAAc,OAAH,QAAG,IAAH,OAAG,EAAH,EAAK,UACzB,CCPM,SAAU,GAAa,GAC3B,GAAI,aAAiB,GACnB,OAAO,EAET,GAAa,MAAT,EAAe,CACjB,GAAI,GAAoB,GACtB,OA0BmC,EA1BN,EA2B1B,IAAI,IAAW,SAAC,GACrB,IAAM,EAAM,EAAI,MAChB,GAAI,GAAW,EAAI,WACjB,OAAO,EAAI,UAAU,GAGvB,MAAM,IAAI,UAAU,iEACtB,IAhCE,GAAI,GAAY,GACd,OAyC2B,EAzCN,EA0ClB,IAAI,IAAW,SAAC,GAUrB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,SAAW,EAAW,OAAQ,IACtD,EAAW,KAAK,EAAM,IAExB,EAAW,UACb,IAtDE,GAAI,GAAU,GACZ,OAwDyB,EAxDN,EAyDhB,IAAI,IAAW,SAAC,GACrB,EACG,MACC,SAAC,GACM,EAAW,SACd,EAAW,KAAK,GAChB,EAAW,WAEf,IACA,SAAC,GAAa,OAAA,EAAW,MAAM,EAAjB,IAEf,KAAK,KAAM,GAChB,IAnEE,GAAI,GAAgB,GAClB,OAAO,GAAkB,GAE3B,GAAI,GAAW,GACb,OAkE0B,EAlEN,EAmEjB,IAAI,IAAW,SAAC,eACrB,IAAoB,IAAA,EAAA,GAAA,GAAQ,EAAA,EAAA,QAAA,EAAA,KAAA,EAAA,EAAA,OAAE,CAAzB,IAAM,EAAK,EAAA,MAEd,GADA,EAAW,KAAK,GACZ,EAAW,OACb,yGAGJ,EAAW,UACb,IAzEE,GAAI,GAAqB,GACvB,OAkFG,GAAkB,GAlFS,IAiF9B,IAlB0B,EAhBD,EAlBE,EAlBQ,EAPvC,MAAM,GAAiC,EACzC,CAsEM,SAAU,GAAqB,GACnC,OAAO,IAAI,IAAW,SAAC,IASzB,SAA0B,EAAiC,2IAC/B,EAAA,GAAA,+EAIxB,GAJe,EAAK,EAAA,MACpB,EAAW,KAAK,GAGZ,EAAW,OACb,4SAGJ,EAAW,uBAjBT,CAAQ,EAAe,GAAY,OAAM,SAAC,GAAQ,OAAA,EAAW,MAAM,EAAjB,GACpD,GACF,CCjGM,SAAU,GACd,EACA,EACA,EACA,EACA,QADA,IAAA,IAAA,EAAA,QACA,IAAA,IAAA,GAAA,GAEA,IAAM,EAAuB,EAAU,UAAS,WAC9C,IACI,EACF,EAAmB,IAAI,KAAK,SAAS,KAAM,IAE3C,KAAK,aAET,GAAG,GAIH,GAFA,EAAmB,IAAI,IAElB,EAKH,OAAO,CAEX,CC3BM,SAAU,GACd,GAEA,OAAO,SAAC,GACN,GAZE,SAAkB,GACtB,OAAO,GAAiB,OAAN,QAAM,IAAN,OAAM,EAAN,EAAQ,KAC5B,CAUQ,CAAQ,GACV,OAAO,EAAO,MAAK,SAA+B,GAChD,IACE,OAAO,EAAK,EAAc,MAC1B,MAAO,GACP,KAAK,MAAM,GAEf,IAEF,MAAM,IAAI,UAAU,yCACtB,CACF,CCjBM,SAAU,GACd,EACA,EACA,EACA,EACA,GAEA,OAAO,IAAI,GAAmB,EAAa,EAAQ,EAAY,EAAS,EAC1E,CAMA,IAAA,GAAA,SAAA,GAiBE,SAAA,EACE,EACA,EACA,EACA,EACQ,EACA,GANV,IAAA,EAoBE,EAAA,KAAA,KAAM,IAAY,YAfV,EAAA,WAAA,EACA,EAAA,kBAAA,EAeR,EAAK,MAAQ,EACT,SAAuC,GACrC,IACE,EAAO,GACP,MAAO,GACP,EAAY,MAAM,GAEtB,EACA,EAAA,UAAM,MACV,EAAK,OAAS,EACV,SAAuC,GACrC,IACE,EAAQ,GACR,MAAO,GAEP,EAAY,MAAM,GAClB,QAEA,KAAK,cAET,EACA,EAAA,UAAM,OACV,EAAK,UAAY,EACb,WACE,IACE,IACA,MAAO,GAEP,EAAY,MAAM,GAClB,QAEA,KAAK,cAET,EACA,EAAA,UAAM,WACZ,CAUF,OAnF2C,GAAA,EAAA,GA2EzC,EAAA,UAAA,YAAA,iBACE,IAAK,KAAK,mBAAqB,KAAK,oBAAqB,CAC/C,IAAA,EAAW,KAAI,OACvB,EAAA,UAAM,YAAW,KAAC,OAEjB,IAAyB,QAAf,EAAA,KAAK,kBAAU,IAAA,GAAA,EAAA,KAAf,OAEf,EACF,CAAA,CAnFA,CAA2C,IC8BrC,SAAU,GAAa,EAA0B,GACrD,YADqD,IAAA,IAAA,EAAA,GAC9C,IAAQ,SAAC,EAAQ,GACtB,EAAO,UACL,GACE,GACA,SAAC,GAAU,OAAA,GAAgB,EAAY,GAAW,WAAM,OAAA,EAAW,KAAK,EAAhB,GAAwB,EAArE,IACX,WAAM,OAAA,GAAgB,EAAY,GAAW,WAAM,OAAA,EAAW,UAAX,GAAuB,EAApE,IACN,SAAC,GAAQ,OAAA,GAAgB,EAAY,GAAW,WAAM,OAAA,EAAW,MAAM,EAAjB,GAAuB,EAApE,IAGf,GACF,CCPM,SAAU,GAAe,EAA0B,GACvD,YADuD,IAAA,IAAA,EAAA,GAChD,IAAQ,SAAC,EAAQ,GACtB,EAAW,IAAI,EAAU,UAAS,WAAM,OAAA,EAAO,UAAU,EAAjB,GAA8B,GACxE,GACF,CC9DM,SAAU,GAAyB,EAAyB,GAChE,IAAK,EACH,MAAM,IAAI,MAAM,2BAElB,OAAO,IAAI,IAAc,SAAC,GACxB,GAAgB,EAAY,GAAW,WACrC,IAAM,EAAW,EAAM,OAAO,iBAC9B,GACE,EACA,GACA,WACE,EAAS,OAAO,MAAK,SAAC,GAChB,EAAO,KAGT,EAAW,WAEX,EAAW,KAAK,EAAO,MAE3B,GACF,GACA,GACA,EAEJ,GACF,GACF,CCHM,SAAU,GAAa,EAA2B,GACtD,GAAa,MAAT,EAAe,CACjB,GAAI,GAAoB,GACtB,OCzBA,SAAgC,EAA6B,GACjE,OAAO,GAAU,GAAO,KAAK,GAAY,GAAY,GAAU,GACjE,CDuBa,CAAmB,EAAO,GAEnC,GAAI,GAAY,GACd,OE9BA,SAA2B,EAAqB,GACpD,OAAO,IAAI,IAAc,SAAC,GAExB,IAAI,EAAI,EAER,OAAO,EAAU,UAAS,WACpB,IAAM,EAAM,OAGd,EAAW,YAIX,EAAW,KAAK,EAAM,MAIjB,EAAW,QACd,KAAK,WAGX,GACF,GACF,CFOa,CAAc,EAAO,GAE9B,GAAI,GAAU,GACZ,OG/BA,SAA6B,EAAuB,GACxD,OAAO,GAAU,GAAO,KAAK,GAAY,GAAY,GAAU,GACjE,CH6Ba,CAAgB,EAAO,GAEhC,GAAI,GAAgB,GAClB,OAAO,GAAsB,EAAO,GAEtC,GAAI,GAAW,GACb,OI/BA,SAA8B,EAAoB,GACtD,OAAO,IAAI,IAAc,SAAC,GACxB,IAAI,EA4CJ,OAvCA,GAAgB,EAAY,GAAW,WAErC,EAAY,EAAc,MAE1B,GACE,EACA,GACA,iBACM,EACA,EACJ,IAEK,GAAF,EAAkB,EAAS,QAApB,MAAE,EAAI,EAAA,KACd,MAAO,GAGP,YADA,EAAW,MAAM,GAIf,EAKF,EAAW,WAGX,EAAW,KAAK,EAEpB,GACA,GACA,EAEJ,IAMO,WAAM,OAAA,GAAmB,OAAR,QAAQ,IAAR,OAAQ,EAAR,EAAU,SAAW,EAAS,QAAzC,CACf,GACF,CJjBa,CAAiB,EAAO,GAEjC,GAAI,GAAqB,GACvB,OKxCA,SAAwC,EAA8B,GAC1E,OAAO,GAAsB,GAAmC,GAAQ,EAC1E,CLsCa,CAA2B,EAAO,GAG7C,MAAM,GAAiC,EACzC,CMoDM,SAAU,GAAQ,EAA2B,GACjD,OAAO,EAAY,GAAU,EAAO,GAAa,GAAU,EAC7D,CC3CM,SAAU,GAAU,EAAiD,GACzE,OAAO,IAAQ,SAAC,EAAQ,GAEtB,IAAI,EAAQ,EAIZ,EAAO,UAIL,GAAyB,GAAY,SAAC,GAAU,OAAA,EAAU,KAAK,EAAS,EAAO,MAAY,EAAW,KAAK,EAA3D,IAEpD,GACF,CCvEM,SAAU,GAAY,GAC1B,OAAO,GAAS,GAAW,EAAM,SACnC,CCDA,SAAS,GAAQ,GACf,OAAO,EAAI,EAAI,OAAS,EAC1B,CAMM,SAAU,GAAa,GAC3B,OAAO,GAAY,GAAK,IAAS,EAAK,WAAQ,CAChD,CCiEM,SAAU,SAAM,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GAEpB,OAAO,GAAK,EADM,GAAa,GAEjC,CCnCM,SAAU,GAAU,EAAyC,GACjE,OAAO,IAAQ,SAAC,EAAQ,GAEtB,IAAI,EAAQ,EAGZ,EAAO,UACL,GAAyB,GAAY,SAAC,GAGpC,EAAW,KAAK,EAAQ,KAAK,EAAS,EAAO,KAC/C,IAEJ,GACF,CCqBM,SAAU,GACd,EACA,EACA,GAEA,YAFA,IAAA,IAAA,EAAA,KAEI,GAAW,GAEN,IAAS,SAAC,EAAG,GAAM,OAAA,IAAI,SAAC,EAAQ,GAAe,OAAA,EAAe,EAAG,EAAG,EAAG,EAAxB,GAA5B,CAAyD,GAAU,EAAQ,EAAG,IAA9E,GAAoF,IAC3E,kBAAnB,IAChB,EAAa,GAGR,IAAQ,SAAC,EAAQ,GAAe,OC1EnC,SACJ,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAGA,IAAM,EAAc,GAEhB,EAAS,EAET,EAAQ,EAER,GAAa,EAKX,EAAgB,YAIhB,GAAe,EAAO,QAAW,GACnC,EAAW,UAEf,EAGM,EAAY,SAAC,GAAa,OAAC,EAAS,EAAa,EAAW,GAAS,EAAO,KAAK,EAAvD,EAE1B,EAAa,SAAb,EAAc,GAIlB,GAAU,EAAW,KAAK,GAI1B,IAKA,IAAI,GAAgB,EAGpB,GAAU,EAAQ,EAAO,MAAU,UACjC,GACE,GACA,SAAC,GAGa,OAAZ,QAAY,IAAZ,GAAA,EAAe,GAEX,EAGF,EAAU,GAGV,EAAW,KAAK,EAEpB,IACA,WAGE,GAAgB,CAClB,QAEA,GACA,WAIE,GAAI,EAKF,IAIE,IAKA,qBACE,IAAM,EAAgB,EAAO,QAIzB,EACF,GAAgB,EAAY,GAAmB,WAAM,OAAA,EAAW,EAAX,IAErD,EAAW,IARR,EAAO,QAAU,EAAS,OAYjC,IACA,MAAO,GACP,EAAW,MAAM,GAGvB,IAGN,EAaA,OAVA,EAAO,UACL,GAAyB,EAAY,GAAW,WAE9C,GAAa,EACb,GACF,KAKK,WACc,OAAnB,QAAmB,IAAnB,GAAA,GACF,CACF,CDtDyC,CAAe,EAAQ,EAAY,EAAS,EAA5C,IACzC,CE5FQ,IAAA,GAAY,MAAK,QAUnB,SAAU,GAAuB,GACnC,OAAO,IAAI,SAAA,GAAQ,OATvB,SAA2B,EAA6B,GACpD,OAAO,GAAQ,GAAQ,EAAE,WAAC,EAAD,GAAC,GAAD,GAAI,KAAQ,EAAG,EAC5C,CAOuB,CAAY,EAAI,EAAhB,GACvB,CCPA,IAAM,GAA0B,CAAC,cAAe,kBAC1C,GAAqB,CAAC,mBAAoB,uBAC1C,GAAgB,CAAC,KAAM,OAkOvB,SAAU,GACd,EACA,EACA,EACA,GAMA,GAJI,GAAW,KACb,EAAiB,EACjB,OAAU,GAER,EACF,OAAO,GAAa,EAAQ,EAAW,GAAiC,KAAK,GAAiB,IAU1F,IAAA,EAAA,GA4ER,SAAuB,GACrB,OAAO,GAAW,EAAO,mBAAqB,GAAW,EAAO,oBAClE,CA5EI,CAAc,GACV,GAAmB,KAAI,SAAC,GAAe,gBAAC,GAAiB,OAAA,EAAO,GAAY,EAAW,EAAS,EAAvC,CAAlB,IAuD/C,SAAiC,GAC/B,OAAO,GAAW,EAAO,cAAgB,GAAW,EAAO,eAC7D,CAvDM,CAAwB,GACtB,GAAwB,IAAI,GAAwB,EAAQ,IA6DpE,SAAmC,GACjC,OAAO,GAAW,EAAO,KAAO,GAAW,EAAO,IACpD,CA9DQ,CAA0B,GAC1B,GAAc,IAAI,GAAwB,EAAQ,IAClD,GAAE,GATD,EAAG,EAAA,GAAE,EAAM,EAAA,GAgBlB,IAAK,GACC,GAAY,GACd,OAAO,IAAS,SAAC,GAAmB,OAAA,GAAU,EAAW,EAAW,EAAhC,GAA7B,CACL,GAAU,IAOhB,IAAK,EACH,MAAM,IAAI,UAAU,wBAGtB,OAAO,IAAI,IAAc,SAAC,GAIxB,IAAM,EAAU,eAAC,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GAAmB,OAAA,EAAW,KAAK,EAAI,EAAK,OAAS,EAAO,EAAK,GAA9C,EAIpC,OAFA,EAAI,GAEG,WAAM,OAAA,EAAQ,EAAR,CACf,GACF,CASA,SAAS,GAAwB,EAAa,GAC5C,OAAO,SAAC,GAAuB,gBAAC,GAAiB,OAAA,EAAO,GAAY,EAAW,EAA9B,CAAlB,CACjC,CCrPM,SAAU,GAAyC,GACvD,YADuD,IAAA,IAAA,EAAA,KAChD,GAAS,GAAU,EAC5B,CCAO,IAAM,GAAQ,IAAI,IAAkB,SAAC,GAAe,OAAA,EAAW,UAAX,ICwBrD,SAAU,SAAM,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GACpB,IAAM,EAAY,GAAa,GACzB,ET3EF,SAAoB,EAAa,GACrC,MAA6B,kBAAf,GAAK,GAAqB,EAAK,MAAS,CACxD,CSyEqB,CAAU,EAAM,KAC7B,EAAU,EAChB,OAAQ,EAAQ,OAGO,IAAnB,EAAQ,OAER,GAAU,EAAQ,IAElB,GAAS,EAAT,CAAqB,GAAK,EAAS,IALnC,EAMN,CC+IA,SAAS,GACP,EACA,OACA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,GAAA,UAAA,GAEA,IAAW,IAAP,GAKJ,IAAW,IAAP,EAAJ,CAIA,IAAM,EAAe,IAAI,GAAe,CACtC,KAAM,WACJ,EAAa,cACb,GACF,IAGF,OAAO,GAAU,EAAE,WAAC,EAAD,GAAC,GAAD,GAAI,MAAO,UAAU,SAftC,GAgBJ,CCxPA,IAAA,GAAA,SAAA,GACE,SAAA,EAAY,EAAsB,UAChC,EAAA,KAAA,OAAO,IACT,CAcF,OAjB+B,GAAA,EAAA,GActB,EAAA,UAAA,SAAP,SAAgB,EAAW,GACzB,YADyB,IAAA,IAAA,EAAA,GAClB,IACT,EACF,CAAA,CAjBA,CAA+B,ICHlB,GAAqC,CAGhD,YAAW,SAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,MAAC,KAAD,UAAA,QAAA,EAAA,SAAA,kBAAA,EAAA,UAAA,EAAA,CAAA,GAAX,SAAY,EAAqB,OAAkB,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,GAAA,UAAA,GACzC,IAAA,EAAa,GAAgB,SACrC,OAAY,OAAR,QAAQ,IAAR,OAAQ,EAAR,EAAU,aACL,EAAS,YAAW,MAApB,EAAQ,GAAA,CAAa,EAAS,GAAO,GAAK,KAE5C,YAAW,WAAC,EAAD,GAAC,CAAA,EAAS,GAAO,GAAK,IAC1C,IACA,cAAa,SAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,MAAC,KAAD,UAAA,QAAA,EAAA,SAAA,kBAAA,EAAA,UAAA,EAAA,CAAA,GAAb,SAAc,GACJ,IAAA,EAAa,GAAgB,SACrC,QAAgB,OAAR,QAAQ,IAAR,OAAQ,EAAR,EAAU,gBAAiB,eAAe,EACpD,IACA,cAAU,GCrBZ,GAAA,SAAA,GAOE,SAAA,EAAsB,EAAqC,GAA3D,IAAA,EACE,EAAA,KAAA,KAAM,EAAW,IAAK,YADF,EAAA,UAAA,EAAqC,EAAA,KAAA,EAFjD,EAAA,SAAmB,GAI7B,CAqIF,OA9IoC,GAAA,EAAA,GAW3B,EAAA,UAAA,SAAP,SAAgB,EAAW,SACzB,QADyB,IAAA,IAAA,EAAA,GACrB,KAAK,OACP,OAAO,KAIT,KAAK,MAAQ,EAEb,IAAM,EAAK,KAAK,GACV,EAAY,KAAK,UAmCvB,OAZU,MAAN,IACF,KAAK,GAAK,KAAK,eAAe,EAAW,EAAI,IAK/C,KAAK,SAAU,EAEf,KAAK,MAAQ,EAEb,KAAK,GAAY,QAAP,EAAA,KAAK,UAAE,IAAA,EAAA,EAAI,KAAK,eAAe,EAAW,KAAK,GAAI,GAEtD,IACT,EAEU,EAAA,UAAA,eAAV,SAAyB,EAA2B,EAAmB,GACrE,YADqE,IAAA,IAAA,EAAA,GAC9D,GAAiB,YAAY,EAAU,MAAM,KAAK,EAAW,MAAO,EAC7E,EAEU,EAAA,UAAA,eAAV,SAAyB,EAA4B,EAAkB,GAErE,QAFqE,IAAA,IAAA,EAAA,GAExD,MAAT,GAAiB,KAAK,QAAU,IAA0B,IAAjB,KAAK,QAChD,OAAO,EAIC,MAAN,GACF,GAAiB,cAAc,EAInC,EAMO,EAAA,UAAA,QAAP,SAAe,EAAU,GACvB,GAAI,KAAK,OACP,OAAO,IAAI,MAAM,gCAGnB,KAAK,SAAU,EACf,IAAM,EAAQ,KAAK,SAAS,EAAO,GACnC,GAAI,EACF,OAAO,GACmB,IAAjB,KAAK,SAAgC,MAAX,KAAK,KAcxC,KAAK,GAAK,KAAK,eAAe,KAAK,UAAW,KAAK,GAAI,MAE3D,EAEU,EAAA,UAAA,SAAV,SAAmB,EAAU,GAC3B,IACI,EADA,GAAmB,EAEvB,IACE,KAAK,KAAK,GACV,MAAO,GACP,GAAU,EAIV,EAAa,GAAQ,IAAI,MAAM,sCAEjC,GAAI,EAEF,OADA,KAAK,cACE,CAEX,EAEA,EAAA,UAAA,YAAA,WACE,IAAK,KAAK,OAAQ,CACV,IAAE,EAAkB,KAAhB,GAAE,EAAc,KAAL,UACb,EAAY,EAAS,QAE7B,KAAK,KAAO,KAAK,MAAQ,KAAK,UAAY,KAC1C,KAAK,SAAU,EAEf,GAAU,EAAS,MACT,MAAN,IACF,KAAK,GAAK,KAAK,eAAe,EAAW,EAAI,OAG/C,KAAK,MAAQ,KACb,EAAA,UAAM,YAAW,KAAC,MAEtB,EACF,CAAA,CA9IA,CAAoC,ICFvB,GAA+C,CAC1D,IAAG,WAGD,OAAQ,GAAsB,UAAY,MAAM,KAClD,EACA,cAAU,GCYZ,GAAA,WAGE,SAAA,EAAoB,EAAoC,QAAA,IAAA,IAAA,EAAoB,EAAU,KAAlE,KAAA,oBAAA,EAClB,KAAK,IAAM,CACb,CAgCF,OAHS,EAAA,UAAA,SAAP,SAAmB,EAAqD,EAAmB,GACzF,YADsE,IAAA,IAAA,EAAA,GAC/D,IAAI,KAAK,oBAAuB,KAAM,GAAM,SAAS,EAAO,EACrE,EAnCc,EAAA,IAAoB,GAAsB,IAoC1D,EArCA,GC0Ba,GAAiB,IC7C9B,SAAA,GAkBE,SAAA,EAAY,EAAgC,QAAA,IAAA,IAAA,EAAoB,GAAU,KAA1E,IAAA,EACE,EAAA,KAAA,KAAM,EAAiB,IAAI,YAlBtB,EAAA,QAAmC,GAOnC,EAAA,SAAmB,GAY1B,CA4BF,OAhDoC,GAAA,EAAA,GAsB3B,EAAA,UAAA,MAAP,SAAa,GACH,IAAA,EAAY,KAAI,QAExB,GAAI,KAAK,QACP,EAAQ,KAAK,OADf,CAKA,IAAI,EACJ,KAAK,SAAU,EAEf,GACE,GAAK,EAAQ,EAAO,QAAQ,EAAO,MAAO,EAAO,OAC/C,YAEM,EAAS,EAAQ,SAI3B,GAFA,KAAK,SAAU,EAEX,EAAO,CACT,KAAQ,EAAS,EAAQ,SACvB,EAAO,cAET,MAAM,GAEV,EACF,CAAA,CAhDA,CAAoC,ID6CN,CAAmB,IAKpC,GAAQ,GE6Ef,SAAU,GACd,EACA,EACA,QAFA,IAAA,IAAA,EAAA,QAEA,IAAA,IAAA,EAAA,IAIA,IAAI,GAAoB,EAexB,OAb2B,MAAvB,IAIE,GAAY,GACd,EAAY,EAIZ,EAAmB,GAIhB,IAAI,IAAW,SAAC,GAIrB,ICvJwB,EDuJpB,GCvJoB,EDuJF,aCtJA,OAAS,MAAM,IDsJH,EAAU,EAAW,MAAQ,EAE3D,EAAM,IAER,EAAM,GAIR,IAAI,EAAI,EAGR,OAAO,EAAU,UAAS,WACnB,EAAW,SAEd,EAAW,KAAK,KAEZ,GAAK,EAGP,KAAK,cAAS,EAAW,GAGzB,EAAW,WAGjB,GAAG,EACL,GACF,CEzLQ,IAAA,GAAY,MAAK,QACjB,GAA0D,OAAM,eAArC,GAA+B,OAAM,UAAlB,GAAY,OAAM,KAQlE,SAAU,GAAqD,GACnE,GAAoB,IAAhB,EAAK,OAAc,CACrB,IAAM,EAAQ,EAAK,GACnB,GAAI,GAAQ,GACV,MAAO,CAAE,KAAM,EAAO,KAAM,MAE9B,IAYY,EAZD,IAagB,kBAAR,GAAoB,GAAe,KAAS,GAb5C,CACjB,IAAM,EAAO,GAAQ,GACrB,MAAO,CACL,KAAM,EAAK,KAAI,SAAC,GAAQ,OAAA,EAAM,EAAN,IACxB,KAAI,IAQZ,IAAgB,EAHd,MAAO,CAAE,KAAM,EAAa,KAAM,KACpC,CC+KM,SAAU,SAAiD,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GAC/D,IAAM,EAAY,GAAa,GACzB,ErBlMF,SAA4B,GAChC,OAAO,GAAW,GAAK,IAAS,EAAK,WAAQ,CAC/C,CqBgMyB,CAAkB,GAEnC,EAA8B,GAAqB,GAA3C,EAAW,EAAA,KAAE,EAAI,EAAA,KAE/B,GAA2B,IAAvB,EAAY,OAId,OAAO,GAAK,GAAI,GAGlB,IAAM,EAAS,IAAI,GAef,SACJ,EACA,EACA,QAAA,IAAA,IAAA,EAAA,IAEA,OAAO,SAAC,GAGN,GACE,GACA,WAaE,IAZQ,IAAA,EAAW,EAAW,OAExB,EAAS,IAAI,MAAM,GAGrB,EAAS,EAIT,EAAuB,aAGlB,GACP,GACE,GACA,WACE,IAAM,EAAS,GAAK,EAAY,GAAI,GAChC,GAAgB,EACpB,EAAO,UACL,GACE,GACA,SAAC,GAEC,EAAO,GAAK,EACP,IAEH,GAAgB,EAChB,KAEG,GAGH,EAAW,KAAK,EAAe,EAAO,SAE1C,IACA,aACS,GAGL,EAAW,UAEf,IAGN,GACA,IAjCK,EAAI,EAAG,EAAI,EAAQ,MAAnB,EAoCX,GACA,EAEJ,CACF,CA7EI,CACE,EACA,EACA,EAEI,SAAC,GAAW,OC3NhB,SAAuB,EAAgB,GAC3C,OAAO,EAAK,QAAO,SAAC,EAAQ,EAAK,GAAM,OAAE,EAAO,GAAO,EAAO,GAAK,CAA5B,GAAqC,CAAC,EAC/E,CDyNsB,CAAa,EAAM,EAAnB,EAEZ,KAIR,OAAO,EAAkB,EAAO,KAAK,GAAiB,IAAqC,CAC7F,CAuEA,SAAS,GAAc,EAAsC,EAAqB,GAC5E,EACF,GAAgB,EAAc,EAAW,GAEzC,GAEJ,CEvLM,SAAU,GAAW,EAA0B,GACnD,IAAM,EAAe,GAAW,GAAuB,EAAsB,WAAM,OAAA,CAAA,EAC7E,EAAO,SAAC,GAAkC,OAAA,EAAW,MAAM,IAAjB,EAChD,OAAO,IAAI,GAAW,EAAY,SAAC,GAAe,OAAA,EAAU,SAAS,EAAa,EAAG,EAAnC,EAAiD,EACrG,CC7EM,SAAU,GAAQ,GACtB,OAAO,GAAS,EAEZ,WAAM,OAAA,EAAA,EACN,IAAQ,SAAC,EAAQ,GACf,IAAI,EAAO,EACX,EAAO,UACL,GAAyB,GAAY,SAAC,KAI9B,GAAQ,IACZ,EAAW,KAAK,GAIZ,GAAS,GACX,EAAW,WAGjB,IAEJ,GACN,CCeM,SAAU,GACd,EACA,GAEA,OAAO,IAAQ,SAAC,EAAQ,GACtB,IAAI,EAAyD,KACzD,EAAQ,EAER,GAAa,EAIX,EAAgB,WAAM,OAAA,IAAe,GAAmB,EAAW,UAA7C,EAE5B,EAAO,UACL,GACE,GACA,SAAC,GAEgB,OAAf,QAAe,IAAf,GAAA,EAAiB,cACjB,IAAI,EAAa,EACX,EAAa,IAEnB,GAAU,EAAQ,EAAO,IAAa,UACnC,EAAkB,GACjB,GAIA,SAAC,GAAe,OAAA,EAAW,KAAK,EAAiB,EAAe,EAAO,EAAY,EAAY,KAAgB,EAA/F,IAChB,WAIE,EAAkB,KAClB,GACF,IAGN,IACA,WACE,GAAa,EACb,GACF,IAGN,GACF,CCpBM,SAAU,SAAO,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GACrB,OCrDO,GAAS,EDqDT,CAAY,GAAK,EAAM,GAAa,IAC7C,CEvBM,SAAU,GACd,EACA,GAEA,OAAI,EAEK,SAAC,GACN,OAAA,GAAO,EAAkB,KAAK,GAAK,GCzDhC,IAAQ,SAAC,EAAQ,GACtB,EAAO,UAAU,GAAyB,EAAY,IACxD,KDuD8D,EAAO,KAAK,GAAU,IAAhF,EAGG,IAAS,SAAC,EAAO,GAAU,OAAA,GAAU,EAAsB,EAAO,IAAQ,KAAK,GAAK,GExDvF,SAAmB,GACvB,OAAO,IAAI,WAAM,OAAA,CAAA,GACnB,CFsDiG,CAAM,GAAnE,GACpC,CGzCM,SAAU,GAAS,EAAoB,QAAA,IAAA,IAAA,EAAA,IAC3C,IAAM,EAAW,GAAM,EAAK,GAC5B,OAAO,IAAU,WAAM,OAAA,CAAA,GACzB,CC0EM,SAAU,GACd,EACA,GAOA,YAPA,IAAA,IAAA,EAA+B,IAK/B,EAAuB,OAAV,QAAU,IAAV,EAAA,EAAc,GAEpB,IAAQ,SAAC,EAAQ,GAGtB,IAAI,EAEA,GAAQ,EAEZ,EAAO,UACL,GAAyB,GAAY,SAAC,GAEpC,IAAM,EAAa,EAAY,IAK3B,GAAU,EAAY,EAAa,KAMrC,GAAQ,EACR,EAAc,EAGd,EAAW,KAAK,GAEpB,IAEJ,GACF,CAEA,SAAS,GAAe,EAAQ,GAC9B,OAAO,IAAM,CACf,CCfM,SAAU,GACd,EACA,EACA,GAKA,IAAM,EACJ,GAAW,IAAmB,GAAS,EAElC,CAAE,KAAM,EAA2E,MAAK,EAAE,SAAQ,GACnG,EAEN,OAAO,EACH,IAAQ,SAAC,EAAQ,SACM,QAArB,EAAA,EAAY,iBAAS,IAAA,GAAA,EAAA,KAArB,GACA,IAAI,GAAU,EACd,EAAO,UACL,GACE,GACA,SAAC,SACiB,QAAhB,EAAA,EAAY,YAAI,IAAA,GAAA,EAAA,KAAhB,EAAmB,GACnB,EAAW,KAAK,EAClB,IACA,iBACE,GAAU,EACU,QAApB,EAAA,EAAY,gBAAQ,IAAA,GAAA,EAAA,KAApB,GACA,EAAW,UACb,IACA,SAAC,SACC,GAAU,EACO,QAAjB,EAAA,EAAY,aAAK,IAAA,GAAA,EAAA,KAAjB,EAAoB,GACpB,EAAW,MAAM,EACnB,IACA,mBACM,IACqB,QAAvB,EAAA,EAAY,mBAAW,IAAA,GAAA,EAAA,KAAvB,IAEkB,QAApB,EAAA,EAAY,gBAAQ,IAAA,GAAA,EAAA,KAApB,EACF,IAGN,IAIA,EACN,CCvJM,SAAU,GAAgB,EAAiB,GAC/C,YAD+C,IAAA,IAAA,EAAA,IACxC,IAAQ,SAAC,EAAQ,GACtB,IAAI,EAAkC,KAClC,EAAsB,KACtB,EAA0B,KAExB,EAAO,WACX,GAAI,EAAY,CAEd,EAAW,cACX,EAAa,KACb,IAAM,EAAQ,EACd,EAAY,KACZ,EAAW,KAAK,GAEpB,EACA,SAAS,IAIP,IAAM,EAAa,EAAY,EACzB,EAAM,EAAU,MACtB,GAAI,EAAM,EAIR,OAFA,EAAa,KAAK,cAAS,EAAW,EAAa,QACnD,EAAW,IAAI,GAIjB,GACF,CAEA,EAAO,UACL,GACE,GACA,SAAC,GACC,EAAY,EACZ,EAAW,EAAU,MAGhB,IACH,EAAa,EAAU,SAAS,EAAc,GAC9C,EAAW,IAAI,GAEnB,IACA,WAGE,IACA,EAAW,UACb,QAEA,GACA,WAEE,EAAY,EAAa,IAC3B,IAGN,GACF,CCjEM,SAAU,SAAgB,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GAC9B,IAAM,EAAY,GAAa,GAC/B,OAAO,IAAQ,SAAC,EAAQ,IAIrB,EAAY,GAAO,EAAQ,EAAQ,GAAa,GAAO,EAAQ,IAAS,UAAU,EACrF,GACF,CC9BM,SAAU,GAAQ,GACtB,OAAO,IAAO,SAAC,EAAG,GAAU,OAAA,GAAS,CAAT,GAC9B,CCoEM,SAAU,GACd,GAEA,OAAO,IAAQ,SAAC,EAAQ,GACtB,IAEI,EAFA,EAAgC,KAChC,GAAY,EAGhB,EAAW,EAAO,UAChB,GAAyB,OAAY,OAAW,GAAW,SAAC,GAC1D,EAAgB,GAAU,EAAS,EAAK,GAAW,EAAX,CAAqB,KACzD,GACF,EAAS,cACT,EAAW,KACX,EAAc,UAAU,IAIxB,GAAY,CAEhB,KAGE,IAMF,EAAS,cACT,EAAW,KACX,EAAe,UAAU,GAE7B,GACF,CCzHA,SAAS,GAAU,EAAS,EAAY,EAAG,GAEvC,OAAO,IAAK,IAAM,EAAI,WAAU,SAAU,EAAS,GAC/C,SAAS,EAAU,GAAS,IAAM,EAAK,EAAU,KAAK,GAAS,CAAE,MAAO,GAAK,EAAO,EAAI,CAAE,CAC1F,SAAS,EAAS,GAAS,IAAM,EAAK,EAAiB,MAAE,GAAS,CAAE,MAAO,GAAK,EAAO,EAAI,CAAE,CAC7F,SAAS,EAAK,GAJlB,IAAe,EAIa,EAAO,KAAO,EAAQ,EAAO,QAJ1C,EAIyD,EAAO,MAJhD,aAAiB,EAAI,EAAQ,IAAI,GAAE,SAAU,GAAW,EAAQ,EAAQ,KAIjB,KAAK,EAAW,EAAW,CAC7G,GAAM,EAAY,EAAU,MAAM,EAAS,GAAc,KAAK,OAClE,GACJ,CAEA,IAAM,GAAoB,CACtB,OAAQ,eACR,KAAM,eACN,OAAQ,CACJ,IAAK,gBAET,UAAW,IAAI,KAAK,IAExB,IACI,OAAO,OAAO,IACd,OAAO,OAAO,GAAkB,OACpC,CACA,MAAO,GAAM,CAEb,IAAM,GAAW,CAAC,EACZ,GAA8B,oBAAT,MAAwB,KAAK,UAC/B,oBAAd,WAA6B,UAAU,cAC9C,IACA,GAAY,MAAM,MAAM,SAAA,GAAA,OAAkB,GAAS,aAAe,CAAA,IAClD,oBAAT,MAAwB,YAAa,OAAS,KAAK,UAE1D,iBAAiB,WAAY,SAAA,GACzB,IAAI,EAAI,GACmE,QAAtE,EAAwB,QAAlB,EAAK,EAAG,YAAA,IAAkB,OAAA,EAAyB,EAAG,YAAA,IAAkB,OAAA,EAAyB,EAAG,WAAW,mBACtH,EAAI,KAAc,QAAE,SAAS,CAAE,qBAAA,KAA8B,SAAS,SAAA,GAAa,IAAI,EAAI,OAAO,EAAO,MAA6B,QAApB,EAAK,EAAG,cAAA,IAAoB,OAAA,EAAyB,EAAG,KAAO,EAAO,YAAY,EAAG,KAAK,GAChN,IASR,IAAM,GAAA,WACF,SAAA,EAAY,GAAA,EAAA,KAAA,GACR,KAAK,KAAO,CAChB,CA8BA,OA7BA,EAAA,EAAA,EAAA,IAAA,YAAA,MAAA,SAAU,GAAA,IAAA,EAAA,KACN,IAAK,GACD,OAAO,aACX,IAAM,EAAa,SAAA,GACf,IAAI,GACoB,QAAlB,EAAK,EAAG,YAAA,IAAkB,OAAA,EAAyB,EAAG,QAAA,gBAAA,OAA0B,EAAK,OACvF,EAAS,EAAG,KAAK,QACrB,EAGJ,OADA,GAAY,iBAAiB,UAAW,GACjC,kBAAM,GAAY,oBAAoB,UAAW,EAC5D,IACA,CAAA,IAAA,cAAA,MAAA,SAAY,GAAA,IACJ,EADI,EAAA,KAEuB,iBAApB,KAAc,QAErB,EAAI,KAAc,QAAE,SAAS,CAAE,qBAAA,KAA8B,SAAS,SAAA,GAAA,OAAW,EAAO,YAAY,CAChG,KAAA,gBAAA,OAAsB,EAAK,MAC3B,QAAA,GAAA,IAGC,GAAS,eAG0B,QAAvC,EAAK,GAAS,aAAa,cAAA,IAAoB,GAAyB,EAAG,YAAY,CACpF,KAAA,gBAAA,OAAsB,KAAK,MAC3B,QAAA,IAGZ,KAAA,CAAA,CAjCE,GAoCA,GAAS,WAAW,gBAAkB,WAAW,cAAgB,IAAI,KA8BrE,GAAA,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GACF,SAAA,EAAY,GAAA,IAAA,EAAA,EAAA,KAAA,GACR,IAAM,EAAiC,oBAArB,iBACZ,IAAI,GAAmB,GAAQ,IAAI,iBAAiB,GAsC9D,OArCI,EAAA,EAAA,KAAA,MAAM,SAAA,GACF,SAAS,EAAc,GACnB,EAAW,KAAK,EAAG,OACvB,CACA,SAAS,EAAe,GAEpB,EAAW,KAAK,EAAG,KACvB,CACA,IAAI,GAzChB,SAAqB,EAAM,GACnB,GAAO,IAAI,GACX,GAAO,IAAI,GAAM,KAAK,GAGtB,GAAO,IAAI,EAAM,CAAC,GAE1B,CAPA,CA2CY,OAAA,OAAmB,GAAQ,GAC3B,IACQ,aAAc,GACd,EAAc,EAAG,WAAU,SAAA,GAAA,OAAW,EAAW,KAAK,EAAA,IAItD,EAAG,iBAAiB,UAAW,EAEvC,CACA,MAAO,GAGP,CACA,OAAO,YAjDnB,SAAwB,EAAM,GAC1B,IAAM,EAAY,GAAO,IAAI,GAC7B,GAAI,EAAW,CACX,IAAM,EAAM,EAAU,QAAQ,IACjB,IAAT,GACA,EAAU,OAAO,EAAK,EAE9B,CACJ,CARA,CAmDgB,OAAA,OAAsB,GAAQ,GAC1B,aAAc,GACd,IAGA,EAAG,oBAAoB,UAAW,EACtC,CACH,IAEL,EAAK,KAAO,EACZ,EAAK,GAAK,EACd,CAAA,CAOA,OANA,EAAA,EAAA,EAAA,IAAA,OAAA,MAAA,SAAK,GAED,KAAK,GAAG,YAAY,GAxD5B,SAAkB,GACd,IAAM,EAAY,GAAO,IAAI,EAAG,MAC5B,GACA,EAAU,SAAQ,SAAA,GACd,IACI,EAAS,EACb,CACA,MAAO,GACP,IAGZ,CAXA,CAyDmB,IAAI,YAAA,OAAA,OAAmB,KAAK,MAAQ,CAAE,OAAQ,IAG7D,KAAA,CAAA,CAhDE,CAAiC,IAoDnC,IAAA,EACJ,SAAS,GAAkB,EAAI,GAC3B,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAGzB,OAHyB,EAAA,KAAA,EAAA,EAAA,KAAA,EAGd,UAAU,cAAc,MAAA,OACZ,GADvB,EAAA,EAAA,KAAA,EAAA,GACU,SAAZ,GAAsB,EAAG,MAAA,EAAA,GAAA,CAAA,EAAA,KAAA,eAAA,EAAA,KAAA,EACnB,EAAG,KAAK,SAAA,eAAA,OAAwB,EAAG,OAAA,UAEzC,EAAG,OAAA,CAAA,EAAA,KAAA,eAUG,IAAI,MAAM,4EAAA,EAAA,OAAA,cAPhB,EAAG,OAAO,YAAY,CAClB,KAAM,mBACN,OAAQ,EAAG,KACX,QAAA,KAOZ,QAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,SAES,KAED,IAAA,GAER,yBAAA,EAAA,OAAA,GAAA,EAAA,kBAER,CA2BA,SAAS,GAAY,EAAI,GACjB,EAAG,MAAM,mBAET,GAAkB,EAAI,GAGtB,EAAG,eAAe,KAAK,CAAE,QAAA,GAEjC,CAEA,IAAM,GAA8B,oBAAX,OAClB,SAAA,GAAA,OAAW,OAAO,KAAK,EAAQ,WAC/B,SAAA,GAIC,IAHA,IAAM,EAAgB,KAAK,GACrB,EAAM,EAAc,OACpB,EAAQ,IAAI,WAAW,GACpB,EAAI,EAAG,EAAI,EAAK,IACrB,EAAM,GAAK,EAAc,WAAW,GAExC,OAAO,CAAK,EAEd,GAA8B,oBAAX,OAClB,SAAA,GAAA,OACK,YAAY,OAAO,GACZ,OAAO,KAAK,EAAE,OAAQ,EAAE,WAAY,EAAE,YAAY,SAAS,UAG3D,OAAO,KAAK,GAAG,SAAS,WAGpC,SAAA,GAAA,OACQ,KAAK,OAAO,aAAa,MAAM,KAAM,YAAY,OAAO,GAAK,EAAI,IAAI,WAAW,IAAA,EAG/F,SAAS,GAAA,GAA8B,IAAR,EAAA,EAAF,OAAU,EAAA,EAAF,aACjC,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAM7B,OALA,EAAO,KAAK,UAAU,GAAA,OAAA,EACrB,EAAO,KAAK,SAAA,GAAA,MAAY,CAAG,QAAA,EAAS,UAAA,EAAU,KAAA,EAC9C,EAAa,KAAK,SAAA,GAAA,MAAY,CAAG,QAAA,EAAS,UAAA,EAAU,MACzD,MAAK,SAAC,EAAG,GAAA,OAAM,EAAE,QAAU,EAAE,SAAW,EAAI,EAAE,QAAU,EAAE,QAAU,EAAI,MACpE,GAAY,IAAI,aAAc,OAAO,GAAA,EAAA,KAAA,EACjB,OAAO,OAAO,OAAO,QAAS,GAAA,OAAlD,OAAA,EAAA,EAAA,KAAA,EAAA,OAAA,SACS,GAAU,IAE7B,wBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CAEA,SAAS,GAAkB,GACvB,OAAO,OAAO,QAAQ,EAAG,MAAM,QAAU,CAAC,GACrC,QAAO,SAAA,GAAM,OAAN,EAAA,EAAA,GAAM,GAAA,aAAqB,IAClC,KAAI,SAAA,GAAA,IAAE,EAAF,EAAA,EAAA,GAAE,UAAS,EAAG,OAAO,QAAO,SAAA,GAAG,OAAA,EAAA,OAAoB,CAAA,IAAK,MAC5D,QAAO,SAAA,GAAA,OAAoB,CAAA,GACpC,CAEA,SAAS,GAAiB,GACtB,UAAA,OAAW,EAAA,aACf,CAEA,SAAS,GAA0B,GAC/B,IAAI,EACE,EAAgE,QAAnD,EAAK,qBAAqB,KAAK,UAAA,IAA4B,OAAA,EAAyB,EAAG,GAC1G,IAAK,EACD,MAAM,IAAI,MAAA,uBAAA,OAA6B,EAAA,oBAC3C,OAAO,CACX,CAEA,IAAM,GAAS,GAAG,OAClB,SAAS,GAAQ,GACb,OAAO,GAAO,MAAM,GAAI,EAC5B,CAEA,SAAS,GAAkB,EAAgB,GAAwC,IAAA,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAD,CAAC,EAAA,EAAA,EAApC,MAAE,OAAA,IAAA,EAAQ,CAAC,EAAA,EAAA,EAAA,EAAC,MAAE,OAAA,IAAA,EAAQ,IAAA,EACjE,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,YAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAsBpB,OAtBoB,EAAA,GAsBpB,GAAA,EAAA,KAAA,EArBe,QAAQ,IAAI,EAAe,KAAK,SAAA,GAAA,OAAkB,GAAU,OAAA,OAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAe5G,OAdM,EAAY,GAA0B,EAAc,MACpD,EAAe,EAAM,GACvB,EAAQ,EACN,EAAc,MAAM,OAAO,MAAM,GACjC,EACF,EAAQ,MACR,EAAQ,EAAM,MAAM,IAQxB,EAAA,KAAA,EAPmB,EAAM,UAAA,cAAA,EAAA,OAAA,SAAA,EAAA,KAOb,KAAK,SAAA,GAAA,MAAQ,CACrB,MAAO,EACP,IAAA,EAAA,6BAAA,EAAA,OAAA,GAAA,EAAA,IAER,YAAA,EAAA,GAAA,EAAA,KAEM,GAAA,EAAA,EAAA,IAAA,EAAA,IAAkC,MAAK,SAAC,EAAG,GAAA,OAAM,EAAE,IAAI,OAAS,EAAE,IAAI,KACtE,EAAE,IAAI,KAAO,EAAE,IAAI,KACnB,EAAE,IAAI,GAAK,EAAE,IAAI,EAAA,IAEjB,EAAS,GACX,EAAe,KACf,EAAc,KAAA,EAAA,EACW,GAAA,IAA7B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MACQ,EAAA,EAAA,MADK,EAAA,EAAF,MAAS,EAAA,EAAF,IACV,GACA,EAAa,QAAU,GACvB,IAAgB,EAAI,KACpB,EAAa,KAAK,KAAK,IAGvB,EAAe,CACX,MAAA,EACA,KAAM,CAAC,IAEX,EAAc,EAAI,KAClB,EAAO,KAAK,GAIpB,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,QAAA,EAAA,OAAA,SAAO,GACX,yBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CAEA,SAAS,GAAe,GACpB,IAAM,EAAM,IAAI,WAAW,GAC3B,GAAsB,oBAAX,OACP,OAAO,gBAAgB,QAGvB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,IACvB,EAAI,GAAK,KAAK,MAAsB,IAAhB,KAAK,UAEjC,GAAsB,oBAAX,QAA0B,OAAO,KACxC,OAAO,OAAO,KAAK,GAAK,SAAS,UAEhC,GAAoB,oBAAT,KACZ,OAAO,KAAK,OAAO,aAAa,MAAM,KAAM,IAG5C,MAAM,IAAI,MAAM,8BAExB,CAEA,SAAS,GAAO,GACZ,IAAK,EACD,MAAM,IAAI,MAAM,mBACxB,CACA,IAAM,GAAU,CAAC,EAAE,eAInB,SAAS,GAAa,EAAK,EAAS,GAChC,GAAK,QAAA,IAAO,MAER,aAAc,UAAU,OAAO,SAAS,IAE5C,GAAuB,iBAAZ,GAAwB,WAAY,EAAS,CACpD,GAAwB,iBAAV,GAAsB,WAAY,GAChD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,OAAQ,EAAI,IAAK,EACzC,GAAa,EAAK,EAAQ,GAAI,EAAM,GAE5C,KACK,CACD,IAAI,EAAS,EAAQ,QAAQ,KAC7B,IAAgB,IAAZ,EAAe,CACf,IAAI,EAAiB,EAAQ,OAAO,EAAG,GACnC,EAAmB,EAAQ,OAAO,EAAS,GAC/C,GAAyB,KAArB,OAAA,IACI,EACI,MAAM,QAAQ,GACT,MAAM,SAAS,KAChB,EAAI,OAAO,SAAS,GAAiB,UAGlC,EAAI,GAIf,EAAI,GAAkB,MACzB,CAED,IAAI,EAAW,EAAI,GAEd,GAnCrB,SAAgB,EAAK,GACjB,OAAO,GAAQ,KAAK,EAAK,EAC7B,CAFA,CAmCyC,EAAK,KAC1B,EAAY,EAAI,GAAkB,CAAC,GACvC,GAAa,EAAU,EAAkB,EAC7C,CACJ,eAEQ,EACI,MAAM,QAAQ,KAAS,MAAM,SAAS,IAEtC,EAAI,OAAO,EAAS,UAGb,EAAI,GAIf,EAAI,GAAW,CAE3B,CACJ,CACA,IAAM,GAA+B,oBAAT,MAA0C,oBAAX,OAAyB,SAAC,GAAgD,IAAzC,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAa,OAAO,gBAAgB,KAAK,QAE3H,EAAM,IAAI,WAAW,GAE3B,OADA,EAAW,GACJ,KAAK,KAAK,OAAO,aAAa,MAAM,KAAM,GAAK,EACpC,oBAAX,OAAyB,SAAC,GAAoB,IAAb,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAa,GAE/C,EAAM,OAAO,MAAM,GAEzB,OADA,EAAW,GACJ,EAAI,SAAS,SAAS,EAC7B,WAAQ,MAAM,IAAI,MAAM,8CAA8C,EAC1E,SAAS,GAAiB,GACtB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAI,SAAU,EAC9B,EAAI,GAAK,KAAK,MAAsB,IAAhB,KAAK,SAEjC,CAaA,SAAS,GAAkB,GACvB,MAAkB,iBAAP,MAIP,MAAM,QAAQ,IAAO,EAAG,MAAK,SAAA,GAAA,OAAO,GAAkB,EAAA,KAAS,EAAG,MAAM,IAGhF,CAOA,SAAS,GAAsB,GAC3B,MAAuB,iBAAT,GAAqC,iBAAT,GAAqB,MAAM,QAAQ,IAAS,EAAK,MAAM,GACrG,CAKA,SAAS,GAAe,EAAQ,EAAO,GACnC,IAAM,EAAM,EAAO,KAAW,EAAO,GAAS,CAAC,GACzC,EAAO,EAAG,KAAK,KAAI,SAAA,GAAA,MAAsB,iBAAR,EAAmB,EAAM,KAAK,UAAU,EAAA,IAC/E,OAAQ,EAAG,MACP,IAAK,SAEL,IAAK,SACD,EAAK,SAAQ,SAAC,EAAK,GACf,EAAI,GAAO,CACP,KAAM,MACN,IAAK,EAAG,OAAO,GAClB,IAEL,MACJ,IAAK,SACL,IAAK,SACD,EAAK,SAAQ,SAAC,EAAK,GACf,IAAM,EAAyB,WAAZ,EAAG,KAChB,EAAG,YAAY,GACf,EAAG,WACH,EAAQ,EAAI,GAClB,GAAK,EAOD,OAAQ,EAAM,MACV,IAAK,MAED,QAAA,EAAA,EAAA,EAAgC,OAAO,QAAQ,GAAA,EAAA,EAAA,OAAA,IAAA,CAA1C,IAAA,EAAA,EAAA,EAAA,GAAA,GAAO,EAAA,EAAA,GAAU,EAAA,EAAA,GAClB,GAAa,EAAM,IAAK,EAAU,EAEtC,OACJ,IAAK,MAED,MACJ,IAAK,MAED,OAAO,OAAO,EAAM,IAAK,QAlBjC,EAAI,GAAO,CACP,KAAM,MACN,IAAK,EAmBb,IAEJ,MAEJ,IAAK,SACD,EAAK,SAAS,SAAA,GACV,EAAI,GAAO,CACP,KAAM,MACT,IAIb,OAAO,CACX,CAEA,SAAS,GAAgB,EAAQ,GAAA,IACC,EADD,EAAA,EACC,GAAA,IAA9B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MACI,KAAkB,EAAlB,EAAA,EAAA,MADS,EAAA,EAAF,MAAO,EAAA,EAAE,EAAF,MACI,IAAlB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MACI,CAAA,GAAe,EAAQ,EADhB,EAAA,MACuB,CAG1C,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,CAH0C,CAG1C,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EA6LA,IAAM,GAAA,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GACF,SAAA,EAAA,GAA2C,IAAA,EAA7B,EAAA,EAAF,MAAS,EAAA,EAAF,QAAW,EAAA,EAAF,YAAe,EAAA,EAAF,cAMzC,OANyC,EAAA,KAAA,IACrC,EAAA,EAAA,KAAA,KAAM,IACD,KAAO,0BACZ,EAAK,MAAQ,EACb,EAAK,YAAc,EACnB,EAAK,cAAgB,EACzB,CAAA,QAAA,EAAA,EAAA,CAPE,CAOF,EAPkC,QAUtC,SAAS,GAAiB,EAAiB,GACvC,OAAO,IAAI,SAAQ,SAAC,EAAS,GACzB,IAAM,EAAmB,OAAO,OAAO,OAAO,OAAO,CAAE,YAAa,SAAU,YAAa,UAAY,GAAM,CAAE,SAAW,SAAA,GAClH,EAAgB,UAAA,GAChB,EAAQ,EAAI,EACb,SAAU,WACT,EAAgB,UAAA,GAChB,EAAO,IAAI,GAAM,WAAW,kBAAkB,IAEtD,EAAgB,KAAK,EAAiB,GAW9C,CACA,SAAS,GAAU,EAAiB,GAAU,QAAA,EAAA,UAAA,OAAA,EAAA,IAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,UAAA,GAC1C,OAAO,GAAiB,EAAiB,CACrC,KAAM,gBACN,MAAA,EACA,OAAA,EACA,OAAQ,CAAC,EACT,YAAa,KACb,YAAa,MAErB,CACA,SAAS,GAAe,EAAiB,EAAO,GAC5C,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAC/B,EAAQ,GAAa,aACjB,GAAU,oCAAoC,KAAK,GAAA,CAAA,EAAA,KAAA,QACvD,OADuD,EAAA,KAAA,EACxC,GAAiB,EAAiB,CAC7C,KAAM,QACN,MAAA,EACA,OAAQ,EACF,CACE,CACI,KAAM,QACN,YAAa,gBACb,QAAS,qCACT,cAAe,CAAC,IAGtB,GACN,OAAQ,CACJ,MAAO,CACH,KAAM,QACN,YAAa,gCAhBzB,EAAA,EAAA,KAmBI,MAAA,OAAA,EAAA,KAAA,sBAAA,EAAA,OAAA,SAED,GACX,wBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CACA,SAAS,GAAa,EAAiB,EAAO,GAC1C,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAY3B,OAXF,EAAS,CACX,CACI,KAAM,OACN,YAAa,WACb,QAAS,+CACT,cAAe,CAAE,MAAA,KAGrB,GACA,EAAO,KAAK,GAEhB,EAAA,KAAA,EAAsB,GAAiB,EAAiB,CACpD,KAAM,MACN,MAAO,YACP,OAAA,EACA,OAAQ,CACJ,IAAK,CACD,KAAM,MACN,MAAO,MACP,YAAa,4BARnB,OAQmB,EAAA,EAAA,KARjB,EAAA,EAAF,IAAA,EAAA,OAAA,SAYC,GACX,wBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CA4BA,SAAS,GAAgB,GACrB,IAAI,EAAI,EAAI,EACZ,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAC7B,OAD6B,EAAA,KAAA,EACT,EAAG,iBAAA,OACmD,GAD1E,EAAA,EAAA,KACE,EAAsF,EAAxF,YAAe,EAAyE,EAA3E,sBAAyB,EAAkD,EAApD,aAAgB,EAAoC,EAAtC,uBAA0B,EAAY,EAAd,OAC3E,EAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,OAAA,SACM,oBAC8H,QAAxH,EAAK,MAAA,OAAA,EAA8E,EAAsB,iBAAA,IAAuB,EAAgB,EAAK,KACxJ,KAAK,OAAmG,SAAzD,QAA9B,EAAK,EAAY,eAAA,IAAqB,OAAA,EAAyB,EAAG,SAAW,QAAA,EAAA,KAAA,gBAAA,EAAA,OAAA,SACjG,GAAA,WAEN,EAAA,CAAA,EAAA,KAAA,eACK,IAAI,MAAM,uCAE+H,QAA3H,EAAK,MAAA,OAAA,EAAgF,EAAuB,iBAAA,IAAuB,EAAgB,EAAK,MAC1J,KAAK,OAAA,CAAA,EAAA,KAAA,eACjB,IAAI,MAAM,qCAEd,OAFc,EAAA,KAAA,GAES,GAAmB,EAAG,MAAM,QAAQ,YAAa,GAAA,QAO9E,OAPM,EAAA,EAAA,KAAA,EAAA,KAAA,GACA,EAAG,MAAM,WAAW,OAAO,EAAO,IAAK,CACzC,YAAa,EAAe,YAC5B,sBAAuB,EAAe,sBACtC,OAAQ,EAAe,OACvB,QAAS,EAAe,UAAA,eAAA,EAAA,OAAA,SAErB,GACX,yBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CACA,SAAS,GAAa,EAAK,EAAS,EAAY,EAAiB,GAC7D,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,YAC/B,EAAQ,aACR,EAAQ,sBAAsB,UAAY,KAAK,OAAA,CAAA,EAAA,KAAA,QAAA,EAAA,GACxC,EAAA,EAAA,KAAA,oBAEF,EAAQ,cACX,EAAQ,0BACN,EAAQ,uBAAuB,UAAY,KAAK,OAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,EACvC,GAAmB,EAAK,GAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,wBAAA,EAAA,KAAA,GAyDjD,SAA0B,EAAS,EAAY,EAAiB,GAC5D,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,UAC9B,OAAO,OAAA,CAAA,EAAA,KAAA,aACgB,oBAAb,UAAkD,UAAtB,SAAS,SACtC,IAAI,MAAM,mTAGV,IAAI,MAAM,mDAGJ,OAHI,EAAA,KAAA,EAGgB,OAAO,OAAO,YAAY,CAC9D,KAAM,oBACN,cAAe,KACf,eAAgB,IAAI,WAAW,CAAC,EAAM,EAAM,IAC5C,KAAM,CAAE,KAAM,eAElB,CAAC,OAAQ,kBANS,GAMT,EAAA,EAAA,KAND,EAAA,EAAF,WAAc,EAAA,EAAF,UAOb,GAAe,EAAA,CAAA,EAAA,KAAA,cACV,IAAI,MAAM,yCAGC,OAFrB,EAAQ,wBAA0B,EAClC,EAAA,GAkFR,SAAmB,GAGf,OAEJ,SAAqB,GAEjB,IADA,IAAI,EAAc,+BACX,EAAI,OAAS,GAChB,GAAe,EAAI,UAAU,EAAG,IAAM,KACtC,EAAM,EAAI,UAAU,IAGxB,OADA,GAA4B,0BAEhC,CARA,CAJuB,GAAU,GAGjC,EArF6B,EAAA,KAAA,GADO,OAAO,OAAO,UAAU,OAAQ,GAAA,QAIlD,OAJkD,EAAA,GAAA,EAAA,KACtD,GAAA,EAAA,EAAA,IAAA,EAAA,IACN,EAAQ,UAAY,EACpB,EAAA,KAAA,GAAA,EAAA,KAAA,GAC4B,EAAW,CAC/B,WAAY,EACZ,MAAA,IAAA,QAFE,GAIiB,WAJjB,EAAA,EAAA,MAIQ,KAAA,CAAA,EAAA,KAAA,eACJ,IAAI,GAAwB,GAAA,WAEf,WAAnB,EAAU,KAAA,CAAA,EAAA,KAAA,eACJ,IAAI,MAAA,iDAAA,OAAuD,EAAU,OAAA,QAyB7B,GApBlD,EAAQ,YAAc,EAAU,YAChC,EAAQ,sBAAwB,IAAI,KAAK,EAAU,uBACnD,EAAQ,aAAe,EAAU,aAC7B,EAAU,yBACV,EAAQ,uBAAyB,IAAI,KAAK,EAAU,yBAExD,EAAQ,OAAS,EAAU,OAAO,IAClC,EAAQ,MAAQ,EAAU,OAAO,MACjC,EAAQ,KAAO,EAAU,OAAO,KAChC,EAAQ,OAAS,EAAU,OAC3B,EAAQ,QAAU,CACd,KAAM,EAAU,SAChB,OAAQ,EAAU,OAAO,SAAW,MAEV,MAA1B,EAAU,eACV,EAAQ,QAAQ,aAAe,EAAU,cAEb,MAA5B,EAAU,iBACV,EAAQ,QAAQ,WAAa,IAAI,KAAK,EAAU,iBAAA,EAAA,GAEhD,EAAU,QAAU,EAAU,OAAO,OAAS,GAAA,EAAA,GAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,GACxC,GAAiB,EAAiB,CACpC,KAAM,gBACN,MAAO,uBACP,OAAQ,CAAC,EACT,OAAQ,EAAU,SAAA,eAAA,EAAA,OAAA,SAGnB,GACX,WAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,YAEQ,EAAA,cAAiB,IAAA,CAAA,EAAA,KAAA,SAOjB,OAPiB,EAAA,KAAA,GACX,GAAU,EAAiB,EAAA,GAAM,MAAO,CAC1C,KAAM,QACN,YAAa,EAAA,GAAM,YACnB,QAAS,EAAA,GAAM,QACf,cAAe,CAAC,YAwBxB,cAAA,EAAA,GAxBwB,QAIV,wDAEV,EAAA,cAAiB,WAAA,CAAA,EAAA,KAAA,SAUH,OAPV,OAAA,WAFqB,WAA4B,UAAU,OAItD,GAAM,OAA8B,oBAAb,WAAmD,cAAtB,SAAS,UAAkD,cAAtB,SAAS,UAAA,gEAAA,OAE7B,SAAS,OAAA,sDAGzE,6DAPA,wEAOA,EAAA,KAAA,GAER,GAAU,EAAiB,wBAAyB,CACtD,KAAM,QACN,YAAa,gBACb,QAAA,EACA,cAAe,CAAC,IACjB,OAAM,eACb,yBAAA,EAAA,OAAA,GAAA,EAAA,mBAIZ,CArGA,CAtD0C,EAAS,EAAY,EAAiB,GAE5E,QAAA,EAAA,GAAA,EAAA,KAAA,QAAA,EAAA,GAAA,EAAA,GAAA,eAAA,EAAA,OAAA,SAAA,EAAA,IAAA,yBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CACA,SAAS,GAAmB,EAAK,GAC7B,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,UAC9B,EAAM,aAAA,CAAA,EAAA,KAAA,cACD,IAAI,MAAM,8DACf,EAAM,wBAAA,CAAA,EAAA,KAAA,cACD,IAAI,MAAM,sGAKd,OAJA,EAAa,KAAK,MAClB,EAAoB,oBAEpB,GADc,IAAI,aACC,OAAO,EAAM,aAAe,GAAA,EAAA,KAAA,EACvB,OAAO,OAAO,KAAK,EAAmB,EAAM,wBAAyB,GAAA,OAU7F,OAVA,EAAA,EAAA,KACA,EAAY,GAAU,GACtB,EAAe,CACjB,WAAY,gBACZ,cAAe,EAAM,aACrB,OAAQ,CAAC,aACT,UAAA,EACA,kBAAA,EACA,WAAA,GAAA,EAAA,KAAA,GAEc,MAAA,GAAA,OAAS,EAAA,UAAa,CACpC,KAAM,KAAK,UAAU,GACrB,OAAQ,OACR,QAAS,CAAE,eAAgB,oBAC3B,KAAM,iBAJJ,GAMa,OANb,EAAA,EAAA,MAME,OAAA,CAAA,EAAA,KAAA,eACE,IAAI,MAAA,wBAAA,OAA8B,EAAI,OAAA,UAAA,OAAe,EAAA,mBACzD,OADyD,EAAA,KAAA,GACxC,EAAI,OAAA,QAArB,GACgB,WADhB,EAAA,EAAA,MACO,KAAA,CAAA,EAAA,KAAA,eACH,IAAI,GAAwB,GAAA,eAAA,EAAA,OAAA,UAEtC,EAAM,YAAc,EAAS,YAC7B,EAAM,sBAAwB,EAAS,sBACjC,IAAI,KAAK,EAAS,4BAAA,EAExB,EAAM,OAAS,EAAS,OACxB,EAAM,QAAU,CACZ,KAAM,EAAS,SACf,OAAQ,EAAS,OAAO,SAAW,MAEV,MAAzB,EAAS,eACT,EAAM,QAAQ,aAAe,EAAS,cAEX,MAA3B,EAAS,iBACT,EAAM,QAAQ,WAAa,IAAI,KAAK,EAAS,iBAE1C,IACX,yBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CAsHA,IAAkB,GAAU,CAAC,EAArB,SAwBF,GAAY,CACd,QArBJ,SAA2B,GAGvB,IAFA,IAAM,EAAO,OAAO,KAAK,GACrB,EAAa,KACR,EAAI,EAAG,EAAI,EAAK,OAAQ,EAAI,IAAK,EACnB,MAAf,EAAK,GAAG,KACR,EAAa,GAAc,IAChB,KAAK,EAAK,IAG7B,IAAK,EACD,OAAO,EACX,IACgB,EADV,EAAA,EAAA,GAAa,GACnB,EAAA,EAAgB,GAAA,IAAhB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAgB,QACL,EADA,EAAA,MACM,CAEjB,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,KAAgB,EAAhB,EAAA,EAAgB,GAAA,IAAhB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MACI,KADO,EAAA,EAAA,MACP,EAAM,IAAM,GAAK,EAAM,EAAA,CAE3B,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,QAAO,CACX,GAIA,SAAS,KAAqB,QAAA,EAAA,UAAA,OAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GAC1B,IAAM,EAAW,EAAe,QAAO,SAAC,EAAG,GAAA,OAAA,EAAA,EAAA,GAAY,GAAM,EAAA,GAAM,EAAe,QAAO,SAAC,EAAG,GAAA,OAAA,EAAA,EAAA,GAAY,GAAM,EAAA,GAAM,CAAC,IAChH,EAAW,IAAI,QACrB,MAAO,CACH,UAAA,SAAU,EAAO,EAAkB,GAC/B,IAAM,EAAO,KAAK,UAAU,GAAO,SAAU,GACzC,IAAM,EAAU,KAAK,GACf,EA8DlB,SAAoB,GAChB,IAhGgB,EAgGV,SAAc,EACpB,cAAe,GACX,IAAK,SACL,IAAK,WAED,GAAgB,OAAZ,EACA,OAAO,KACX,IAAM,EAAQ,OAAO,eAAe,GACpC,IAAK,EACD,OAAO,GACX,IAAI,EAAU,EAAS,IAAI,GAC3B,YAAI,EACA,OAAO,EACX,IAAM,GA7GE,EA6G2B,EA5GxC,GAAM,KAAK,GAAK,MAAM,GAAI,IA6Gf,EAAQ,OAAO,QAAQ,GAAU,MAAK,SAAA,GAAY,IAAmB,EAAI,EAAvB,EAAA,EAAA,EAAA,GAAV,EAAA,EAAA,GAAU,EAAA,EAAA,GAA2B,OAAoK,QAA5J,EAA+E,QAAzE,EAAK,MAAA,OAAA,EAAkD,EAAQ,YAAA,IAAkB,OAAA,EAAyB,EAAG,KAAK,EAAS,EAAS,UAAA,IAA0B,EAAgB,EAAK,IAAa,CAAW,IAU5S,OATA,EAAU,MAAA,OAAA,EAA8C,EAAM,MAE1D,EAAU,MAAM,QAAQ,GAClB,KACmB,mBAAZ,EACH,EAAS,UAAY,KACrB,IAEd,EAAS,IAAI,EAAO,GACb,EAEX,QACI,OAAO,EAAS,GAE5B,CA9BA,CA9DuC,GAC3B,OAAO,EACD,EAAQ,QAAQ,EAAS,EAAkB,GAC3C,CACV,GAAG,GACH,OAAO,CACX,EACA,MAAA,SAAM,EAAM,GACR,IAAM,EAAQ,GACd,OAAO,KAAK,MAAM,GAAM,SAAU,EAAK,GAInC,IAAM,EAAO,MAAA,OAAA,EAA8C,EAAM,GACjE,GAAI,EAAM,CACN,IAAM,EAAU,EAAS,GACzB,EAAQ,EACF,EAAQ,OAAO,EAAO,EAAkB,GACxC,CACV,CACA,IAmBQ,EACA,EApBJ,EAAM,EAAM,EAAM,OAAS,GAC/B,GAAI,GAAO,EAAI,KAAO,EAAO,CAGzB,EAAA,EAAA,GAAa,GAEb,IAAoB,EAApB,EAAA,EAAgB,EAAI,QAApB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAoB,QACT,EADA,EAAA,MACM,CAEjB,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,SAAA,EAAA,EAAA,EAAqB,OAAO,QAAQ,EAAI,IAAA,EAAA,EAAA,OAAA,IAAA,CAAnC,IAAA,EAAA,EAAA,EAAA,GAAA,GAAO,EAAA,EAAA,GAAG,EAAA,EAAA,GACX,EAAM,GAAK,CAEf,CAAA,EAAM,KACV,OAIA,IAAI,GAAmC,MAAX,EAAI,IAAsB,OAAR,MAC1C,EAAM,EAAM,EAAM,OAAS,KAGhB,EAAI,KAAO,MAClB,EAAU,EAAI,GACd,EAAO,EAAI,IAGX,EAAM,KAAK,CAAC,KAAO,EAAU,GAAM,EAAO,CAAC,IAEhC,MAAX,EAAI,IAAsB,OAAR,GAElB,EAAQ,KAAK,GACb,EAAK,EAAI,OAAO,IAAM,GAItB,EAAK,QAAA,GAGb,OAAO,CACX,GACJ,EAiCR,CAEA,IAAM,GAAmB,CACrB,KAAM,CACF,KAAM,SAAC,EAAM,GAAA,MAAgC,SAAhB,CAAA,EAC7B,QAAS,SAAC,EAAM,GACZ,IAAM,EAAI,EAAW,OAErB,OADA,EAAW,KAAK,GACT,CACH,GAAI,OACJ,SAAU,EAAK,KACf,EAAA,EACH,EAEL,OAAQ,SAAA,EAAkB,GAAA,IAAf,EAAA,EAAA,EAAG,EAAA,EAAA,SAAA,OAA2B,IAAI,KAAK,CAAC,EAAW,IAAK,CAAE,KAAM,GAAA,IAI/E,GAAY,CACZ,OAAQ,CACJ,QAAU,SAAA,GACN,WACI,KAAK,MAAM,GACP,MAAO,CAAE,GAAI,SAAU,EAAG,OAC9B,KAAK,IAAQ,IACT,MAAO,CAAE,GAAI,SAAU,EAAG,YAC9B,KAAK,KAAA,IACD,MAAO,CAAE,GAAI,SAAU,EAAG,aAC9B,QACI,OAAO,EACf,EAEJ,OAAQ,SAAA,GAAA,IAAG,EAAA,EAAA,EAAA,OAAQ,OAAO,EAAA,IAI5B,GAAY,CACd,OAAQ,CACJ,QAAU,SAAA,GAAA,MACC,CAAE,GAAI,SAAU,EAAG,GAAK,EAAA,EAEnC,OAAS,SAAA,GAAA,OAAQ,OAAO,EAAI,EAAA,IAIhC,GAAU,CACV,KAAM,CACF,QAAU,SAAA,GAAA,MAAS,CACf,GAAI,OACJ,EAAG,MAAM,EAAK,WAAa,MAAQ,EAAK,cAAA,EAE5C,OAAQ,SAAA,GAAA,IAAG,EAAA,EAAA,EAAA,OAAQ,IAAI,KAAW,QAAN,EAAc,IAAM,KAAK,MAAM,GAAA,IAI/D,GAAS,CACT,IAAK,CACD,QAAU,SAAA,GAAA,MAAQ,CACd,GAAI,MACJ,EAAG,MAAM,KAAK,EAAI,WAAA,EAEtB,OAAQ,SAAA,GAAA,IAAG,EAAA,EAAA,EAAA,OAAQ,IAAI,IAAI,EAAA,IAI/B,GAAS,CACT,IAAK,CACD,QAAU,SAAA,GAAA,MAAQ,CACd,GAAI,MACJ,EAAG,MAAM,KAAK,EAAI,WAAA,EAEtB,OAAQ,SAAA,GAAA,IAAG,EAAA,EAAA,EAAA,OAAQ,IAAI,IAAI,EAAA,IAI7B,GAAgC,oBAAf,WACjB,WACgB,oBAAT,KACH,KACkB,oBAAX,OACH,YAAA,EAGV,GAAkB,CAClB,YACA,aACA,oBACA,aACA,cACA,aACA,cACA,eACA,eACA,WACA,gBACA,kBACF,QAAO,SAAC,EAAO,GAAA,OAAA,EAAA,EAAA,GACV,GAAA,GAAA,EAAA,GACF,EAAW,CAMR,QAAS,SAAC,EAAG,EAAG,GAAA,MACG,CACX,GAAI,EACJ,EAAG,EAAS,YAAY,QAAyB,IAAjB,EAAE,YAAoB,EAAE,aAAe,EAAE,OAAO,WAC1E,EAAE,OACF,EAAE,OAAO,MAAM,EAAE,WAAY,EAAE,WAAa,EAAE,YAAa,EAAG,GAAU,EAAA,EAItF,OAAQ,SAAA,EAAQ,EAAG,GAAA,IAAR,EAAA,EAAA,EACD,EAAa,GAAQ,GAC3B,OAAQ,GACJ,IAAI,EAAW,EAAS,YAAY,OAAO,CAAE,EAAA,GAAK,EAAG,GAAW,OAG5E,CAAC,GAEL,SAAS,GAAa,GAClB,OAKJ,SAAkB,GAEd,IADA,IAAI,EAAU,GACL,EAAI,EAAG,EAAS,EAAO,OAAQ,EAAI,EAAQ,IAChD,GAAW,GAAa,EAAO,IAEnC,OAAO,CACX,CANA,CALoB,GAAU,GAC9B,CA0FA,IApEA,IAAM,GAAe,CACje,CAAC,EACtB,GAAA,EAAA,GAAgB,OAAO,KAAK,IAAA,GAAA,GAAA,OAAA,KAAA,CAAvB,IAAM,GAAA,GAAA,IACP,GAAa,GAAa,KAAM,EAGpC,KAAI,GAAiB,CACjB,YAAa,CACT,QAAU,SAAA,GAAA,MAAO,CACb,GAAI,cACJ,EAAG,GAAa,GAAA,EAEpB,OAAQ,SAAA,GAAG,IACD,EApGlB,SAAsB,GAClB,OAAO,GASX,SAAkB,GAEd,GAAyB,iBAAd,EACP,MAAM,IAAI,MAAM,0BAA4B,GAGhD,IADA,IAAI,EAAS,GACJ,EAAI,EAAG,EAAS,EAAU,OAAQ,EAAI,EAAQ,IACnD,GAAU,GAAa,EAAU,IAErC,OAAO,CACX,CAVA,CAT8B,GAC9B,CAkGuB,CADJ,EAAA,GAEP,OAAO,EAAG,OAAO,aAAe,EAAG,WAC7B,EAAG,OACH,EAAG,OAAO,MAAM,EAAG,WAAY,EAAG,WAAa,EAAG,WAAW,IAKzE,GAAA,GACF,SAAA,EAAY,EAAK,GAAA,EAAA,KAAA,GACb,KAAK,IAAM,EACX,KAAK,KAAO,CAChB,IAGJ,SAAS,GAAa,GAClB,IAAM,EAAM,IAAI,eAIhB,GAHA,EAAI,iBAAiB,sCACrB,EAAI,KAAK,MAAO,IAAI,gBAAgB,IAAA,GACpC,EAAI,OACe,MAAf,EAAI,QAAiC,IAAf,EAAI,OAC1B,MAAM,IAAI,MAAM,oBAAsB,EAAI,QAE9C,OAAO,EAAI,YACf,CAEA,SAAS,GAAmB,GAExB,IADA,IAAM,EAAQ,IAAI,WAAW,EAAI,QACxB,EAAI,EAAG,EAAI,EAAI,SAAU,EAC9B,EAAM,GAAK,EAAI,WAAW,GAE9B,OAAO,EAAM,MACjB,CAEA,IAAI,GAAU,CACV,KAAM,CACF,KAAM,SAAC,EAAM,GAAA,MAAgC,SAAhB,GAA0B,aAAgB,EAAA,EACvE,QAAU,SAAA,GAAA,MAAS,CACf,GAAI,OACJ,EACM,GADH,aAAgB,GACH,EAAK,IACL,GAAmB,GAAa,KAChD,KAAM,EAAK,KAAA,EAEf,OAAQ,SAAA,GAAS,IAAN,EAAA,EAAA,KAAM,EAAA,EAAA,EACP,EAAK,GAAU,GACrB,uBAAc,KACR,IAAI,KAAK,CAAC,IACV,IAAI,GAAS,EAAG,OAAQ,EAAK,IAKzC,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACC,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IAqDP,SAAS,GAAe,GACpB,OAAO,IAAI,SAAQ,SAAC,EAAS,GACzB,IAAM,EAAS,IAAI,WACnB,EAAO,QAAW,SAAA,GAAA,OAAO,EAAO,IAAI,MAAM,uBAC1C,EAAO,QAAW,SAAA,GAAA,OAAO,EAAO,EAAG,OAAO,MAAA,EAC1C,EAAO,OAAU,SAAA,GAAA,OAAO,EAAQ,EAAG,OAAO,OAAA,EAC1C,EAAO,kBAAkB,EAAK,GAEtC,CAUA,IAwBM,GAAqC,mBAAX,QAA8C,iBAAd,OAAO,GACjE,GAAA,WAIF,SAAA,EAAY,GAAA,EAAA,KAAA,GACR,KAAK,EAAI,CACb,CAFA,OAEA,EAAA,EAAA,EAAA,IAAA,WAAA,MALA,WACI,OAAO,KAAK,CAChB,KACA,CAAA,CAJE,GAQA,GAAO,OAAO,OAAO,OAAO,OAAO,CAAC,EAjCvB,CACf,UAAW,CACP,QAAS,iBAAM,CACX,GAAI,cAER,OAAQ,WAAe,KA4B8B,GACvD,CAAC,EACD,CACE,OAAQ,CACJ,KAAO,SAAA,GAAA,OAAQ,aAAe,EAAA,EAC9B,QAAU,SAAA,GAAA,OACC,OAAO,OAAO,CAAE,GAAI,UAAY,EAAA,EAE3C,OAAQ,SAAA,GAAA,IAAG,EAAA,EAAA,EAAA,OAAS,IAAI,GAAW,EAAA,KAGzC,GAAO,GAAkB,GAAS,IAClC,GAjHN,WAAkB,QAAA,EAAA,UAAA,OAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GACd,IAAM,EAAO,GAAA,WAAA,GAAkB,GAAS,IAAA,OAAqB,IAC7D,MAAO,CACH,SAAA,SAAS,GACL,IAAoC,EAAA,EAAf,KAAK,UAAU,GAAA,GAA7B,EAAA,EAAA,GAAM,EAAA,EAAA,GACP,EAAS,IAAI,YAAY,GAE/B,OADA,IAAI,SAAS,GAAQ,UAAU,EAAG,EAAK,MAChC,IAAI,KAAK,CAAC,EAAQ,EAAM,GACnC,EACA,UAAA,SAAU,GACN,IAAM,EAAW,GACX,EAAO,EAAK,UAAU,EAAO,GAC7B,EAAO,IAAI,KAAK,EAAS,KAAK,SAAA,GAChC,IAAM,EAAS,IAAI,YAAY,GAE/B,OADA,IAAI,SAAS,GAAQ,UAAU,EAAG,eAAgB,EAAI,EAAE,WAAa,EAAE,MAChE,IAAI,KAAK,CAAC,EAAQ,GAAG,KAEhC,MAAO,CAAC,EAAM,EAClB,EACA,MAAM,SAAM,EAAM,GAAA,OAAA,EAAA,IAAA,MAAA,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAEO,OADjB,EAAM,EACJ,EAAe,GAAA,EAAA,KAAA,EACH,GAAe,GAAA,OAEjC,IAFM,EAAA,EAAA,KACA,EAAO,IAAI,SAAS,GACnB,EAAM,EAAI,YACP,EAAM,EAAK,UAAU,GAC3B,GAAO,EACD,EAAK,EAAI,MAAM,EAAK,EAAM,GAChC,GAAO,EACP,EAAa,KAAK,GAEtB,OAAA,EAAA,OAAA,SAAO,EAAK,MAAM,EAAM,IAC5B,wBAAA,EAAA,OAAA,GAAA,EAAA,IAbkB,EAalB,EACA,WAAM,SAAW,GAAA,IAAA,EAAA,YAAA,EAAA,IAAA,MAAA,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OACG,OADH,EAAA,GACG,SAAA,EAAA,KAAA,EAAe,GAAe,EAAK,MAAM,EAAG,WACxB,OADwB,EAAA,GAAA,EAAA,KAAtD,EAAA,IAAA,EAAA,GAAA,EAAA,IAA2D,UAAU,GACrE,EAAU,EAAK,MAAM,EAAG,EAAM,GAAA,EAAA,KAAA,EAMhD,SAAkB,GACd,OAAO,IAAI,SAAQ,SAAC,EAAS,GACzB,IAAM,EAAS,IAAI,WACnB,EAAO,QAAW,SAAA,GAAA,OAAO,EAAO,IAAI,MAAM,uBAC1C,EAAO,QAAW,SAAA,GAAA,OAAO,EAAO,EAAG,OAAO,MAAA,EAC1C,EAAO,OAAU,SAAA,GAAA,OAAO,EAAQ,EAAG,OAAO,OAAA,EAC1C,EAAO,WAAW,EAAK,GAE/B,CARA,CALwC,EAAK,MAAM,EAAM,WAAvC,OAAA,EAAA,EAAA,KAAA,EAAA,KAAA,GACO,EAAK,MAAM,EAAM,GAClC,eAAA,EAAA,OAAA,SAAA,EAAA,MAAA,yBAAA,EAAA,OAAA,GAAA,EAAA,IALiB,EAKjB,EAER,CAxCA,CAiHoB,IAEd,GAAA,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GACF,SAAA,EAAY,EAAK,GAAA,IAAA,EAGjB,OAHiB,EAAA,KAAA,IACb,EAAA,EAAA,KAAA,KAAM,GAAA,GAAA,OAAc,EAAI,OAAA,KAAA,OAAU,EAAI,cACjC,WAAa,EAAI,OAC1B,CAAA,CAGA,OAFA,EAAA,EAAA,EAAA,IAAA,OAAA,IAAA,WACI,MAAO,WACX,KAAA,CAAA,CAPE,CAOF,EAPoB,QAUxB,SAAS,GAAmB,EAAQ,EAAa,GAC7C,IACmB,EADb,EAAK,GACX,EAAA,EAAmB,GAAA,QAAA,EAAA,WAAS,IAAnB,EAAA,EAAA,MACG,EAAgB,EAAlB,MAAS,EAAS,EAAX,KACP,EAAc,EAAO,OAAO,MAAM,SAAA,GAAA,OAAM,EAAE,OAAS,CAAA,IACzD,IAAK,EACD,MAAM,IAAI,MAAA,yBAAA,OAA+B,EAAA,gCAC7C,IAAQ,EAAe,EAAjB,WACF,EAAc,EAClB,EAAK,SAAQ,SAAC,EAAK,GACf,IAAM,GAAiB,EAAW,WAChB,WAAb,EAAI,MAAkC,WAAb,EAAI,MAClC,EAAI,KAAK,SAAQ,SAAC,EAAK,GACnB,GAAI,MAAM,QAAQ,GAAM,CAEhB,IAAgB,IAChB,EAAc,GAAY,EAAQ,IACtC,IAAM,EAAW,EAAY,KAAK,GAC5B,EAAe,KAAK,UAAU,GACpC,EAAS,KAAK,GAAY,CAc9B,MACK,GAAe,MAAX,EAAI,GAAY,CAEjB,IAAgB,IAChB,EAAc,GAAY,EAAQ,IACtC,IAAM,EAAW,EAAY,KAAK,GAClC,IAAK,EAAY,WACb,MAAM,IAAI,MAAM,gEACpB,IAAM,EAAA,GAAA,OAAkB,EAAA,KAAA,OAAO,EAAY,QAC3C,EAAS,KAAK,GAAY,EACtB,GACA,GAAM,aAAa,EAAS,OAAO,GAAW,EAAW,QAAS,EAE1E,IACF,IAEN,EAAG,KAAK,EACZ,EAhDA,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,GAiDA,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,QAAO,CACX,CACA,SAAS,GAAY,EAAQ,GAEzB,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAS,CAAE,KAAM,EAC9C,EAAO,KAAK,KAAK,SAAA,GAAA,MACI,WAAX,EAAE,MAAgC,WAAX,EAAE,OAAsB,EAAE,OACuC,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAI,CAAE,KAAM,EAAE,KAAK,UAA7I,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAI,CAAE,KAAM,EAAE,KAAK,QAAS,OAAQ,EAAE,OAAO,SAAA,IAErF,EAAO,KAAK,KAAK,SAAA,GAAA,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAI,CAAE,KAAM,EAAE,KAAK,SAAA,KACzF,CAKA,IAAI,GAAsB,IAAI,QAC9B,SAAS,GAAwB,GAC7B,IAAI,EAAI,EACR,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAEX,GADlB,GAAqH,QAA/F,EAA4C,QAAtC,EAAK,GAAoB,IAAI,UAAA,IAAiB,OAAA,EAAyB,EAAG,iBAAA,IAAuB,EAAgB,EAAK,GAAK,KAAK,MAAA,EAAA,GAC9J,EAAoB,GAAA,EAAA,GAAA,CAAA,EAAA,KAAA,eAAA,EAAA,KAAA,EAEd,IAAI,SAAQ,SAAA,GAAA,OAAW,WAAW,EAAS,EAAA,4BAAA,EAAA,OAAA,GAAA,EAAA,IAG7D,CAsBA,SAAS,GAAe,EAAS,EAAW,EAAU,EAAI,EAAa,EAAQ,EAAgB,GAC3F,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAQ7B,OAJA,EAAU,CACZ,OAAQ,oEACR,eAAgB,oBAAA,EAAA,KAAA,EAEM,GAAgB,GAAA,OAkCpC,OAlCA,EAAA,EAAA,MAWA,EAAc,MAAA,OAAA,EAA0D,EAAY,eAEtF,EAAQ,cAAA,UAAA,OAA0B,IAEhC,EAAc,CAChB,EAAG,EACH,KAAM,MAAA,OAAA,EAAsD,EAAU,WACtE,eAAA,EACA,OAAQ,GAAU,CAAC,EACnB,SAAU,EACJ,CACE,eAAgB,EAAU,eAC1B,OAAQ,EAAU,OAClB,aAAc,EAAU,mBAAA,EAGhC,SAAA,EACA,QAAS,GAAmB,EAAG,GAAG,KAAK,OAAQ,EAAa,IAGhE,EAAG,sBAAsB,KAAK,CAC1B,MAAO,YAEX,EAAA,KAAA,GAAkB,MAAA,GAAA,OAAS,EAAA,SAAoB,CAC3C,OAAQ,OACR,QAAA,EACA,YAAa,UACb,KAAM,GAAK,UAAU,KAAA,QAJnB,GAAA,EAAA,EAAA,KAON,EAAG,sBAAsB,KAAK,CAC1B,MAAO,YAxEnB,SAAmC,EAAI,GACnC,IAAM,EAAQ,EAAI,QAAQ,IAAI,mBACxB,EAAY,EAAI,QAAQ,IAAI,uBAC5B,EAAQ,EAAI,QAAQ,IAAI,mBAC9B,GAAI,GAAS,GAAa,EAAO,CAC7B,IAAM,EAAW,OAAO,GAClB,EAAe,KAAK,IAAI,EAAG,OAAO,IAClC,EAAqB,OAAO,GAClC,GAAI,EAAe,EAAW,EAAG,CAC7B,IAAM,EAAQ,KAAK,KAAK,GAAsB,EAAe,IAC7D,GAAoB,IAAI,EAAI,IAAI,KAAK,KAAK,MAAgB,IAAR,GAEtD,MAEI,GAAoB,OAAO,EAGnC,CACJ,CAlBA,CA0EkC,EAAI,GACzB,EAAI,GAAA,CAAA,EAAA,KAAA,eACC,IAAI,GAAU,GAAA,WAGf,wBADD,EAAI,QAAQ,IAAI,iBAAA,EAAA,KAAA,SAEH,OAFG,EAAA,GAET,GAAA,EAAA,KAAA,GAAuB,EAAI,OAAA,eAAA,EAAA,GAAA,EAAA,KAAA,EAAA,OAAA,SAAA,EAAA,GAArB,WAAA,KAAA,EAAA,GAAA,EAAA,KAAA,QAIP,OAJO,EAAA,KAAA,GAIM,EAAI,OAAA,QAAjB,OAAA,EAAA,EAAA,KAAA,EAAA,OAAA,SACU,GAAK,MAAM,IAE/B,yBAAA,EAAA,OAAA,GAAA,EAAA,IAGZ,CAuCA,SAAS,GAAiB,GACtB,GAAI,MAAA,OAAA,EAA0D,EAAY,UACtE,MAAM,IAAI,GAAM,WAAW,0BACnC,CAMA,IAAI,IAAA,EAOJ,SAAS,GAAe,EAAI,EAAQ,EAAiB,GACjD,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,cAAA,EAAA,KAAA,EAC7B,EAAG,UAAU,QAAQ,OAAO,KAAK,GAClC,QAAQ,SAAA,GAAA,OAAU,EAAO,GAAO,aAAA,IAChC,KAAK,SAAA,GAAA,MAEC,CACH,UAAA,EACA,WAHqC,EAAgB,IAAc,GAGrB,EAC9C,UAAA,EAAA,KAGZ,wBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CAEA,SAAS,GAA2B,GAAkC,IACpC,EADmB,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAgB,CAAC,EAAA,EAAA,EACpC,GAAA,IAA9B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAA+C,KAAA,EAAA,EAAA,MAAlC,EAAA,EAAF,MAAS,EAAA,EAAF,KACR,EAAU,EAAK,OAAS,EAAI,EAAK,EAAK,OAAS,GAAG,IAAM,KAC9D,EAAc,GAAS,GAAW,EAAc,IAAU,CAC9D,CACA,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,QAAO,CACX,CAEA,SAAS,GAAW,EAAO,EAAM,GAC7B,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAC7B,OAD6B,EAAA,KAAA,EAChB,EAAM,QAAQ,GAAA,OAkB7B,OAlBE,EAAA,EAAA,KACA,EAAa,GACb,EAAa,GACnB,EAAK,SAAQ,SAAC,EAAK,GACf,IAAM,EAAM,EAAK,GACjB,GAAI,EAAK,CACL,QAAA,EAAA,EAAA,EAA+B,OAAO,QAAQ,EAAY,IAAA,EAAA,EAAA,OAAA,IAAA,CAArD,IAAA,EAAA,EAAA,EAAA,GAAA,GAAO,EAAA,EAAA,GAAS,EAAA,EAAA,GACjB,GAAI,IAAY,EAAM,OAAO,QAAQ,SACjC,GAAwB,IAApB,GAAI,EAAO,GACX,MAAM,IAAI,MAAM,kCAIpB,GAAM,aAAa,EAAK,EAAS,EAGzC,CAAA,EAAW,KAAK,GAChB,EAAW,KAAK,EACpB,KAAA,EAAA,KAAA,EAEmC,MAAhC,EAAM,OAAO,QAAQ,QACtB,EAAM,QAAQ,EAAY,GAC1B,EAAM,QAAQ,GACxB,wBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CAEA,SAAS,GAAmB,EAAS,GACjC,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAAA,EAAA,EAEM,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,MAAA,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OACd,GADc,EAAA,EAAA,MAArB,EAAA,EAAP,MAAkB,EAAA,EAAF,KACnB,EAAQ,EAAG,MAAM,GAClB,CAAA,EAAA,KAAA,eAAA,EAAA,OAAA,4BAEG,EAAe,EAAM,KAAK,OAA5B,WACA,EAAc,SAAA,GAChB,OAAQ,EAAI,IACR,IAAK,IAED,GAAI,EAAI,SAAS,KACb,IAEI,OAAO,KAAK,MAAM,EACtB,CACA,MAAO,GAAM,CACjB,OAAO,EACX,IAAK,IAED,OAAI,EAAI,SAAS,IAAM,EAAG,MAAM,eACrB,EAAI,OAAO,EAAG,EAAI,OAAS,EAAG,MAAM,cAAc,OAAS,GAE/D,EACX,QACI,OAAO,EACf,EAAA,EAAA,EAEc,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,MAAA,SAAA,IAAA,IAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAAP,EAAA,EAAA,MACD,EAAO,EAAI,KAAK,IAAI,GAAA,EAAA,GAClB,EAAI,KAAA,EAAA,KACH,WADG,EAAA,GACH,EAYA,WAZA,EAAA,GAYA,GAYA,WAZA,EAAA,GAYA,GAQA,WARA,EAAA,GAQA,GAGA,WAHA,EAAA,GAGA,uBAlCG,EAAW,SAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,EACL,EAAM,QAAQ,EAAI,OAAQ,GAAA,OAAA,EAAA,KAAA,iBAK8B,OAF9D,EAAK,SAAQ,SAAC,EAAK,GAEf,GAAM,aAAa,EAAI,OAAO,GAAI,EAAW,QAAS,EAAI,IAAA,EAAA,KAAA,GAExD,EAAM,QAAQ,EAAI,QAAA,QAYA,QAQwB,QAIlB,eAAA,EAAA,OAAA,YAxBN,YAIxB,EAAW,SAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,GACL,EAAM,QAAQ,EAAI,OAAQ,GAAA,QAAA,EAAA,KAAA,iBAK8B,OAF9D,EAAK,SAAQ,SAAC,EAAK,GAEf,GAAM,aAAa,EAAI,OAAO,GAAI,EAAW,QAAS,EAAI,IAAA,EAAA,KAAA,GAExD,EAAM,QAAQ,EAAI,QAAA,WAIR,IAAhB,EAAK,OAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,GACC,EAAM,OAAO,EAAK,GAAI,EAAI,YAAA,QAAA,EAAA,KAAA,wBAAA,EAAA,KAAA,GAG1B,EAAM,MAAM,OAAO,MAAM,GAAM,OAAO,EAAI,YAAA,QAGnD,OAHmD,EAAA,KAAA,GAI9C,GAAW,EAAO,EAAM,EAAI,aAAA,QAEjC,OAFiC,EAAA,KAAA,GAG5B,EAAM,WAAW,GAAA,yBAAA,EAAA,OAAA,GAAA,EAAA,IAAA,EAAA,IAAA,WAAA,EAAA,EAAA,KAAA,KAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,cAAA,IAAA,iBAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,6BAAA,EAAA,OAAA,GAAA,EAAA,wBAAA,EAAA,IAAA,WAAA,EAAA,EAAA,KAAA,KAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,cAAA,IAAA,+BAAA,EAAA,GAAA,CAAA,EAAA,KAAA,eAAA,EAAA,OAAA,qBAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,6BAAA,EAAA,OAAA,GAAA,EAAA,wBAM/C,CAnIoB,oBAAT,MAA6C,oBAAd,YACtC,GAAW,UAAU,OACrB,KAAK,iBAAiB,UAAU,kBAAM,IAAA,CAAW,IACjD,KAAK,iBAAiB,WAAW,kBAAM,IAAA,CAAW,KAkItD,IAAM,GAAsB,oBAC5B,SAAS,GAAK,EAAI,EAAS,EAAQ,GAAA,IAAA,EAAA,KAC/B,OAAO,GACF,MAAM,KAAM,WACZ,MAAM,SAAA,GAAA,OACD,MAAA,OAAA,EAA0D,EAAY,oBACxE,EAAG,sBAAsB,KAAK,CAC1B,MAAO,YAGR,CAAA,IAEN,OAAO,SAAA,GAAA,OAAU,GAAU,OAAA,OAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,YAC9C,MAAA,OAAA,EAA0D,EAAY,mBAAA,CAAA,EAAA,KAAA,QAAA,EAAA,GAC/D,QAAQ,OAAO,GAAA,EAAA,KAAA,qBAMtB,KACC,MAAA,OAAA,EAA0D,EAAY,+BACR,eAA9D,MAAA,OAAA,EAA8C,EAAM,OACrD,QAAQ,KAAK,MAAA,OAAA,EAA8C,EAAM,UAAA,CAAA,EAAA,KAAA,SAG7D,OAFJ,EAAG,sBAAsB,KAAK,CAC1B,MAAO,QACP,MAAA,IAAA,EAAA,KAAA,EAGE,IAAI,SAAS,SAAA,GAAA,OAAY,WAAW,EAAS,sBAAA,EAAA,KAAA,GACtC,GAAK,EAAI,EAAS,EAAQ,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAc,CAAE,8BAAA,KAA8B,QAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,wBAAA,EAAA,KAAA,GAInH,EAAG,WAAW,OAAO,YAAa,CACpC,UAAW,IAAI,KACf,MAAO,GAAK,IAAA,QAEhB,EAAG,sBAAsB,KAAK,CAC1B,MAAO,GAAW,QAAU,UAC5B,MAAO,IAAI,MAAM,IAAM,MAAA,OAAA,EAA8C,EAAM,UAAY,KAAA,EAAA,GAEpF,QAAQ,OAAO,GAAA,QAAA,EAAA,GAAA,EAAA,GAAA,eAAA,EAAA,OAAA,SAAA,EAAA,IAAA,yBAAA,EAAA,OAAA,GAAA,EAAA,IAC1B,GACJ,CACA,SAAS,GAAM,EAAI,EAAS,GACT,IAEX,EAFW,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAD8E,CAC7F,eAAA,GADkC,EAAA,EAAF,cAAiB,EAAA,EAAF,YAAe,EAAA,EAAF,kBAAqB,EAAA,EAAF,QAI/E,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,YAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,UAID,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,YAAA,CAAA,EAAA,KAAA,cAC5D,IAAI,MAAM,oFAEd,OADE,EAAgB,EAAlB,YAAA,EAAA,KAAA,EACoB,EAAG,iBAAA,OASvB,OATA,EAAA,EAAA,KACA,EAAe,EAAY,WAAa,GAAkB,GAAM,GAChE,EAAiB,EAAa,KAAK,SAAA,GAAA,OAAQ,EAAG,MAAM,GAAiB,EAAI,MAAA,IAAA,EAAA,KAAA,GAO9C,EAAG,wBAAA,QAMO,GANrC,EAAA,EAAA,KACA,GAAyB,GAAiB,EAAY,WACtD,EAAkB,EAlxChC,SAA4B,EAAI,GAC5B,IAAM,GAAgB,MAAA,OAAA,EAAsD,EAAU,eAAiB,GAGvG,OAFuB,GAAkB,GACF,QAAQ,SAAA,GAAA,OAAS,EAAa,SAAS,EAAI,KAAA,GAEtF,CALA,CAmxCiC,EAAI,GACvB,GACN,GAAiB,KACX,EAAY,EAAgB,OAAS,GACvC,CAAA,EAAA,KAAA,aACI,EAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,OAAA,UACA,GAAO,eAAA,EAAA,KAAA,GAEL,EAAG,YAAY,KAAM,GAAkB,SAAA,GAAA,OAAO,GAAU,OAAA,OAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAI7C,OAFnC,EAAG,SAAS,uBAAA,EAEZ,EAAG,SAAS,sBAAA,EAAuB,EAAA,KAAA,EApQnD,SAAyC,EAAiB,EAAa,GACnE,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAC7B,EAAgB,IAAI,IAAI,GAAuB,IAAA,EAAA,EACjC,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,WAAA,EAAA,EAAA,KAAA,KAAA,CAAA,EAAA,KAAA,SAAT,GACY,aADZ,EAAA,EAAA,OACG,KAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,EAEA,EAAM,eAAe,QAAQ,SAAA,GAC1B,EAAc,IAAI,EAAO,UAAc,EAAO,QAAU,EAAO,SAAW,GAAkB,SAC7F,EAAO,OAAS,EAAY,OAChC,WAAA,EAAA,KAAA,iBAGO,GAHP,EAAA,GAGgB,UAAf,EAAM,KAAA,EAAA,GAAA,CAAA,EAAA,KAAA,YACS,WAAf,EAAM,KAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,GAEL,EAAM,eAAe,QAAQ,SAAA,GAC1B,EAAc,IAAI,EAAM,eAAA,IAAa,EAAM,OAAuB,EAAM,QAAU,GAAkB,SACrG,EAAM,MAAQ,EAAY,OAC9B,YAAA,EAAA,KAAA,wBAAA,EAAA,KAAA,GAKE,EAAM,eAAe,QAAQ,SAAA,GAC1B,EAAI,SAAY,EAAc,IAAI,EAAI,WAClC,EAAI,OAAS,EAAI,QAAU,GAAkB,SAC9C,EAAI,MAAQ,EAAY,QACvB,EAAI,SAAW,EAAI,UAAY,GAAkB,SAClD,EAAI,QAAU,EAAY,QAElC,YAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,6BAAA,EAAA,OAAA,GAAA,EAAA,wBAKpB,CAnCA,CAqQsD,EAAiB,EAAa,MAAA,OAAA,EAAwE,EAAmB,QACnK,wBAAA,EAAA,OAAA,GAAA,EAAA,gBACA,GAAiB,GACrB,QAImC,OAJnC,EAAA,KAAA,GAIqD,EAAG,YAAY,IAAK,EAAG,QAAQ,kBAAM,GAAU,OAAA,OAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAChH,OADgH,EAAA,KAAA,EAC9F,EAAG,wBAAA,OACrB,OADA,EAAA,EAAA,KAAA,EAAA,KAAA,EACiB,EAAG,UAAU,UAAA,OAChC,OADE,EAAA,EAAA,KAAA,EAAA,KAAA,EACoB,GAAkB,GAAA,OAAxC,GAAA,EAAA,EAAA,KACJ,GAAiB,IACb,EAAA,CAAA,EAAA,KAAA,SAKM,OAJA,EAAA,GAAA,OAAA,GACG,MAAA,OAAA,EAAwE,EAAmB,SAAW,IAAA,GACtG,MAAA,OAAA,EAAwE,EAAmB,eAAiB,KAAA,EAAA,KAAA,GAn2CrI,SAA8B,EAAiB,EAAa,EAAQ,GAChE,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,YAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OACG,GAAhC,EAAA,UAAA,OAAiB,GAAe,MAClC,EAAY,YACR,EAAgB,OAAS,IAAA,EAAA,KAAA,QAyCzB,OAxCM,EAAgB,IAAI,IAAI,GAAuB,IAAA,EAAA,KAAA,EAC/B,QAAQ,IAAI,EAAgB,KAAK,SAAA,GAAA,OAAU,GAAU,OAAA,OAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OACvF,GAAE,EAAe,EAAM,KAAK,OAAO,WAAnC,WACD,CAAA,EAAA,KAAA,eAAA,EAAA,OAAA,SACM,CAAE,MAAO,EAAM,KAAM,KAAM,YAehC,OAdA,EAAwB,EAAO,EAAM,MACrC,GAAS,MAAA,OAAA,EAA8E,EAAsB,mBAC7G,EAAM,QAAQ,SAAA,GAEZ,OADA,EAAW,IACF,EAAc,IAAI,EAAK,SAAW,MApNlD,EAsNuB,EAAW,KAtN9B,EAsNqC,MAAA,OAAA,EAA8E,EAAsB,WArN3H,iBAAP,GAAmB,EAAG,WAAW,IADjE,IAAqB,EAAI,CAsNmJ,IAElJ,EAAM,QAAQ,SAAA,GACZ,IAAM,EAAK,EAAW,GACtB,OAAS,EAAc,IAAI,EAAK,SAAW,KAEvC,GAAkB,EAAI,IAAA,EAAA,KAAA,EAEJ,EAAM,UAAA,OAA9B,MAAA,EAAA,EAAA,MACc,OAAS,IAAA,EAAA,KAAA,SAMrB,OALE,EAAM,CACR,KAAM,SACN,OAAQ,EACR,KAAM,EAAgB,IAAI,GAC1B,OAAQ,EAAY,OACpB,KAAA,GAAA,EAAA,OAAA,SAEG,CACH,MAAO,EAAM,KACb,KAAM,CAAC,KAEf,eAAA,EAAA,OAAA,SAEW,CACH,MAAO,EAAM,KACb,KAAM,KAGlB,yBAAA,EAAA,OAAA,GAAA,EAAA,uBAAA,EAAA,OAAA,SAAA,EAAA,KACe,QAAQ,SAAA,GAAA,OAAO,EAAG,KAAK,OAAS,oBAAA,EAAA,OAAA,SAGhD,IACX,wBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CAlDA,CAq2CwE,EAAiB,EAAa,EAAQ,GAAA,QAAxF,OAAA,EAAA,EAAA,KAAA,EAAA,OAAA,UACN,GAAiB,GAEV,CADP,EAAgB,EAAc,OAAO,GACd,EAAW,KACtC,eAAA,EAAA,OAAA,SACO,CAAC,EAAe,EAAW,IACtC,yBAAA,EAAA,OAAA,GAAA,EAAA,gBACgG,GADhG,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,GAhBO,EAAA,EAAA,GAAiB,EAAA,EAAA,GAAW,EAAA,EAAA,GAiB7B,EAAmB,EAAgB,MAAM,SAAA,GAAA,OAAQ,EAAI,KAAK,MAAM,SAAA,GAAA,OAAQ,EAAI,KAAK,OAAS,SAC5F,EAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,OAAA,SAEO,GAAA,WAEK,SAAZ,GAAuB,EAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,OAAA,UAEvB,GAAO,QAQL,OANA,EAAkB,GAA2B,EAAiB,MAAA,OAAA,EAAsD,EAAU,iBAC9H,GAAkB,MAAA,OAAA,EAAsD,EAAU,iBAAmB,GAAa,IAIxH,GAAiB,GACjB,EAAA,KAAA,GAAkB,GAAe,EAAiB,EAAW,EAAU,EAAI,EAAa,EAAQ,EAAgB,GAAA,QAK1G,OALA,EAAA,EAAA,KAAA,EAAA,KAAA,GAKa,EAAG,YAAY,KAAM,EAAG,QAAS,SAAA,GAAA,OAAO,GAAU,OAAA,OAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAOvF,IALA,EAAG,SAAS,uBAAA,EAEZ,EAAG,SAAS,sBAAA,EAGZ,EAAA,EAAA,EAAwB,OAAO,KAAK,GAAA,EAAA,EAAA,OAAA,IAAzB,EAAA,EAAA,GACH,EAAI,OAAO,KAEX,EAAO,GAAa,EAAI,OAAO,IAAA,OAAA,EAAA,KAAA,EAGjC,EAAG,WAAW,IAAI,EAAQ,iBAE1B,OAF0B,EAAA,KAAA,EAEC,GAAkB,EAAgB,EAAI,CACnE,MAAO,IAAA,OADL,EAAA,EAAA,KAAA,EAAA,EAOiB,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,MAAA,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OACkC,GAD9C,EAAA,EAAA,MACD,EAAY,GAA0B,EAAS,OAChD,EAAmB,MAAM,SAAA,GAAA,OAAO,EAAG,QAAU,GAAa,EAAG,KAAK,OAAS,MAAA,EAAA,KAAA,YAUvE,EAAgB,GAAA,CAAA,EAAA,KAAA,QAC2B,OAA1C,EAAY,EAAgB,IAAc,EAAA,EAAA,KAAA,EAC1C,QAAQ,IAAI,CACd,EAAS,MAAM,OAAO,aAAa,GAAW,SAC9C,EAAG,UACE,MAAM,OACN,QAAQ,CAAC,GAAA,KAAuB,CAAC,EAAW,EAAY,OAAI,GAC5D,UACA,OAAO,GACP,WAEb,OAAA,EAAA,KAAA,uBAAA,EAAA,KAAA,GAhBU,QAAQ,IAAI,CACd,EAAS,QACT,EAAG,UAAU,MAAM,CAAE,UAAA,IAAa,WAgB9C,yBAAA,EAAA,OAAA,GAAA,EAAA,IAAA,EAAA,IAAA,YAAA,EAAA,EAAA,KAAA,KAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,cAAA,IAAA,iBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,YAE+C,OAA/C,GAA2B,EAAoB,GAAA,EAAA,KAAA,GASzC,GAAe,EAAI,EAAQ,EAAiB,EAAI,gBAAA,QAChD,OADgD,EAAA,KAAA,GAC9B,EAAG,wBAAA,eAArB,EAAA,EAAA,KAAA,EAAA,KAAA,GAiDlB,SAAwC,EAAI,EAAK,GAC7C,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAC7B,EAAgB,IAAI,IACpB,EAAiB,IAAI,IACrB,EAAmB,EAAY,EAAU,OAAS,GAClD,EAAyB,EAAY,EAAU,aAAe,GAC9D,EAAkB,IAAI,IAAI,EAAI,QAC9B,EAAuB,IAAI,IAAI,EAAI,OAAO,OAAO,EAAI,eAAA,EAAA,EACrC,GAAA,IAAtB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAW,EAAA,EAAA,MACF,EAAgB,IAAI,KACrB,EAAe,IAAI,GACd,EAAqB,IAAI,IAC1B,EAAc,IAAI,GAI9B,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,CAAA,EAAA,EAAsB,EAAuB,OAAO,IAAA,IAApD,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAW,EAAA,EAAA,MACF,EAAqB,IAAI,IAC1B,EAAc,IAAI,EAG1B,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,MAAI,EAAc,KAAO,GAAK,EAAe,KAAO,IAAA,EAAA,KAAA,SAC1C,EAAS,GAAkB,GAAA,EAAA,EACb,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,MAAA,SAAA,IAAA,IAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAIG,GAJZ,EAAA,EAAA,MACH,EAAiB,CAAC,SAAU,UAAW,SAAS,SAAS,EAAM,MAC7D,EACA,EAAA,EAAA,GACsB,IAAxB,EAAe,MAAA,EAAA,GAAA,CAAA,EAAA,KAAA,aAEf,EAAM,OAAO,QAAQ,MAAM,SAAA,GAAA,MAAwB,YAAhB,EAAI,SACtC,MAAM,QAAQ,EAAI,UAA+B,YAAnB,EAAI,QAAQ,OAAA,EAAA,KAAA,eAAA,EAAA,KAAA,EAGrC,EACD,MAAM,WACN,MAAA,EAAU,IACV,SAAA,OAAA,EAAA,KAAA,uBAAA,EAAA,KAAA,GAKC,EACD,QAAQ,SAAA,GAAA,SAAW,MAAA,OAAA,EAA0C,EAAI,UAAY,EAAe,IAAI,EAAI,QAAA,IACpG,SAAA,yBAAA,EAAA,OAAA,GAAA,EAAA,IAAA,EAAA,IAAA,YAAA,EAAA,EAAA,KAAA,KAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,cAAA,IAAA,iBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,6BAAA,EAAA,OAAA,GAAA,EAAA,wBAKzB,CAhDA,CA7CiD,EAAI,EAAK,GAAA,QAiC9C,OA7BM,EAAe,GAAa,CAC9B,aAAc,GACd,gBAAiB,CAAC,EAClB,OAAQ,GACR,aAAc,GACd,eAAA,GAEA,IACA,EAAa,aAAe,EACvB,KAAK,SAAA,GAAA,OAAQ,EAAI,IAAA,IACjB,OAAO,EAAgB,KAAK,SAAA,GAAA,OAAQ,EAAI,IAAA,MAEjD,EAAa,gBAAkB,EAC/B,EAAa,WAAa,EAAI,KAC9B,EAAa,iBAAA,EACb,EAAa,OAAS,EAAI,OAC1B,EAAa,aAAe,EAAI,aAChC,EAAa,eAAiB,EAAI,eAClC,EAAa,UAAY,IAAI,YACtB,EAAa,MACd,EAAkB,GAA6C,EAAI,QAAS,GAAA,EAAA,KAAA,GAI5E,GAAmB,EAAiB,GAAA,QAIV,OAAhC,EAAG,WAAW,IAAI,EAAc,aAAA,EAAA,OAAA,SACK,IAA9B,EAAmB,QAC9B,yBAAA,EAAA,OAAA,GAAA,EAAA,oCAjGM,IAAA,EAAA,KAkGD,CAAA,EAAA,KAAA,SAAA,EAAA,IAML,EAAG,kBAAkB,QAAA,GACd,EAAA,KAAA,wBAAA,EAAA,KAAA,GALG,GAAwB,GAAA,eAAA,EAAA,KAAA,GACjB,GAAM,EAAI,EAAS,EAAQ,CAAE,cAAA,EAAe,YAAA,IAAA,QAAA,EAAA,GAAA,EAAA,KAAA,eAAA,EAAA,OAAA,SAAA,EAAA,IAAA,yBAAA,EAAA,OAAA,GAAA,EAAA,IAMrE,CAkDA,SAAS,GAA6C,EAAe,GACjE,IAAM,EAAU,CAAC,EACjB,GAAgB,EAAS,GACzB,IAAM,EAAmB,CAAC,EAG1B,OAFA,GAAgB,EAAkB,GAjqDtC,SAAyB,EACzB,GAGI,IADA,IAAI,EAAI,EAAI,EACZ,EAAA,EAAA,EAAmC,OAAO,QAAQ,GAAA,EAAA,EAAA,OAAA,IAC9C,IADC,IAAA,EAAA,EAAA,EAAA,GAAA,GAAO,EAAA,EAAA,GAAO,EAAA,EAAA,GACf,EAAA,EAAA,EAAyB,OAAO,QAAQ,GAAA,EAAA,EAAA,OAAA,IAAA,CAAnC,IAAA,EAAA,EAAA,EAAA,GAAA,GAAO,EAAA,EAAA,GAAK,EAAA,EAAA,GACb,OAAQ,EAAI,MACR,IAAK,MAEG,IAAM,EAAqC,QAAxB,EAAK,EAAO,UAAA,IAAoB,OAAA,EAAyB,EAAG,GAC/E,GAAI,EACA,OAAQ,EAAU,MACd,IAAK,MAOL,IAAK,aACM,EAAO,GAAO,GAKrC,MACJ,IAAK,MACwB,QAAxB,EAAK,EAAO,UAAA,IAAoB,UAA8B,EAAG,GAClE,MACJ,IAAK,MACD,IAAM,EAAqC,QAAxB,EAAK,EAAO,UAAA,IAAoB,OAAA,EAAyB,EAAG,GAC/E,GAAI,EACA,OAAQ,EAAU,MACd,IAAK,MAED,QAAA,EAAA,EAAA,EAAgC,OAAO,QAAQ,EAAI,KAAA,EAAA,EAAA,OAAA,IAAA,CAA9C,IAAA,EAAA,EAAA,EAAA,GAAA,GAAO,EAAA,EAAA,GAAU,EAAA,EAAA,GAClB,GAAa,EAAU,IAAK,EAAU,EAE1C,OACJ,IAAK,MAED,MACJ,IAAK,MAED,QAAA,EAAA,EAAA,EAAuB,OAAO,KAAK,EAAI,KAAA,EAAA,EAAA,OAAA,IAAA,CAAlC,IAAM,EAAA,EAAA,UACA,EAAU,IAAI,EAAA,GAUzD,EAvDA,CAkqDoB,EAAS,GAnmD7B,SAA0B,GAAc,IAAP,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAO,GAE/B,IACD,EAAO,GAAa,KAGxB,IADA,IAAM,EAAM,CAAC,EACb,EAAA,EAAA,EAA2B,OAAO,QAAQ,GAAA,EAAA,EAAA,OAAA,IACtC,IADC,IAAA,EAAA,EAAA,EAAA,GAAA,GAAO,EAAA,EAAA,GAAO,EAAA,EAAA,GACf,EAAA,EAAA,EAAwB,OAAO,QAAQ,GAAA,EAAA,EAAA,OAAA,IAAM,CAAxC,IAAA,EAAA,EAAA,EAAA,GAAA,GAAO,EAAA,EAAA,GAAK,EAAA,EAAA,GACP,EAAW,EAAI,KAAW,EAAI,GAAS,CAAC,IAClC,EAAS,EAAG,QAAU,EAAS,EAAG,MAAQ,KAClD,KAAK,OAAO,OAAO,CAAE,IAAA,GAAO,GACpC,CAIJ,IADA,IAAM,EAAS,GACf,EAAA,EAAA,EAA2B,OAAO,QAAQ,GAAA,EAAA,EAAA,OAAA,IAAM,CAK5C,IALC,IAAA,EAAA,EAAA,EAAA,GAAA,GAAO,EAAA,EAAA,GAAO,EAAA,EAAA,GACT,EAAc,CAChB,MAAA,EACA,KAAM,IAEV,EAAA,EAAA,EAA6B,OAAO,QAAQ,GAAA,EAAA,EAAA,OAAA,IAAA,CAAvC,IAAA,EAAA,EAAA,EAAA,GAAA,GAAO,EAAA,EAAA,GAAQ,EAAA,EAAA,GAChB,OAAQ,GACJ,IAAK,MACD,IAAM,EAAK,CACP,KAAM,SACN,KAAM,EAAK,KAAI,SAAA,GAAA,OAAO,EAAI,GAAA,IAC1B,OAAQ,EAAK,KAAI,SAAA,GAAA,OAAO,EAAI,GAAA,IAC5B,KAAA,GAEJ,EAAY,KAAK,KAAK,GACtB,MAEJ,IAAK,MACD,IAAM,EAAK,CACP,KAAM,SACN,KAAM,EAAK,KAAI,SAAA,GAAA,OAAO,EAAI,GAAA,IAC1B,YAAa,EAAK,KAAI,SAAA,GAAA,OAAO,EAAI,GAAA,IACjC,KAAA,GAEJ,EAAY,KAAK,KAAK,GACtB,MAEJ,IAAK,MACD,IAAM,EAAK,CACP,KAAM,SACN,KAAM,EAAK,KAAI,SAAA,GAAA,OAAO,EAAI,GAAA,IAC1B,KAAA,GAEJ,EAAY,KAAK,KAAK,GAKlC,CAAA,EAAO,KAAK,EAChB,CACA,OAAO,CACX,CAxDA,CAomD4B,EAC5B,CA+MA,IAAM,GAAO,IAAI,QACX,GAAqB,CACvB,QAAS,kDACT,MAAO,iBACP,OAAQ,WACR,MAAO,GACP,WAAY,GACZ,UAAW,wBACX,QAAS,yBAET,GAAiB,EACrB,SAAS,GAAa,GACd,QAAS,IACT,EAAK,EAAQ,KACjB,IAAI,EAAK,GAAK,IAAI,EAAG,OACrB,IAAK,EAAI,CACL,IAAM,EAAiB,IAAI,GACvB,EAAwB,IAAI,GAAA,oBAAA,OAA6C,EAAG,OAC5E,EAAoB,IAAI,GAAA,gBAAA,OAAyC,EAAG,OACxE,EAAmB,KAAM,GACzB,IAAI,GAAA,EACJ,EAAK,CACD,WACI,OAAO,EAAG,IACd,EACA,MAAK,kBACM,EAAG,OAAA,EAEd,YAAa,EAAG,YAAY,KAAK,GACjC,MAAO,EAAG,MAAM,KAAK,GACrB,aACI,OAAO,EAAG,MACd,EACA,MAAO,EAAG,MACV,YACI,OAAO,EAAG,MAAM,QACpB,EACA,iBACI,OAAO,EAAG,MAAM,aACpB,EACA,gBACI,OAAO,EAAG,MAAM,YACpB,EACA,cACI,OAAO,EAAG,MAAM,UACpB,EACA,aACI,OAAO,EAAG,MACd,EACA,cACI,OAAO,EAAG,OACd,EACA,YACI,OAAO,EAAG,KACd,EACA,sBACI,OAAO,CACX,EACA,eAAA,EACA,4BACI,OAAO,CACX,EACA,wBACI,OAAO,CACX,EACA,GAAA,GAEJ,IAAM,EAAgB,CAClB,eAAc,kBACH,EAAG,QACL,UACA,MAAM,SAAA,GAAA,OAAW,EAAO,MAAM,SAAA,GAAA,OAAM,EAAE,UAAA,KAAe,EAAA,KAE9D,sBAAqB,kBACV,EAAG,WAAW,IAAI,cAE7B,UAAS,kBACE,EAAG,WAAW,IAAI,UAAU,MAAM,SAAA,GACrC,GAAI,EAAA,KACuB,EADvB,EAAA,EACoB,EAAG,QAAA,IAAvB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MACQ,KADG,EAAA,EAAA,MACH,EAAM,OAAO,SAAW,EAAM,OAAO,QAAQ,SAAW,EAAO,EAAM,QACrE,EAAO,EAAM,MAAM,WAyBrB,iBADL,EAxBuD,EAAM,OAAO,QAAQ,SA0B7F,EACA,EAAW,IAAM,GAAG,KAAK,KAAK,EAAS,KAAO,IAAO,IAH7D,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,MAAyB,EApBL,OAAO,CAAM,KAGrB,WAAU,kBACC,EAAG,WAAW,IAAI,YAE7B,mBAAA,SAAmB,GACf,EAAkB,CACtB,EACA,YAAA,WACI,EAAwB,IAAI,GAAA,oBAAA,OAA6C,EAAG,OAC5E,EAAoB,IAAI,GAAA,gBAAA,OAAyC,EAAG,MACxE,GAEJ,OAAO,OAAO,EAAI,GAClB,EAAG,gBAjTX,SAAoC,GAAA,IAAA,EAAA,KAC1B,EAAQ,GACR,EAAe,IAAI,IAAA,GACnB,EAAQ,IAAI,GAAgB,MAC9B,GAAA,EACA,EAAc,EACd,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAK,OAiMrD,OAhMA,EAAM,WAAU,kBAAM,GAAU,OAAA,OAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,UAC9C,KAEA,EAAM,OAAS,IAAA,EAAA,KAAA,SAKf,OAJA,GAAA,EACA,EAAc,QACd,EAAc,KAAK,KAAK,OACxB,EAAa,MAAA,GACb,EAAA,KAAA,EAAA,EAAA,KAAA,EA6BR,WACI,IAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACxB,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,YAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAAA,EAAA,IAAA,MAAA,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAG/B,OADM,EAAM,EAAM,QAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAKR,EAAG,MAAM,UACV,KAAK,IAAO,SAAA,GAAA,IAAG,EAAA,EAAA,MAAA,MAAsB,YAAV,GAAiC,UAAV,CAAA,IAAoB,GAAK,IAC3E,YAAA,OAEkD,GAAjD,EAAqB,EAAG,MAAM,mBAAmB,MAElD,EAAA,CAAA,EAAA,KAAA,eAAA,EAAA,OAAA,4BAAA,EAAA,GAEG,EAAI,KAAA,EAAA,KACH,kBADG,EAAA,GACH,GAgBA,gBAhBA,EAAA,GAgBA,GAOA,mBAPA,EAAA,GAOA,GAMA,kBANA,EAAA,GAMA,GAOA,mBAPA,EAAA,GAOA,GAIA,YAJA,EAAA,GAIA,oBApCK,OAFA,EAAO,EAAG,MAAM,YAAY,MAAA,EAAA,KAAA,GAEL,GAAmB,EAAG,MAAM,QAAQ,YAAa,GAAA,eAAxE,EAAA,EAAA,KAAA,EAAA,KAAA,GAEA,EAAG,MAAM,WAAW,OAAO,EAAK,OAAQ,CAC1C,YAAa,EAAe,YAC5B,sBAAuB,EAAe,sBACtC,OAAQ,EAAe,OACvB,QAAS,EAAe,UAAA,eAAA,EAAA,OAAA,oBAQ8I,GAR9I,EAAA,IAOuF,QAA5G,EAAK,MAAA,OAAA,EAAwE,EAAmB,cAAA,IAAoB,OAAA,EAAyB,EAAG,SAAS,EAAI,UAC3C,QAAlH,EAAK,MAAA,OAAA,EAAwE,EAAmB,oBAAA,IAA0B,OAAA,EAAyB,EAAG,SAAS,EAAI,QAAA,EAAA,GAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,GAChK,EAAG,MAAM,KAAK,CAAE,QAAS,OAAQ,MAAA,IAAM,eAAA,EAAA,OAAA,oBAKmH,GALnH,EAAA,GAKkE,QAA5G,EAAK,MAAA,OAAA,EAAwE,EAAmB,cAAA,IAAoB,OAAA,EAAyB,EAAG,SAAS,EAAI,OAAA,EAAA,GAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,GAC1J,EAAG,MAAM,KAAK,CAAE,QAAS,OAAQ,MAAA,IAAM,eAAA,EAAA,OAAA,oBAMwH,GANxH,EAAA,IAKiE,QAA5G,EAAK,MAAA,OAAA,EAAwE,EAAmB,cAAA,IAAoB,OAAA,EAAyB,EAAG,SAAS,EAAI,UAC3C,QAAlH,EAAK,MAAA,OAAA,EAAwE,EAAmB,oBAAA,IAA0B,OAAA,EAAyB,EAAG,SAAS,EAAI,SAAA,EAAA,GAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,GAC/J,EAAG,MAAM,KAAK,CAAE,QAAS,OAAQ,MAAA,IAAM,eAAA,EAAA,OAAA,oBAIhD,OAJgD,EAAA,KAAA,GAM3C,EAAG,MAAM,KAAK,CAAE,QAAS,OAAQ,MAAA,IAAM,eAAA,EAAA,OAAA,uBAI2C,WAA/C,QAAnC,EAAK,EAAG,MAAM,UAAU,aAAA,IAAmB,OAAA,EAAyB,EAAG,OAAA,CAAA,EAAA,KAAA,SAEzE,OADA,GAAY,EAAI,QAChB,EAAA,OAAA,oBACJ,OADI,EAAA,KAAA,GAEE,EAAG,YAAY,KAAM,EAAG,GAAG,QAAS,SAAA,GAAA,OAAO,GAAU,OAAA,OAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAKnD,OAH1B,EAAG,SAAS,uBAAA,EAEZ,EAAG,SAAS,sBAAA,EACZ,EAAA,KAAA,EAA+C,QAAQ,IAAI,CACvD,EAAG,YACH,EAAG,wBACH,EAAG,mBAAA,OAHmB,GAGnB,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,GAHA,EAAA,EAAA,GAAQ,EAAA,EAAA,GAAW,EAAA,EAAA,GAMrB,GAAc,GAAW,EAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,OAAA,qBAS1B,EAAI,UAAY,EAAU,eAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,OAAA,cASC,iBAAhB,EAAI,SAC0B,iBAA7B,EAAU,gBACsB,iBAA7B,EAAU,gBAKrB,GAAY,EAAI,kBASxB,OATwB,EAAA,KAAA,GAKM,GAAM,QAEpC,GAAoB,IAAA,QAEQ,GAFR,EAAA,GAAA,EAAA,KAAA,EAAA,GAEI,EAAI,aAAA,EAAA,KAAA,EAAA,GAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,OAAA,cAExB,GAAY,EAAI,iBAMA,GAAhB,EAAgB,IAChB,EAAY,WAAA,CAAA,EAAA,KAAA,SAEZ,OADM,EAAiB,GAAkB,GAAI,KAAK,SAAA,GAAA,OAAQ,EAAG,MAAM,GAAiB,EAAI,MAAA,IAAA,EAAA,KAAA,GAClE,GAAkB,GAE5C,QAFI,EAAA,EAAA,KAAA,aAGA,EAAI,QAAQ,OAAS,IAAA,EAAA,KAAA,SAC6D,OAA5E,EAAkB,GAA6C,EAAI,QAAS,GAAA,EAAA,KAAA,GAK5E,GAAmB,EAAiB,GAC9C,QAK+B,OAD/B,EAAU,gBAAkB,GAA2B,EAAe,EAAU,iBAChF,EAAU,eAAiB,EAAI,OAAA,EAAA,KAAA,GAGzB,GAAe,EAAI,EAAQ,EAAU,gBAAiB,EAAI,QAAA,eAAA,EAAA,KAAA,GAK1D,EAAG,WAAW,IAAI,EAAW,aACvC,yBAAA,EAAA,OAAA,GAAA,EAAA,gBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,kCAAA,EAAA,OAAA,GAAA,EAAA,8BA7IT,EAAM,OAAS,IAAA,EAAA,KAAA,eAAA,EAAA,cAAA,IAAA,+BAAA,EAAA,GAAA,CAAA,EAAA,KAAA,eAAA,EAAA,OAAA,qBAAA,EAAA,KAAA,gCAAA,EAAA,OAAA,GAAA,EAAA,IAuJ9B,CA1JA,GA3BQ,OAGQ,GAHR,EAAA,KAAA,EAAA,EAAA,GAEQ,EAAc,EAAc,OAAS,GAAK,EAAc,GACxD,KAAA,EAAA,GAAA,CAAA,EAAA,KAAA,cAEI,KAAK,MAAQ,EAAc,MAAA,EAAA,KAAA,SAGA,OAA3B,EAAc,KAAK,MAAQ,IAAA,EAAA,KAAA,GACrB,IAAI,SAAS,SAAA,GAAA,OAAY,WAAW,EAAS,gBAAA,EAAA,KAAA,iBAKxB,OAA3B,EAAc,KAAK,MAAQ,IAAA,EAAA,KAAA,GACrB,IAAI,SAAS,SAAA,GAAA,OAAY,WAAW,EAAS,gBAK/D,OAFI,GAAA,EACA,EAAa,MAAA,GACjB,EAAA,OAAA,4BAAA,EAAA,OAAA,GAAA,EAAA,qBAER,IAgKO,CACH,QAhKJ,SAAiB,GACb,EAAM,KAAK,GACX,EAAM,KAAK,KACf,EA8JI,aAAA,EAER,CAsG6B,CAA2B,GAChD,GAAK,IAAI,EAAG,MAAO,EACvB,CACA,OAAO,CACX,CAQA,IAAM,GAAK,IAAI,QACT,GAAA,WACF,SAAA,EAAY,EAAI,GAAA,EAAA,KAAA,GACZ,GAAG,IAAI,KAAM,GACb,OAAO,OAAO,KAAM,EACxB,CAaA,OAZA,EAAA,EAAA,EAAA,IAAA,OAAA,MAYA,WACI,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OACxB,GAAG,IAAI,MACf,MAAM,WAAW,IAAI,MAC5B,wBAAA,EAAA,OAAA,GAAA,EAAA,SACJ,MAAA,IAAA,OAAA,MAjBA,SAAY,EAAI,GACZ,OAAO,EACF,MAAM,WACN,IAAI,GACJ,MAAM,SAAA,GAAA,OAAc,IAAI,EAAqB,EAAI,GAAa,CAC/D,OAAA,EACA,OAAQ,CACJ,IAAK,GAET,UAAW,IAAI,KAAK,OAE5B,KACA,CAAA,CAjBE,GAyBN,SAAS,GAAU,EACnB,GACI,OCn/EE,SAA+B,EAAuB,GAC1D,IAAM,EAA8B,kBAAX,EACzB,OAAO,IAAI,SAAe,SAAC,EAAS,GAClC,IAAM,EAAa,IAAI,GAAkB,CACvC,KAAM,SAAC,GACL,EAAQ,GACR,EAAW,aACb,EACA,MAAO,EACP,SAAU,WACJ,EACF,EAAQ,EAAQ,cAEhB,EAAO,IAAI,GAEf,IAEF,EAAO,UAAU,EACnB,GACF,CDg+EW,CAAe,GAAK,GAAG,KAAK,GAAS,IAChD,CAEA,SAAS,GAAO,GACZ,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAC7B,OAD6B,EAAA,KAAA,EACF,GAAQ,GAAA,OAAnC,KAAA,EAAA,EAAA,MACF,CAAA,EAAA,KAAA,SACA,OADA,EAAA,KAAA,EAzuDZ,SAAuB,EAAiB,EAAe,GACnD,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAanC,OAZM,EAAS,CACX,CACI,KAAM,UACN,YAAa,sBACb,QAAS,uFAET,cAAe,CACX,cAAA,EACA,mBAAoB,EAAmB,cAAA,EAAA,KAAA,EAItC,GAAiB,EAAiB,CAC3C,KAAM,sBACN,MAAO,iBACP,OAAA,EACA,OAAQ,CAAC,EACT,YAAa,iBACb,YAAa,WAEZ,MAAK,mBAAM,IACX,OAAM,mBAAM,IACrB,cAAA,EAAA,OAAA,SAAA,EAAA,MAAA,wBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CAzBA,CA0uDoC,EAAG,MAAM,gBAAiB,EAAG,MAAM,cAAe,GAAA,UAAA,EAAA,KAAA,CAAA,EAAA,KAAA,cAIhE,IAAI,MAAM,+DAAA,EAAA,KAAA,GAHV,GAAQ,EAAI,CAAE,oBAAA,IAK5B,yBAAA,EAAA,OAAA,GAAA,EAAA,IAER,CACA,SAAS,GAAQ,GAAsC,IAAA,GAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAD,CAAC,GAAlC,mBAAE,OAAA,IAAA,GAAqB,EACxC,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,YAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAEf,OAFe,EAAA,KAAA,EAEI,EAAG,GAAG,YAAY,KAAM,EAAG,GAAG,QAAS,SAAA,GAAA,OAAO,GAAU,OAAA,OAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAQ3G,OANA,EAAW,EAAG,UACX,uBAAA,EACT,EAAS,sBAAA,EACH,EAAiB,EAAG,WAAW,QAAQ,SAAA,GAAA,OAAc,EAAU,SAAS,iBAAA,EAAA,KAAA,EAEnD,QAAQ,IAAI,EAAe,KAAK,SAAA,GAAA,OAAkB,EAAG,MAAM,GAAe,OAAA,YAC5C,GAAnD,EAAA,EAAA,KAA2B,QAAO,SAAC,EAAG,GAAA,OAAM,EAAI,CAAA,GAAG,KACrD,EAAc,IAAM,EAAA,CAAA,EAAA,KAAA,eAAA,EAAA,OAAA,SAEb,CAAC,GAAA,IAAa,OAKzB,EAAG,WAAW,OAAO,aACrB,EAAA,EAAoB,EAAG,GAAG,QAAA,IAA1B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MACuB,WADZ,EAAA,EAAA,OACG,MAAmC,eAAf,EAAM,MAChC,EAAM,OAGd,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,QAAA,EAAA,OAAA,SAAO,CAAC,GAAA,IACZ,yBAAA,EAAA,OAAA,GAAA,EAAA,eACI,GADJ,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,GAvBO,EAAA,EAAA,GAAa,EAAA,EAAA,GAAA,EAAA,GAwBhB,GAAA,EAAA,GAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,GAEM,GAAU,EAAG,MAAM,aAAc,SAAA,GAAA,OAAS,EAAK,SAAW,GAAkB,MAAA,mBAAA,EAAA,KAAA,GAE5E,EAAG,MAAM,KAAK,CAAE,QAAS,OAAQ,MAAA,IAAM,eAAA,EAAA,OAAA,SAE1C,GACX,yBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CAmGA,SAAS,GAAQ,GAAU,QAAA,EAAA,EAAA,UAAA,OAAA,EAAA,IAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,UAAA,IACvB,EAAA,WAAyB,SAAE,GAAA,MAAA,EAAU,EACzC,CAmDA,SAAS,GAAM,EAAI,GACf,IAAI,EACJ,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAC7B,OAD6B,EAAA,KAAA,EACT,EAAG,iBAAA,OACE,GADzB,EAAA,EAAA,KACA,EAAa,EAAY,QAC3B,EAAY,YAAgB,IAAW,EAAM,OAAU,EAAM,QAAA,CAAA,EAAA,KAAA,YAEvC,SADgC,QAA9B,EAAK,EAAY,eAAA,IAAqB,OAAA,EAAyB,EAAG,SAAW,QACvE,EAAY,aAAiB,EAAY,yBAAyB,EAAY,sBAAsB,UAAY,KAAK,OAAA,CAAA,EAAA,KAAA,eAAA,EAAA,OAAA,UAE/I,GAAO,WAEP,EAAY,cAAkB,EAAY,0BAA0B,EAAY,uBAAuB,UAAY,KAAK,OAAA,CAAA,EAAA,KAAA,SAGxH,OAHwH,EAAA,KAAA,GAElH,GAAgB,GAAA,eAAA,EAAA,OAAA,aAI9B,QA0BA,OAzBM,EAAU,IAAI,GAAqB,EAAI,CACzC,OAAQ,CAAC,EACT,UAAW,IAAI,KAAK,KAAA,EAAA,KAAA,GAElB,GAAa,EAAG,MAAM,QAAQ,YAAa,EAAS,EAAG,MAAM,QAAQ,aA5KnF,SAA+B,GAC3B,IAAQ,EAAoB,EAAG,MAAzB,gBACN,OAAO,SAAA,GAAuC,IACtC,EAD0B,EAAA,EAAF,WAAc,EAAA,EAAF,MAExC,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAEyC,GAAtE,EAAkC,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,YACvE,CAAA,EAAA,KAAA,cACK,IAAI,MAAM,oCACqD,UAApE,MAAA,OAAA,EAA8C,EAAM,YAAA,CAAA,EAAA,KAAA,SAGjD,OAHiD,EAAA,KAAA,EAC7B,GAAe,EAAiB,2BAA4B,MAAA,OAAA,EAA8C,EAAM,SAAW,MAAA,OAAA,EAA8C,EAAM,SAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAI3L,CAAC,aAAA,EAAA,GACT,EAAA,EAAA,GAAA,CAHA,UAAA,EAAA,GACA,WAAY,OACZ,OAAA,EAAA,GACA,WAAA,EAAA,IAAA,EAAA,KAAA,iBAMA,OANA,EAAA,KAAA,GAIgB,GAAe,EAAiB,sBAAuB,MAAA,OAAA,EAA8C,EAAM,OAAA,QAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAInH,CAAC,aAAA,EAAA,GACT,EAAA,EAAA,GAAA,CAHA,MAAA,EAAA,GACA,WAAY,MACZ,OAAA,EAAA,GACA,WAAA,EAAA,IAAA,QAGF,OAhBF,EAAA,EAAA,GAAA,EAAA,KAAA,GAgBe,MAAA,GAAA,OAAS,EAAA,UAAa,CACrC,KAAM,KAAK,UAAU,GACrB,OAAQ,OACR,QAAS,CAAE,eAAgB,mBAAoB,KAAM,kBAHnD,GAKc,OALd,EAAA,EAAA,MAKG,OAAA,CAAA,EAAA,KAAA,SACC,OADD,EAAA,KAAA,GACgB,EAAK,OAAA,QAO1B,OAPM,EAAA,EAAA,KAAA,EAAA,KAAA,GACA,GAAU,EAAiB,uBAAwB,CACrD,KAAM,QACN,YAAa,gBACb,QAAS,EACT,cAAe,CAAC,IACjB,OAAM,6BACH,IAAI,GAAU,EAAM,GAC9B,QACM,OADN,EAAA,KAAA,GACuB,EAAK,OAAA,QAAtB,GACgB,YADhB,EAAA,EAAA,MACO,MAAuC,UAAlB,EAAS,KAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,OAAA,SAGhC,GAAA,WAE0B,QAA5B,EAAa,WAAA,CAAA,EAAA,KAAA,YACI,aAAlB,EAAS,KAAA,CAAA,EAAA,KAAA,eACH,IAAI,MAAA,4BAAA,OAAkC,EAAA,mBAC1C,OAD0C,EAAA,KAAA,GAC9B,GAAa,EAAiB,EAAa,OAAA,QAGzD,OAHE,EAAA,EAAA,KACN,EAAa,IAAM,GAAO,GAC1B,EAAa,OAAS,EAAS,OAC/B,EAAA,KAAA,GAAiB,MAAA,GAAA,OAAS,EAAA,UAAa,CACnC,KAAM,KAAK,UAAU,GACrB,OAAQ,OACR,QAAS,CAAE,eAAgB,oBAC3B,KAAM,iBAJN,EAAA,EAAA,KAAA,WAMmB,MAAhB,EAAK,OAAA,CAAA,EAAA,KAAA,SACF,OADE,EAAA,KAAA,GACgB,EAAK,OAAA,QAChB,OADP,EAAA,EAAA,KAAA,EAAA,KAAA,GACmB,GAAa,EAAiB,EAAa,MAAO,CACvE,KAAM,QACN,YAAa,cACb,QAAS,EACT,cAAe,CAAC,YAEpB,OANA,EAAa,IAAA,EAAA,KAAA,EAAA,KAAA,GAMA,MAAA,GAAA,OAAS,EAAA,UAAa,CAC/B,KAAM,KAAK,UAAU,GACrB,OAAQ,OACR,QAAS,CAAE,eAAgB,oBAC3B,KAAM,SAEd,QANI,EAAA,EAAA,KAAA,QAAA,EAAA,KAAA,oBAOgB,MAAhB,EAAK,OAAA,CAAA,EAAA,KAAA,SACC,OADD,EAAA,KAAA,GACgB,EAAK,OAAA,QAApB,MAAA,EAAA,EAAA,KACA,IAAI,GAAU,EAAM,GAC9B,QAEA,OAFA,EAAA,KAAA,GACwB,EAAK,OAEjC,eAAA,EAAA,OAAA,SAAA,EAAA,MAAA,cAEU,IAAI,MAAA,4BAAA,OAAkC,EAAA,WAEpD,yBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CACJ,CAvFA,CA4KwH,GAAK,EAAG,MAAM,gBAAiB,GAAA,QAC7E,GAD6E,EAAA,GAC3I,IAAe,GAAkB,QAAU,EAAQ,SAAW,GAAA,EAAA,GAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,GAExD,GAAO,GAAA,eAAA,EAAA,KAAA,GA/DzB,SAAwB,EAAI,GACxB,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,YAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,UAC/B,EAAK,SAAW,EAAG,MAAM,cAAA,CAAA,EAAA,KAAA,eAAA,EAAA,OAAA,iBAEJ,OAAnB,EAAU,EAAG,MAAM,WAAA,EAAA,KAAA,EACnB,EAAG,YAAY,KAAM,GAAU,SAAA,GAAA,OAAO,GAAU,OAAA,OAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAClE,OADkE,EAAA,KAAA,EAC3C,EAAQ,UAAA,cAA/B,EAAA,EAAA,KAAA,EAAA,KAAA,EACA,QAAQ,IAAI,EACb,QAAQ,SAAA,GAAA,OAAU,EAAM,SAAW,EAAK,QAAU,EAAM,UAAA,IACxD,KAAK,SAAA,GAAA,OACN,EAAM,YAAA,EACC,EAAQ,IAAI,EAAA,YAIvB,OAFA,EAAK,YAAA,EACL,EAAK,UAAY,IAAI,KAAA,EAAA,KAAA,EAAA,EAAA,KAAA,GAEX,EAAK,OACf,QAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,SAEI,IACmB,mBAAX,EAAA,GAAE,OAGF,GAAQ,QAAS,gCAAiC,OAAO,KAAK,IAC9D,GAAQ,QAAS,gCAAiC,OAAO,KAAK,IAC9D,GAAQ,QAAS,iBAAkB,GACnC,GAAQ,QAAS,sBAAuB,KAAK,UAAU,IAE/D,CACA,MAAO,GAAM,CACb,MAAA,EAAA,GAAA,yBAAA,EAAA,OAAA,GAAA,EAAA,kBAGR,kBAAA,EAAA,KAAA,EACM,GAAU,EAAG,MAAM,aAAc,SAAA,GAAA,OAAgB,EAAY,SAAW,EAAK,MAAA,IACvF,wBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CApCA,CA6E6B,EAAI,GAAA,QAGT,OAAhB,GAAY,EAAI,QAAA,EAAA,OAAA,SACT,EAAQ,SAAW,GAC9B,yBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CAGA,IAAM,GAAsC,oBAAnB,eAEnB,GAAgC,oBAAd,WACpB,WAAW,KAAK,UAAU,aACzB,wBAAwB,KAAK,UAAU,WACtC,GAAgB,GAEd,GAAG,OAAO,UAAU,UAAU,MAAM,kBAAkB,GACxD,IAOA,GAAkC,IAAY,IAAiB,KACjE,GAoBE,GAAoC,oBAAT,MAAwB,YAAa,OAAS,KAAK,SAEpF,SAAS,KACL,MAAM,IAAI,GAAM,YAAY,gEAChC,CAEA,IAAQ,GAAa,CAAC,EAAhB,SACN,SAAS,GAAY,GACjB,OAAO,GAAS,KAAK,GAAG,MAAM,GAAI,EACtC,CACA,SAAS,GAAiB,EAAY,GAClC,IAAI,EACJ,MAAiB,WAAb,EAAI,KACG,EAAI,MACa,QAAnB,EAAK,EAAI,YAAA,IAAkB,OAAA,EAAyB,EAAG,UAAY,EAAI,OAAO,IAAI,EAAW,WAC1G,CAMA,IAAM,GAAa,2CAsCf,GAAO,EAYX,SAAS,GAAY,EAAQ,GACzB,IAAM,EAAI,IAAI,WAAW,IACnB,EAAW,IAAI,WAAW,EAAE,OAAQ,EAAG,GACvC,EAAM,KAAK,MACb,IAAQ,IAON,GAGF,GAAO,EAEX,EAAS,GAAK,GAAO,cACrB,EAAS,GAAK,GAAO,WACrB,EAAS,GAAK,GAAO,SACrB,EAAS,GAAK,GAAO,MACrB,EAAS,GAAK,GAAO,IACrB,EAAS,GAAK,GACd,IAAM,EAAa,IAAI,WAAW,EAAE,OAAQ,GAG5C,OAFA,OAAO,gBAAgB,GAEhB,EAAS,GADL,IAAI,WAAW,EAAE,UACQ,GAAY,GACpD,CAgKA,IAAI,GAAY,EAKhB,SAAS,GAAS,EAAI,GAClB,OAAO,SAAoB,GACvB,IAAA,EAA8B,EAAI,MAAM,KAAU,EAAI,MAAM,GAAQ,CAAE,QAAS,GAAI,QAAS,KAApF,EAAA,EAAF,QAAW,EAAA,EAAF,QACT,EAAa,EAAQ,OACrB,GAAW,EAAa,EACxB,EAAQ,EAAa,GAAG,MAAK,kBAAM,EAAG,EAAA,IAAM,kBAAM,EAAG,EAAA,IACrD,EAAG,IAAM,SAAQ,kBAAM,EAAQ,OAAO,EAAQ,QAAQ,GAAA,IAE5D,OADA,EAAQ,KAAK,GACN,CACX,CACJ,CACA,SAAS,GAAU,EAAI,GACnB,OAAO,SAAqB,GACxB,IA7BY,EA6BZ,EAA8B,EAAI,MAAM,KAAU,EAAI,MAAM,GAAQ,CAAE,QAAS,GAAI,QAAS,KAApF,EAAA,EAAF,QAAW,EAAA,EAAF,QACX,GAAW,EAAQ,OAAS,EAC1B,EAAQ,EAAQ,OAAS,GAAG,MAAK,kBAAM,EAAG,EAAA,IAAM,kBAAM,EAAG,EAAA,IACzD,EAAQ,OAAS,GAhCX,EAiCS,EAhClB,IAAI,SAAQ,SAAA,GACiB,IAA5B,EAAiB,QACjB,EAAQ,IACZ,IAAI,EAAY,EAAiB,OAC3B,EAAU,IAAI,MAAM,GAC1B,EAAiB,SAAQ,SAAC,EAAG,GAAA,OAAM,QAAQ,QAAQ,GAAG,MAAK,SAAA,GAAA,OAAS,EAAQ,GAAK,CAAE,OAAQ,YAAa,MAAA,EAAA,IAAS,SAAA,GAAA,OAAU,EAAQ,GAAK,CAAE,OAAQ,WAAY,OAAA,EAAA,IACzJ,MAAK,mBAAQ,GAAa,EAAQ,EAAA,MAAU,KA0BnB,MAAK,kBAAM,EAAG,EAAA,IAClC,EAAG,IAAM,SAAQ,kBAAM,EAAQ,OAAA,IAEzC,OADA,EAAQ,KAAK,GACN,CACX,CACJ,CAEA,IAAM,GAA0B,IAAI,GAAgB,IAAI,KAExD,SAAS,GAAoB,GACzB,IAAI,EAAI,EAAI,EAAI,EAChB,OAAqC,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,mBACyE,QAAhD,QAA5F,EAA2C,QAArC,EAAK,EAAG,MAAM,YAAY,aAAA,IAAmB,OAAA,EAAyB,EAAG,eAAA,IAAqB,OAAA,EAAyB,EAAG,WACpG,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,YAC1E,CAmSA,IAGM,GAAe,IAAI,IAAA,GASnB,GAAqB,IAAI,IAAA,GAC/B,GACK,KAAK,IAAW,SAAA,GAAA,OAEV,EACD,IAAA,GACA,IAAA,GAAU,KAAK,GAjBE,SAmBvB,MACC,UAAU,IAKf,IAAM,GAA+C,oBAAb,SAClC,GAAU,SAAU,oBACpB,GAAG,CAAC,GAEJ,GAAwB,GAAyB,KAAK,IAAO,iBAAmC,WAA7B,SAAS,eAAA,KAE5E,GAAyB,GAAyB,KAAK,IAAO,iBAAmC,YAA7B,SAAS,eAAA,KAE7E,GAAsC,oBAAX,OAC3B,GAAM,GAAwB,GAAU,OAAQ,aAAc,GAAU,OAAQ,aAAc,GAAU,OAAQ,WAAY,GAAU,OAAQ,SAAU,GAAU,OAAQ,cAC1K,GAAG,CAAC,GACc,oBAAb,UAQP,GAAM,IAAA,GACN,GACA,IACK,KAEL,IAAI,iBAAmC,YAA7B,SAAS,eAAA,IAEnB,IAAK,SAAA,GACG,GAAa,QAAU,GAEvB,GAAa,KAAK,EACtB,IAIJ,IAAW,SAAA,GAAA,OAAa,EAClB,GAAG,GAAG,KAAK,GAAM,MAA+C,IAAI,kBAAM,GAAa,MAAA,EAAK,KAC5F,GAAG,OACJ,WAAU,eAGnB,IAAM,GAAA,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GACF,SAAA,IAAA,IAAA,EAGA,OAHA,EAAA,KAAA,IACI,EAAA,EAAA,MAAA,KAAS,YACJ,KAAO,oBAChB,CAAA,QAAA,EAAA,EAAA,CAJE,CAIF,EAJ4B,QAU1B,GAAA,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GACF,SAAA,EAAY,EAAa,EAAK,EAAc,EAAgB,EAAiB,EAAiB,EAAO,GAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,MAC1F,SAAA,GAAA,OAAe,IAAI,GAAa,EAAa,EAAK,EAAc,EAAgB,EAAO,EAAiB,EAAY,EAAiB,EAAA,GAChJ,QAAA,EAAA,EAAA,CAHE,CAAqB,IAKvB,GAAU,EACR,GAAA,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GACF,SAAA,EAAY,EAAa,EAAK,EAAc,EAAgB,EAAO,EAAiB,EAAY,EAAiB,GAAA,IAAA,EAiBjH,OAjBiH,EAAA,KAAA,IAC7G,EAAA,EAAA,KAAA,MAAM,kBAAM,EAAK,UAAA,KACZ,KAAO,GACZ,EAAK,cAAA,EAEL,EAAK,YAAc,EACnB,EAAK,IAAM,EACX,EAAK,aAAe,EACpB,EAAK,eAAiB,EACtB,EAAK,MAAQ,EACb,EAAK,gBAAkB,EACvB,EAAK,WAAa,EAClB,EAAK,iBAAmB,IAAI,KAC5B,EAAK,gBAAkB,EACvB,EAAK,4BAA8B,KACnC,EAAK,gBAAkB,EACvB,EAAK,UACT,CAAA,CAkLA,OAjLA,EAAA,EAAA,EAAA,IAAA,WAAA,MAAA,WAEI,KAAK,YACT,GACA,CAAA,IAAA,aAAA,MAAA,WAMI,GALA,KAAK,gBAAgB,KAAK,gBACtB,KAAK,SACL,cAAc,KAAK,QACnB,KAAK,OAAS,MAEd,KAAK,GACL,IACI,KAAK,GAAG,OACZ,CACA,MAAO,GAAM,CAEjB,KAAK,GAAK,KACN,KAAK,8BACL,KAAK,4BAA4B,cACjC,KAAK,4BAA8B,KAE3C,GACA,CAAA,IAAA,YAAA,MAAA,eAAA,EAAA,KACI,IAAI,KAAK,aAAT,CAEA,KAAK,cAAA,EACL,IACI,KAAK,YACT,CACA,MAAO,GAAM,CACb,KAAK,UACA,OAAM,eACN,MAAK,kBAAO,EAAK,cAAA,CAAe,GAR3B,CASd,GACA,CAAA,IAAA,UAAA,MAAA,WACI,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,YAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,UACnC,KAAK,mBAAqB,IAAI,OAC1B,KAAK,YAAc,KAAK,WAAa,IAAI,MAAA,CAAA,EAAA,KAAA,eAAA,EAAA,OAAA,qBAOzC,KAAK,GAAA,CAAA,EAAA,KAAA,cACC,IAAI,MAAM,gEAEf,KAAK,YAAA,CAAA,EAAA,KAAA,cACA,IAAI,MAAM,oDAChB,KAAK,OAAA,CAAA,EAAA,KAAA,eAAA,EAAA,OAAA,sBAIL,KAAK,iBAAmB,KAAK,gBAAkB,IAAI,MAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,OAAA,cACnD,KAAK,WAAW,MAAM,IAAI,KAAA,QA+CL,GA5CzB,KAAK,gBAAgB,KAAK,cAC1B,KAAK,OAAS,aAAY,kBAAM,GAAU,OAAA,OAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,YAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAC5D,GAAI,KAAK,OAEL,KAAK,gBAGT,GAAI,KAAK,GACL,IACI,KAAK,GAAG,KAAK,KAAK,UAAU,CAAE,KAAM,UACpC,YAAW,WAEF,EAAK,SAEN,EAAK,OAEL,EAAK,WAGL,EAAK,mBACL,IAAI,KAAK,KAAK,MAzGlB,MA6GI,EAAK,YAIT,GAjHA,IAmHR,CACA,MAAO,GAEH,KAAK,WACT,MAIA,KAAK,YAEb,wBAAA,EAAA,OAAA,GAAA,EAAA,YA5HiB,MA8HX,EAAQ,IAAI,IAAI,KAAK,cACrB,SAA8B,UAAnB,EAAM,SAAuB,KAAO,MAC/C,EAAe,IAAI,iBACrB,KAAK,WAAW,OAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,OAAA,kBAyCI,OAvCxB,EAAa,IAAI,IAAK,KACtB,EAAa,IAAI,MAAO,KAAK,KAC7B,EAAa,IAAI,aAAc,KAAK,cACpC,EAAa,IAAI,WAAY,KAAK,gBAC9B,KAAK,OACL,EAAa,IAAI,QAAS,KAAK,QAI7B,EAAM,KAAK,GAAK,IAAI,UAAA,GAAA,OAAa,EAAA,aAAA,OAAiB,KAErD,QAAW,SAAA,GACL,EAAK,QAGV,EAAK,WAAW,EAEpB,EAAG,UAAa,SAAA,GACZ,GAAK,EAAK,OAAV,CAGA,EAAK,mBAAqB,IAAI,KAC9B,IACI,IAAM,EAAM,GAAK,MAAM,EAAM,MAC7B,GAAiB,UAAb,EAAI,KACJ,MAAM,IAAI,MAAA,mCAAA,OAAyC,EAAI,QAE1C,QAAb,EAAI,OACJ,EAAK,IAAM,EAAI,KAEF,SAAb,EAAI,MACJ,EAAK,WAAW,KAAK,EAE7B,CACA,MAAO,GACH,EAAK,WAAW,MAAM,EAC1B,CAjBU,CAiBV,EAEJ,EAAA,KAAA,GACQ,GAAA,EAAgB,EAAA,KAAA,GACd,IAAI,SAAQ,SAAC,EAAS,GACxB,EAAG,OAAU,SAAA,GAET,GAAA,EACA,EAAQ,KAAK,EAEjB,EAAG,QAAW,SAAA,GACV,GAAK,EAOD,EAAK,gBAPW,CAChB,IAAM,EAAQ,EAAM,OAAS,IAAI,MAAM,mBACvC,EAAK,WAAW,MAAM,GACtB,EAAK,gBAAgB,KAAK,SAC1B,EAAO,EACX,CAGA,CACH,YAEL,KAAK,4BAA8B,KAAK,gBAAgB,WAAW,SAAA,GAC/D,IAAI,EACC,EAAK,SACW,UAAb,EAAI,MAC2B,cAA/B,EAAK,gBAAgB,OACrB,EAAK,gBAAgB,KAAK,aAEX,QAAlB,EAAK,EAAK,UAAA,IAAgB,GAAyB,EAAG,KAAK,GAAK,UAAU,IAC/E,IAER,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,UAEI,KAAK,WAAa,IAAI,KAAK,KAAK,MAxMnB,KAyMjB,yBAAA,EAAA,OAAA,GAAA,EAAA,mBAER,KAAA,CAAA,CApME,CAAqB,IAuMrB,GAAA,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GACF,SAAA,EAAY,GAAA,IAAA,EAUZ,OAVY,EAAA,KAAA,IACR,EAAA,EAAA,KAAA,KAAkB,YAAZ,EACA,kBACY,gBAAZ,EACI,mBACA,oBACL,KAAO,sBACR,IACA,EAAK,QAAU,GAEvB,CAAA,QAAA,EAAA,EAAA,CAXE,CAWF,EAX8B,QAiBlC,SAAS,GAAsC,GAC3C,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAJ1B,OAI0B,EAAA,KAAA,EAGrB,IANX,IAAI,SAAS,SAAA,GAAA,OAAY,WAAW,EAMzB,IANkC,kBAAA,EAAA,KAAA,EAS1C,GAAkB,KAAK,GAAK,IAAI,YAE1C,wBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CAuFA,SAAS,GAAa,GAClB,IAAI,EACJ,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAC8D,GAD9D,EAAA,OACC,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,eAAgB,EAAG,MAAM,SAAA,EAAA,GAAA,CAAA,EAAA,KAAA,eAAA,EAAA,KAAA,EACrF,GAAK,EAAI,EAAG,MAAM,QAAS,EAAG,MAAM,OAAQ,CAAE,mBAAA,IAAmB,OAAA,EAAA,GAAA,EAAA,KAAA,cAAA,EAAA,OAAA,SAAA,EAAA,IAAA,wBAAA,EAAA,OAAA,GAAA,EAAA,IAGrF,CAUA,IAAM,GAAe,IAAI,QACzB,SAAS,GAAe,EAAI,EAAc,EAAa,GACnD,IAAM,EAAU,GAAa,IAAI,GACjC,GAAI,EAAS,CACT,GAAI,EAAQ,MAAgF,UAAvE,MAAA,OAAA,EAAkD,EAAQ,SAE3E,OAAO,EAAQ,QAWf,IAAI,GAAA,EACE,EAAe,EAAG,MAAM,UAAU,WAAW,SAAA,GACvB,YAApB,EAAU,QACV,GAAA,EACJ,IAKJ,OAAQ,EAAQ,QAGX,MAAK,WACN,EAAa,aAAa,IAEzB,OAAO,SAAA,GAAA,OACR,EAAa,cACN,QAAQ,OAAO,EAAA,IAErB,MAAK,WACN,IAAK,EAGD,OAAO,GAAe,EAAI,EAAc,EAAa,EACzD,GAGZ,CACA,IAAM,EAGN,WACI,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAK/B,OAL+B,EAAA,KAAA,EAAA,EAAA,KAAA,EAGzB,GAAwB,GAAA,WAE1B,EAAG,MAAM,kBAAA,CAAA,EAAA,KAAA,eAAA,EAAA,KAAA,EAEH,GAAK,EAAI,EAAc,EAAa,GAAA,OAAA,EAAA,KAAA,oBAEpC,EAAG,MAAM,mBAAA,CAAA,EAAA,KAAA,eAMf,IAAA,GACM,IAAI,MAAM,mGAAA,EAAA,KAAA,GAzEpC,SAA2B,EAAI,EAAS,GACpC,MAAyB,oBAAd,WAA8B,UAAU,MAI5C,UAAU,MAAM,QAAQ,EAAG,KAAO,IAAM,GAAS,kBAAM,GAAA,IAFnD,GAGf,CANA,CAqE4C,EAAI,IAAqB,kBAAM,GAAK,EAAI,EAAc,EAAa,EAAA,IAK/F,QACA,GAAa,OAAO,GAExB,EAAA,KAAA,uBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,SAEI,GAAa,OAAO,GAAA,EAAA,GAOxB,yBAAA,EAAA,OAAA,GAAA,EAAA,kBAER,CAhCA,GADA,OADA,GAAa,IAAI,EAAI,CAAE,QAAA,EAAS,KAA8E,UAAvE,MAAA,OAAA,EAAkD,EAAQ,WAC1F,CAkCX,CAEA,IACM,GAAU,IAEhB,SAAS,GAAgB,EAAI,EAAc,GACvC,IAAI,EAA6B,KAG7B,EAAc,CAAE,WAAA,GAChB,EAAc,KACd,EAAe,KACnB,SAAS,EAAa,GAAoB,IAAX,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAW,EAGtC,YAAW,WACH,GACA,aAAa,GACjB,IAAM,EAA+B,SAAjB,EAA0B,OAAS,EACvD,EAAc,KACd,EAAe,KACf,GAAe,EAAI,EAAc,EAAa,CAC1C,YAAA,EACA,8BAAA,EACA,QAAS,IACV,OAAO,SAAA,GAEN,GAAI,EAAY,UACZ,SAEC,GAAI,EAAW,EAAG,CAInB,IAAM,EAAkB,GAAiC,SAAjB,EAA0B,OAAS,EACrE,EAAS,YAAW,kBAAM,EAAa,EAAiB,EAAW,KAAI,CAAC,EAAG,EAAG,IAAI,GAAY,IAEhG,GACA,aAAa,GACjB,EAAc,EACd,EAAe,CACnB,IACF,GACH,EACP,CACA,IAcM,EAAO,WAET,EAAY,WAAA,EACR,GACA,EAA2B,aAAa,EAEhD,MAAO,CACH,MArBU,WAIV,EAA6B,EAAG,eAAe,WAAU,SAAA,GAAG,IAAA,EAAA,EAAA,QACxD,IACI,EAAa,GAAW,OAC5B,CACA,MAAO,GAEP,IACF,EAWF,KAAA,EAER,CAEA,SAAS,GAAwB,EAAQ,GACrC,GAAI,GAAU,GACN,EAAQ,eAAA,KACwB,EADxB,EAAA,EACgB,EAAQ,gBAAA,IAAhC,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MACQ,KADG,EAAA,EAAA,MACH,EAAO,KACP,EAAO,GAAW,eAAA,EAAgB,CAKtD,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,GAkBA,IAAI,GAAE,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,EAAE,GAAI,GAAG,GAAI,oEAAoE,SAAS,GAAI,EAAE,GAAG,IAAI,IAAI,KAAK,EAAE,EAAE,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC,SAAS,GAAI,GAAG,IAAI,EAAE,EAAE,WAAW,GAAG,EAAE,YAAY,EAAG,CAAC,SAAS,GAAE,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,GAAG,OAAO,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,UAAU,OAAO,IAAI,EAAE,SAAS,UAAU,OAAO,EAAE,GAAE,KAAK,UAAU,GAAG,GAAG,mBAAmB,GAAG,MAAM,EAAE,aAAa,IAAI,KAAK,EAAE,kBAAA,IAAsB,EAAE,KAAK,EAAE,GAAG,EAAE,aAAa,IAAI,OAAO,GAAI,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,SAAS,GAAI,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,KAAK,GAAG,KAAK,IAAI,EAAE,IAAI,KAAK,SAAA,EAAW,IAAI,KAAK,IAAI,KAAK,iBAAA,EAAmB,IAAI,MAAM,IAAI,GAAI,GAAG,OAAO,MAAM,GAAG,MAAM,GAAI,OAAO,GAAI,MAAM,GAAG,CAAC,CAAC,SAAS,GAAI,GAAG,OAAO,EAAE,QAAQ,CAAC,SAAS,GAAI,EAAE,GAAG,KAAK,MAAM,EAAE,KAAK,QAAQ,CAAE,CAAC,SAAS,GAAI,EAAE,GAAG,GAAG,MAAM,EAAE,OAAO,EAAE,GAAG,GAAI,EAAE,GAAG,EAAE,GAAG,IAAI,QAAQ,GAAG,GAAG,KAAK,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,OAAO,IAAI,GAAG,OAAO,EAAE,EAAE,IAAI,KAAK,MAAM,EAAE,IAAI,OAAO,EAAE,IAAI,MAAO,mBAAmB,EAAE,KAAK,GAAI,GAAG,IAAI,CAAC,SAAS,GAAI,GAAG,IAAI,EAAE,EAAE,GAAG,OAAO,EAAE,EAAE,KAAK,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,KAAK,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,OAAO,IAAI,GAAG,OAAO,EAAE,EAAE,IAAI,KAAK,MAAM,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,GAAI,EAAE,CAAC,CAAC,SAAS,GAAI,KAAK,EAAE,MAAM,EAAE,KAAA,IAAS,GAAI,KAAK,KAAK,GAAI,OAAO,KAAM,GAAI,sBAAsB,GAAI,GAAI,oBAAoB,YAAY,GAAK,CAAC,SAAS,KAAM,IAAI,IAAI,EAAE,GAAI,IAAI,GAAI,QAAQ,EAAE,GAAI,MAAK,SAAS,EAAE,GAAG,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,GAAG,IAAG,GAAI,GAAG,EAAE,MAAK,SAAS,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,GAAG,GAAG,EAAE,GAAG,KAAK,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,GAAI,CAAC,EAAE,IAAI,IAAI,EAAE,IAAI,EAAE,GAAI,EAAE,EAAE,EAAE,EAAE,SAAA,IAAa,EAAE,gBAAgB,MAAM,EAAE,IAAI,CAAC,GAAG,KAAK,EAAE,MAAM,EAAE,GAAI,GAAG,EAAE,EAAE,KAAK,GAAI,EAAE,GAAG,EAAE,KAAK,GAAG,GAAI,IAAK,GAAG,CAAC,SAAS,GAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,GAAI,EAAE,EAAE,OAAO,IAAI,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,EAAE,OAAO,IAAI,GAAG,OAAO,EAAE,EAAE,IAAI,GAAG,OAAO,EAAE,EAAE,KAAK,kBAAkB,EAAE,KAAK,iBAAiB,GAAG,iBAAiB,GAAG,iBAAiB,EAAE,GAAI,KAAK,EAAE,KAAK,KAAK,GAAG,MAAM,QAAQ,GAAG,GAAI,GAAI,CAAC,SAAS,GAAG,KAAK,KAAK,MAAM,EAAE,IAAI,EAAE,GAAI,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,KAAK,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,KAAK,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,QAAA,OAAe,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,EAAE,QAAA,EAAU,KAAK,CAAC,EAAE,IAAK,CAAC,GAAI,EAAE,EAAE,EAAE,GAAG,GAAI,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,IAAI,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,KAAK,GAAG,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,MAAM,GAAG,MAAM,IAAI,EAAE,GAAG,mBAAmB,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAI,EAAE,EAAE,GAAG,EAAE,GAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,mBAAmB,EAAE,OAAO,EAAE,IAAI,IAAI,GAAG,EAAE,KAAK,GAAG,EAAE,YAAY,IAAI,EAAE,GAAI,GAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,MAAM,EAAE,KAAK,mBAAmB,EAAE,MAAM,MAAM,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,MAAM,EAAE,IAAI,GAAI,EAAE,EAAE,IAAI,GAAE,EAAE,GAAG,EAAE,KAAK,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,IAAI,GAAE,EAAE,GAAG,IAAI,GAAG,IAAI,GAAI,CAAC,SAAS,GAAI,EAAE,EAAE,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,OAAO,KAAK,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,mBAAmB,EAAE,KAAK,GAAI,EAAE,EAAE,GAAG,GAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,OAAO,CAAC,CAAC,SAAS,GAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,SAAA,OAAgB,GAAG,MAAM,GAAG,GAAG,GAAG,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,GAAG,EAAE,aAAa,EAAE,EAAE,YAAY,GAAG,EAAE,SAAU,CAAC,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,cAAc,EAAE,EAAE,OAAO,GAAG,EAAE,GAAG,GAAG,EAAE,MAAM,EAAE,EAAE,aAAa,EAAE,GAAG,EAAE,CAAE,CAAC,gBAAgB,EAAE,EAAE,EAAE,WAAW,CAA6N,SAAS,GAAE,EAAE,EAAE,GAAG,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAE,GAAG,MAAM,EAAE,GAAG,iBAAiB,GAAG,GAAI,KAAK,GAAG,EAAE,EAAE,IAAK,CAAC,SAAS,GAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,UAAU,EAAE,GAAG,iBAAiB,EAAE,EAAE,MAAM,QAAQ,MAAO,CAAC,GAAG,iBAAiB,IAAI,EAAE,MAAM,QAAQ,EAAE,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,GAAG,GAAE,EAAE,MAAM,EAAE,IAAI,GAAG,EAAE,IAAI,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,GAAE,EAAE,MAAM,EAAE,EAAE,GAAI,MAAM,GAAG,MAAM,EAAE,IAAI,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,QAAQ,WAAW,KAAK,EAAE,EAAE,gBAAgB,EAAE,EAAE,cAAc,MAAM,GAAG,EAAE,MAAM,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,iBAAiB,EAAE,EAAE,GAAE,GAAE,GAAG,EAAE,oBAAoB,EAAE,EAAE,GAAE,GAAE,QAAQ,GAAG,4BAA4B,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,QAAQ,cAAc,KAAK,QAAQ,SAAS,UAAU,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,aAAa,GAAG,aAAa,GAAG,KAAK,EAAE,IAAI,EAAE,GAAG,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,mBAAmB,IAAI,MAAM,KAAA,IAAS,GAAG,MAAM,EAAE,IAAI,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG,EAAE,gBAAgB,GAAI,CAAC,CAAC,SAAS,GAAE,GAAG,KAAK,EAAE,EAAE,MAAA,GAAS,GAAI,MAAM,GAAI,MAAM,GAAG,EAAG,CAAC,SAAS,GAAE,GAAG,KAAK,EAAE,EAAE,MAAA,GAAS,GAAI,MAAM,GAAI,MAAM,GAAG,EAAG,CAAC,SAAS,GAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,YAAY,EAAE,YAAY,OAAO,KAAK,MAAM,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,KAAK,EAAE,CAAC,KAAK,EAAE,GAAI,MAAM,EAAE,GAAG,IAAI,EAAE,GAAG,mBAAmB,EAAE,CAAC,GAAG,EAAE,EAAE,MAAM,GAAG,EAAE,EAAE,cAAc,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,MAAM,EAAE,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,IAAI,EAAE,KAAK,GAAG,EAAE,KAAK,cAAc,GAAG,EAAE,UAAU,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,GAAI,EAAE,GAAG,EAAE,YAAY,EAAE,EAAE,OAAO,IAAG,GAAG,EAAE,IAAI,GAAG,EAAE,MAAM,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,KAAA,EAAO,EAAE,IAAI,IAAI,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,MAAM,EAAE,2BAA2B,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,GAAI,CAAC,EAAE,EAAE,MAAM,GAAI,EAAE,IAAI,EAAE,yBAAyB,EAAE,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,0BAA0B,MAAM,EAAE,oBAAoB,EAAE,qBAAqB,MAAM,EAAE,mBAAmB,EAAE,IAAI,KAAK,EAAE,uBAAwB,CAAC,GAAG,MAAM,EAAE,0BAA0B,IAAI,GAAG,MAAM,EAAE,2BAA2B,EAAE,0BAA0B,EAAE,IAAI,EAAE,KAAK,MAAM,EAAE,wBAAA,IAA4B,EAAE,sBAAsB,EAAE,EAAE,IAAI,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,KAAA,GAAQ,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,SAAQ,SAAS,GAAG,IAAI,EAAE,GAAG,EAAG,IAAG,EAAE,IAAI,QAAQ,EAAE,KAAK,GAAG,MAAM,CAAC,CAAC,MAAM,EAAE,qBAAqB,EAAE,oBAAoB,EAAE,EAAE,IAAI,GAAG,MAAM,EAAE,oBAAoB,EAAE,IAAI,MAAK,WAAW,EAAE,mBAAmB,EAAE,EAAE,EAAG,GAAG,CAAC,GAAG,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,GAAI,IAAI,EAAE,EAAE,cAAc,GAAG,EAAE,UAAU,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,KAAA,EAAO,GAAG,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,cAAc,GAAG,EAAE,KAAA,EAAO,GAAG,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,UAAW,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,MAAM,EAAE,kBAAkB,EAAE,GAAI,GAAI,CAAC,EAAE,GAAG,EAAE,oBAAoB,GAAG,MAAM,EAAE,0BAA0B,EAAE,EAAE,wBAAwB,EAAE,IAAI,EAAE,MAAM,GAAG,EAAE,OAAO,IAAK,MAAM,EAAE,IAAI,EAAE,MAAM,SAAS,EAAE,GAAI,EAAE,MAAM,QAAQ,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,QAAQ,EAAE,KAAK,GAAG,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,EAAE,KAAA,CAAO,MAAM,MAAM,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAA6R,SAAW,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,QAAQ,IAAI,GAAA,GAAM,MAAM,EAAE,KAAK,EAAE,EAAE,OAAO,IAAI,IAAI,EAAE,EAAE,KAAK,iBAAiB,KAAK,IAAI,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,GAAG,KAAK,KAAK,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,OAAO,EAAE,OAAO,SAAS,eAAe,GAAG,EAAE,EAAE,SAAS,gBAAgB,6BAA6B,GAAG,SAAS,cAAc,EAAE,EAAE,IAAI,GAAG,EAAE,KAAK,GAAA,CAAK,CAAC,GAAG,OAAO,EAAE,IAAI,GAAG,GAAG,EAAE,OAAO,IAAI,EAAE,KAAK,OAAQ,CAAC,GAAG,EAAE,GAAG,GAAE,KAAK,EAAE,YAAY,GAAG,EAAE,EAAE,OAAO,IAAK,wBAAwB,EAAE,EAAE,yBAAyB,EAAE,CAAC,GAAG,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,WAAW,OAAO,IAAI,EAAE,EAAE,WAAW,GAAG,MAAM,EAAE,WAAW,GAAG,OAAO,GAAG,KAAK,IAAI,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,aAAa,EAAE,UAAU,GAAG,EAAE,QAAQ,IAAK,CAAC,GAA9mI,SAAW,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,EAAE,aAAa,GAAG,QAAQ,GAAG,KAAK,GAAG,GAAE,EAAE,EAAE,KAAK,EAAE,GAAG,GAAG,IAAI,KAAK,EAAE,GAAG,mBAAmB,EAAE,IAAI,aAAa,GAAG,QAAQ,GAAG,UAAU,GAAG,YAAY,GAAG,EAAE,KAAK,EAAE,IAAI,GAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAG,CAA3N,CAAmnI,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,QAAQ,GAAG,EAAE,EAAE,MAAM,SAAS,GAAI,EAAE,MAAM,QAAQ,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,kBAAkB,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,GAAI,EAAE,GAAG,GAAG,MAAM,EAAE,IAAI,EAAE,EAAE,OAAO,KAAK,MAAM,EAAE,IAAI,GAAI,EAAE,IAAI,IAAI,UAAU,QAAA,KAAa,EAAE,EAAE,SAAS,IAAI,EAAE,OAAO,aAAa,IAAI,GAAG,WAAW,GAAG,IAAI,EAAE,QAAQ,GAAE,EAAE,QAAQ,EAAE,EAAE,OAAA,GAAU,YAAY,QAAA,KAAa,EAAE,EAAE,UAAU,IAAI,EAAE,SAAS,GAAE,EAAE,UAAU,EAAE,EAAE,SAAA,GAAa,CAAC,OAAO,CAAC,CAA14C,CAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAI,SAAS,EAAE,EAAG,CAAC,MAAM,GAAG,EAAE,IAAI,MAAM,GAAG,MAAM,KAAK,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,QAAQ,IAAI,MAAM,GAAI,IAAI,EAAE,EAAE,EAAG,CAAC,CAAC,SAAS,GAAI,EAAE,GAAG,GAAI,KAAK,GAAI,IAAI,EAAE,GAAG,EAAE,MAAK,SAAS,GAAG,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,GAAG,EAAE,MAAK,SAAS,GAAG,EAAE,KAAK,EAAG,GAAG,CAAC,MAAM,GAAG,GAAI,IAAI,EAAE,EAAE,IAAK,CAAC,GAAG,CAAmnC,SAAS,GAAE,EAAE,EAAE,GAAG,IAAI,mBAAmB,EAAE,EAAE,GAAG,EAAE,QAAQ,CAAE,CAAC,MAAM,GAAG,GAAI,IAAI,EAAE,EAAG,CAAC,CAAC,SAAS,GAAE,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,GAAI,SAAS,GAAI,QAAQ,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,GAAE,EAAE,KAAK,IAAI,OAAO,EAAE,EAAE,KAAK,CAAC,GAAG,EAAE,qBAAqB,IAAI,EAAE,sBAAuB,CAAC,MAAM,GAAG,GAAI,IAAI,EAAE,EAAG,CAAC,EAAE,KAAK,EAAE,IAAI,IAAK,CAAC,GAAG,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,IAAI,EAAE,IAAI,GAAE,EAAE,GAAG,EAAE,mBAAmB,EAAE,MAAM,GAAG,MAAM,EAAE,KAAK,GAAI,EAAE,KAAK,EAAE,IAAI,EAAE,SAAA,CAAW,CAAC,SAAS,GAAE,EAAE,EAAE,GAAG,OAAO,KAAK,YAAY,EAAE,EAAE,CAAC,SAAS,GAAE,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,GAAI,IAAI,GAAI,GAAG,EAAE,GAAG,GAAG,EAAE,mBAAmB,GAAG,KAAK,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,GAAI,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,GAAE,GAAI,KAAK,CAAC,IAAI,GAAG,GAAI,QAAA,IAAa,EAAE,iBAAiB,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,WAAW,GAAE,KAAK,EAAE,YAAY,KAAK,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,GAAG,GAAI,EAAE,EAAG,CAAC,GAAE,GAAI,MAAM,GAAI,CAAC,IAAI,SAAS,EAAE,EAAE,EAAE,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,OAAO,EAAE,GAAG,IAAI,IAAI,EAAE,EAAE,cAAc,MAAM,EAAE,2BAA2B,EAAE,SAAS,EAAE,yBAAyB,IAAI,EAAE,EAAE,KAAK,MAAM,EAAE,oBAAoB,EAAE,kBAAkB,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,MAAM,GAAG,EAAE,CAAE,CAAC,MAAM,CAAC,GAAG,GAAI,EAAE,GAAI,UAAU,SAAS,SAAS,EAAE,GAAG,IAAI,EAAE,EAAE,MAAM,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,IAAI,KAAK,IAAI,GAAI,CAAC,EAAE,KAAK,OAAO,mBAAmB,IAAI,EAAE,EAAE,GAAI,CAAC,EAAE,GAAG,KAAK,QAAQ,GAAG,GAAI,EAAE,GAAG,MAAM,GAAG,KAAK,MAAM,GAAG,KAAK,IAAI,KAAK,GAAG,GAAI,MAAO,EAAE,GAAI,UAAU,YAAY,SAAS,GAAG,KAAK,MAAM,KAAK,KAAA,EAAO,GAAG,KAAK,IAAI,KAAK,GAAG,GAAI,MAAO,EAAE,GAAI,UAAU,OAAO,GAAI,GAAI,GAAG,GAAI,IAAI,EAEr9R,IAAM,GAAS,CACX,MAAO,CACH,MAAO,OAEX,MAAO,CACH,MAAO,CACH,MAAO,MACP,WAAY,QAEhB,QAAS,CACL,MAAO,OACP,WAAY,QAEhB,KAAM,CACF,MAAO,UAGf,OAAQ,CACJ,SAAU,QACV,IAAK,EACL,KAAM,EACN,QAAS,GACT,gBAAiB,OACjB,MAAO,QACP,OAAQ,QACR,OAAQ,IACR,qBAAsB,YACtB,eAAgB,aAEpB,YAAa,CACT,SAAU,QACV,IAAK,EACL,KAAM,EACN,MAAO,QACP,OAAQ,QACR,OAAQ,IACR,WAAY,SACZ,QAAS,OACT,eAAgB,UAEpB,YAAa,CACT,SAAU,WACV,MAAO,OACP,gBAAiB,OACjB,QAAS,OACT,aAAc,MACd,SAAU,MACV,UAAW,MACX,UAAW,OACX,OAAQ,oBACR,aAAc,MACd,UAAW,qBACX,MAAO,OACP,WAAY,cAEhB,MAAO,CACH,OAAQ,OACR,MAAO,OACP,YAAa,QACb,QAAS,OACT,SAAU,OACV,QAAS,QAIjB,SAAS,GAAA,GAAmB,IAAV,EAAA,EAAF,SACZ,OAAQ,GAAE,MAAO,CAAE,UADK,EAAF,WAElB,GAAE,MAAO,CAAE,MAAO,GAAO,SACzB,GAAE,MAAO,CAAE,MAAO,GAAO,aACrB,GAAE,MAAO,CAAE,MAAO,GAAO,aAAe,IACpD,CAEA,IAAI,GAAE,GAAE,GAAE,GAAE,GAAE,EAAE,GAAE,GAAG,GAAE,GAAG,GAAE,GAAI,IAAI,GAAE,GAAI,IAAI,GAAE,GAAI,OAAO,GAAE,GAAI,IAAI,GAAE,GAAI,QAAQ,SAAS,GAAE,EAAE,GAAG,GAAI,KAAK,GAAI,IAAI,GAAE,EAAE,IAAG,GAAG,GAAE,EAAE,IAAI,EAAE,GAAE,MAAM,GAAE,IAAI,CAAC,GAAG,GAAG,IAAI,KAAK,OAAO,GAAG,EAAE,GAAG,QAAQ,EAAE,GAAG,KAAK,CAAC,IAAI,KAAI,EAAE,GAAG,EAAE,CAAw0B,SAAS,KAAI,IAAI,IAAI,EAAE,EAAE,GAAE,SAAS,GAAG,EAAE,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,QAAQ,IAAG,EAAE,IAAI,IAAI,QAAQ,IAAG,EAAE,IAAI,IAAI,EAAG,CAAC,MAAM,GAAG,EAAE,IAAI,IAAI,GAAG,GAAI,IAAI,EAAE,EAAE,IAAK,CAAC,CAAC,GAAI,IAAI,SAAS,GAAG,GAAE,KAAK,IAAG,GAAE,EAAG,EAAE,GAAI,IAAI,SAAS,GAAG,IAAG,GAAE,GAAG,GAAE,EAAE,IAAI,GAAG,GAAE,EAAE,KAAK,IAAI,IAAI,KAAI,IAAG,EAAE,IAAI,GAAG,GAAE,IAAI,GAAG,EAAE,GAAG,SAAQ,SAAS,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,GAAE,EAAE,IAAI,EAAE,OAAA,CAAS,MAAK,EAAE,IAAI,QAAQ,IAAG,EAAE,IAAI,QAAQ,IAAG,EAAE,IAAI,KAAK,GAAE,EAAE,EAAE,GAAI,OAAO,SAAS,GAAG,IAAG,GAAE,GAAG,IAAI,EAAE,EAAE,IAAI,GAAG,EAAE,MAAM,EAAE,IAAI,IAAI,SAAS,IAAI,GAAE,KAAK,IAAI,KAAI,GAAI,yBAAyB,GAAE,GAAI,wBAAwB,SAAS,GAAG,IAAI,EAAE,EAAE,WAAW,aAAa,GAAG,IAAG,qBAAqB,GAAG,WAAW,EAAG,EAAE,EAAE,WAAW,EAAE,KAAK,KAAI,EAAE,sBAAsB,GAAI,GAAG,KAAI,EAAE,IAAI,GAAG,SAAQ,SAAS,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAI,EAAE,GAAG,EAAE,KAAK,EAAE,OAAA,EAAS,EAAE,IAAI,EAAE,KAAI,GAAE,GAAE,IAAK,EAAE,GAAI,IAAI,SAAS,EAAE,GAAG,EAAE,MAAK,SAAS,GAAG,IAAI,EAAE,IAAI,QAAQ,IAAG,EAAE,IAAI,EAAE,IAAI,QAAO,SAAS,GAAG,OAAQ,EAAE,IAAI,GAAE,EAAE,GAAG,CAAC,MAAM,GAAG,EAAE,MAAK,SAAS,GAAG,EAAE,MAAM,EAAE,IAAI,GAAI,IAAG,EAAE,GAAG,GAAI,IAAI,EAAE,EAAE,IAAK,CAAC,IAAG,IAAG,GAAE,EAAE,EAAG,EAAE,GAAI,QAAQ,SAAS,GAAG,IAAG,GAAE,GAAG,IAAI,EAAE,EAAE,EAAE,IAAI,GAAG,EAAE,MAAM,EAAE,IAAI,GAAG,SAAQ,SAAS,GAAG,IAAI,GAAE,EAAG,CAAC,MAAM,GAAG,EAAE,CAAE,CAAC,IAAG,GAAG,GAAI,IAAI,EAAE,EAAE,KAAM,EAAE,IAAI,GAAE,mBAAmB,sBAAsB,SAAS,GAAE,GAAG,IAAI,EAAE,GAAE,EAAE,EAAE,IAAI,mBAAmB,IAAI,EAAE,SAAA,EAAW,KAAK,GAAE,CAAE,CAAC,SAAS,GAAE,GAAG,IAAI,EAAE,GAAE,EAAE,IAAI,EAAE,KAAK,GAAE,CAAE,CAAC,SAAS,GAAE,EAAE,GAAG,OAAQ,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAK,SAAS,EAAE,GAAG,OAAO,IAAI,EAAE,EAAE,GAAE,CAAC,SAAS,GAAE,EAAE,GAAG,MAAO,mBAAmB,EAAE,EAAE,GAAG,CAAC,CAqB97E,SAAS,GAAA,GAA+E,IAAjE,EAAA,EAAF,MAAe,GAAN,EAAF,KAAQ,EAAF,QAAU,EAAA,EAAF,OAAU,EAAA,EAAF,YAAe,EAAA,EAAF,YAAe,EAAA,EAAF,SAAY,EAAA,EAAF,SAClF,EAtBoN,SAAW,GAAG,OAAO,GAAE,EAAS,SAAW,EAAE,EAAE,GAAG,IAAI,EAAE,GAAE,KAAI,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,CAAQ,QAAA,EAAS,GAAG,SAAS,GAAG,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE,IAAI,SAAS,CAAC,GAAI,GAAG,EAAE,IAAI,IAAG,GAAE,GAAG,CAAC,GAAE,GAAA,EAAK,IAAI,EAAE,GAAE,sBAAsB,GAAE,sBAAsB,SAAS,EAAE,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,SAAU,IAAI,EAAE,EAAE,IAAI,IAAI,GAAG,QAAO,SAAS,GAAG,OAAO,EAAE,GAAG,IAAG,GAAG,EAAE,OAAM,SAAS,GAAG,OAAQ,EAAE,GAAG,IAAG,OAAQ,GAAG,EAAE,KAAK,KAAK,EAAE,EAAE,GAAG,IAAI,GAAA,EAAK,OAAO,EAAE,SAAQ,SAAS,GAAG,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,SAAA,EAAW,IAAI,EAAE,GAAG,KAAK,GAAA,EAAM,CAAC,MAAK,KAAK,GAAG,EAAE,KAAK,KAAK,EAAE,EAAE,GAAG,CAAE,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAA/jB,CAAL,GAAE,EAAE,CAsBvN,CAAE,CAAC,GAAA,EAAA,EAAA,EAAA,GAAxB,EAAA,EAAA,GAAQ,EAAA,EAAA,GACT,EAvBi4B,SAAW,GAAG,OAAO,GAAE,EAAuC,SAAW,EAAE,GAAG,IAAI,EAAE,GAAE,KAAI,GAAG,OAAO,GAAE,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,CAArF,EAAnC,WAAW,MAAO,CAAC,QAAQ,EAAE,GAAE,GAAG,CAuB96B,CAAE,MAExB,OAzBozB,SAAW,EAAE,GAAG,IAAI,EAAE,GAAE,KAAI,IAAI,GAAI,KAAK,GAAE,EAAE,IAAI,KAAK,EAAE,GAwB12B,WAAQ,IAAI,EAAI,OAAwC,QAAhC,EAAK,EAAc,eAAA,IAAqB,OAAA,EAAyB,EAAG,OAAO,EAxB4wB,EAAE,EAAE,EAAE,GAAE,IAAI,KAAK,GAAI,CAAlF,CAwBlzB,EAAwG,IAClG,GAAE,GAAQ,CAAE,UAAW,iBAC3B,GAAE,GAAK,KACH,GAAE,KAAM,CAAE,MAAO,GAAO,cAAgB,GACxC,EAAO,KAAK,SAAA,GAAA,OAAW,GAAE,IAAK,CAAE,MAAO,GAAO,MAAM,EAAM,OAZtE,SAAA,GAA6C,IAAtB,EAAA,EAAF,QAAwB,GAAb,EAAF,YAAe,EAAF,eACvC,OAAO,EAAQ,QAAQ,aAAa,SAAA,GAAA,OAAK,EAAc,EAAE,UAAU,EAAG,EAAE,OAAS,MACrF,CAFA,CAY2F,GAAA,IAC/E,GAAE,OAAQ,CAAE,SAAW,SAAA,GACf,EAAG,iBACH,EAAS,EAAO,GACf,OAAO,QAAQ,GAAQ,KAAI,SAAA,EAA4C,GAAA,IAAA,EAAA,EAAA,EAAA,GAA1C,EAAA,EAAA,GAAA,EAAA,EAAA,GAAa,EAAA,EAAA,KAAM,EAAA,EAAA,MAAO,EAAA,EAAA,YAAA,OAAyB,GAAE,QAAS,CAAE,MAAO,GAAO,MAAO,IAAK,GAC5H,EAAA,GAAA,OAAW,EAAA,MAAY,GACvB,GAAE,QAAS,CAAE,IAAa,IAAR,EAAY,OAAA,EAA2B,KAAM,EAAM,KAAM,EAAW,aAAc,KAAM,MAAO,GAAO,MAAO,WAAA,EAAiB,YAAa,EAAa,MAAO,EAAO,IAAc,GAAI,QAAU,SAAA,GAC5M,IAAI,EACE,EAa9B,SAA0B,EAAM,GAC5B,OAAQ,GACJ,IAAK,QACD,OAAO,EAAM,cACjB,IAAK,MACD,OAAO,EAAM,cACjB,QACI,OAAO,EAEnB,CATA,CAbuD,EAA2B,QAApB,EAAK,EAAG,cAAA,IAAoB,OAAA,EAAyB,EAAU,OACjG,EAAgB,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAA,EAAA,GAAY,EAAY,IAC5E,EAAU,GACG,QAAT,GAnBT,KAmB4B,MAAA,OAAA,EAA8C,EAAM,OAAO,SAE9E,EAAS,EACb,UAEhB,GAAE,MAAO,CAAE,MAAO,GAAO,YACrB,GAAE,GAAK,KACH,GAAE,SAAU,CAAE,KAAM,SAAU,MAAO,GAAO,OAAQ,QAAS,kBAAM,EAAS,EAAA,GAAW,GACvF,GAAgB,GAAE,SAAU,CAAE,MAAO,GAAO,OAAQ,QAAS,GAAY,KACzF,CAYA,IAAM,GAAA,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GACF,SAAA,EAAY,GAAA,IAAA,EAIZ,OAJY,EAAA,KAAA,IACR,EAAA,EAAA,KAAA,KAAM,IACD,SAAY,SAAA,GAAA,OAAoB,EAAK,SAAS,CAAE,gBAAA,GAAA,EACrD,EAAK,MAAQ,CAAE,qBAAA,GACnB,CAAA,CAeA,OAdA,EAAA,EAAA,EAAA,IAAA,oBAAA,MAAA,WACI,KAAK,aAAe,GAAK,KAAK,MAAM,GAAG,MAAM,iBAAiB,UAAU,KAAK,SACjF,GACA,CAAA,IAAA,uBAAA,MAAA,WACQ,KAAK,eACL,KAAK,aAAa,qBACX,KAAK,aAEpB,GACA,CAAA,IAAA,SAAA,MAAA,SAAO,EAAA,GAAS,IAAA,EAAA,EAAF,gBACV,OAAK,EAGE,GAAE,GAAa,OAAO,OAAO,CAAC,EAAG,IAF7B,IAGf,KAAA,CAAA,CApBE,CAAiB,IAmDvB,SAAS,GAAU,GACf,IAAM,EAAK,IAAI,QACf,OAAQ,SAAA,GACJ,IAAI,EAAK,EAAG,IAAI,GAKhB,OAJK,IACD,EAAK,EAAQ,GACb,EAAG,IAAI,EAAG,IAEP,CAAE,CAEjB,CAEA,IAAM,GAAwB,IAAW,SAAA,GAAA,OAAO,IAAI,GAAgB,GAAA,IA6EpE,SAAS,GAA4B,EAAG,GACpC,IAAI,EAAe,EACf,EAAS,GAAK,GAAG,KAAK,IAAO,SAAA,GAAA,OAAO,EAAe,CAAA,I5BxmIrD,SAAmB,QAAA,IAAA,IAAA,EAAA,IACf,IAAA,EAAgH,EAAO,UAAvH,OAAS,IAAA,EAAG,WAAM,WAAI,EAAJ,EAAgB,EAAE,EAA4E,EAAO,aAAnF,OAAY,IAAA,GAAO,EAAE,EAAuD,EAAO,gBAA9D,OAAe,IAAA,GAAO,EAAE,EAA+B,EAAO,oBAAtC,OAAmB,IAAA,GAAO,EAUnH,OAAO,SAAC,GACN,IAAI,EACA,EACA,EACA,EAAW,EACX,GAAe,EACf,GAAa,EAEX,EAAc,WACH,OAAf,QAAe,IAAf,GAAA,EAAiB,cACjB,OAAkB,CACpB,EAGM,EAAQ,WACZ,IACA,EAAa,OAAU,EACvB,EAAe,GAAa,CAC9B,EACM,EAAsB,WAG1B,IAAM,EAAO,EACb,IACI,OAAJ,QAAI,IAAJ,GAAA,EAAM,aACR,EAEA,OAAO,IAAc,SAAC,EAAQ,GAC5B,IACK,GAAe,GAClB,IAOF,IAAM,EAAQ,EAAiB,OAAP,QAAO,IAAP,EAAA,EAAW,IAOnC,EAAW,KAAI,WAMI,MALjB,GAKuB,GAAe,IACpC,EAAkB,GAAY,EAAqB,GAEvD,IAIA,EAAK,UAAU,IAGZ,GAID,EAAW,IAOX,EAAa,IAAI,GAAe,CAC9B,KAAM,SAAC,GAAU,OAAA,EAAK,KAAK,EAAV,EACjB,MAAO,SAAC,GACN,GAAa,EACb,IACA,EAAkB,GAAY,EAAO,EAAc,GACnD,EAAK,MAAM,EACb,EACA,SAAU,WACR,GAAe,EACf,IACA,EAAkB,GAAY,EAAO,GACrC,EAAK,UACP,IAEF,GAAU,GAAQ,UAAU,GAEhC,GA7DO,CA6DJ,EACL,CACF,C4BmgIgE,CAAM,CAAE,oBAAqB,kBAAM,GAAM,SAC/F,EAAK,IAAI,IAAY,SAAA,GACvB,IAAI,GAAA,EACE,EAAe,EAAO,UAAU,CAClC,KAAA,SAAK,GACD,GAAA,EACA,EAAS,KAAK,EAClB,EACA,MAAA,SAAM,GACF,EAAS,MAAM,EACnB,EACA,SAAA,WACI,EAAS,UACb,IAKJ,OAHK,GAAY,EAAa,QAC1B,EAAS,KAAK,GAEX,CAAY,IAGvB,OADA,EAAG,SAAW,kBAAM,CAAA,EACb,CACX,CAEA,IAAM,GAA2B,IAAW,SAAA,GAAA,OACjC,GAA4B,IAAU,kBAAM,EAAG,MACjD,MAAM,CAAE,QAAS,eACjB,UACA,MAAM,SAAA,GACP,IAGyD,EAHnD,EAAK,CAAC,EACZ,EAAA,EAAmB,EACd,QACA,MAAK,SAAC,EAAG,GAAA,OAAO,EAAE,WAAa,IAAM,EAAE,WAAa,WAFzD,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAGI,KAHO,EAAA,EAAA,MAGP,EAAG,EAAK,MAAQ,CAAA,CAEpB,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,QAAO,CAAE,OACR,CAAC,MAGJ,GAAqC,IAAW,SAAA,GAAA,OAC3C,GAA4B,GAAsB,EAAG,QAAQ,KAAK,IAAW,SAAA,GAAA,OAAgB,IAAU,kBAAM,EAAG,YAAY,IAAK,SAAU,WAAW,kBAAM,QAAQ,IAAI,CAC3K,EAAG,QAAQ,MAAM,CAAE,OAAQ,EAAY,SAAU,UACjD,EAAG,OAAO,UACV,EAAY,SACb,MAAK,SAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAuB,MAEpB,CAAE,YAFH,EAAA,GAEgB,OAFH,EAAA,GAEW,OAFH,EAAA,GAEG,cAC1B,CACJ,YAAa,GACb,OAAQ,GACR,aACI,OAAO,EAAG,MAAM,aACpB,OAyBR,SAAS,KAAoB,QAAA,EAAA,UAAA,OAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GACzB,GAA2B,IAAvB,EAAY,OACZ,MAAO,CAAC,EACZ,IAAM,EAAU,EAAY,QAAO,SAAC,EAAQ,GAExC,IADA,IAAM,EAAM,OAAO,OAAO,CAAC,EAAG,GAC9B,EAAA,EAAA,EAA6B,OAAO,QAAQ,GAAA,EAAA,EAAA,OAAA,IAAA,CAAvC,IAAA,EAAA,EAAA,EAAA,GAAA,GAAO,EAAA,EAAA,GAAM,EAAA,EAAA,GACd,GAAI,KAAQ,GAAO,EAAI,GAAO,CAC1B,GAAkB,MAAd,EAAI,GACJ,SACJ,GAAe,MAAX,EACA,EAAI,GAAQ,SAEX,GAAI,MAAM,QAAQ,IAAW,MAAM,QAAQ,EAAI,IAAQ,CAExD,IAAM,EAAI,EACJ,EAAU,EAAE,GAClB,EAAE,GAAA,EAAY,IAAI,IAAA,GAAA,OAAA,EAAQ,GAAA,EAAY,KAC1C,MACK,GAAsB,iBAAX,GACZ,GACqB,iBAAd,EAAI,GAGX,IADA,IAAM,EAAe,EAAI,GACzB,EAAA,EAAA,EAAuC,OAAO,QAAQ,GAAA,EAAA,EAAA,OAAA,IAAA,CAAjD,IAAA,EAAA,EAAA,EAAA,GAAA,GAAO,EAAA,EAAA,GAAW,EAAA,EAAA,GACa,MAA5B,EAAa,KAEG,MAAhB,EACA,EAAa,GAAa,IAErB,MAAM,QAAQ,EAAa,KAChC,MAAM,QAAQ,KACd,EAAa,GAAA,EACN,IAAI,IAAA,GAAA,OAAA,EAAQ,EAAa,IAAA,EAAe,OAI3D,CACJ,MAeI,EAAI,GAAQ,EAAK,EAGzB,QAAO,CAAG,IAEd,OAAO,CACX,CAEA,IAAM,GAAiC,IAAW,SAAA,GAAA,OAtElD,SAA4B,EAAG,GAC3B,IAAI,EACE,EAAK,EAAE,KAAK,IAAO,SAAA,GAAA,OAAO,EAAe,EAAO,EAAA,KAItD,OAHA,EAAG,SAAW,2BAAM,EACd,EACC,EAAe,EAAO,EAAE,WAAA,EACxB,CACX,CAPA,CAuEc,GAA4B,GAAc,CAChD,GAAmC,EAAG,QACtC,GAAyB,EAAG,UAC7B,KAAK,IAAI,SAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAmC,MAAiB,CAC5D,YADY,EAAA,YAEZ,OAFyB,EAAA,OAGzB,OAHiC,EAAA,OAIjC,YAJ2C,EAAA,GAI3C,KACE,CACF,YAAa,GACb,OAAQ,GACR,OAAQ,GAAkB,OAC1B,YAAa,CAAC,KAEW,SAAA,GAAgC,IAA7B,EAAA,EAAA,YAAa,EAAA,EAAA,OAAQ,EAAA,EAAA,OAAQ,EAAA,EAAA,YACnD,EAAK,EACN,KAAK,SAAA,GACN,IAAM,EAAmB,EAAY,QAAQ,SAAA,GAAA,OAAM,EAAE,UAAY,EAAM,OAAA,IACjE,EAAuB,EACxB,KAAK,SAAA,GAAA,OAAM,EAAE,WAAA,IACb,QAAQ,SAAA,GAAA,OAAM,CAAA,IACb,EAAqB,GAAQ,EAAiB,KAAK,SAAA,GAAA,OAAM,EAAE,KAAA,IAAO,QAAQ,SAAA,GAAA,OAAa,CAAA,KACxF,KAAK,SAAA,GAAA,OAAS,EAAY,EAAA,IAC1B,QAAQ,SAAA,GAAA,OAAS,CAAA,IACjB,KAAK,SAAA,GAAA,OAAS,EAAK,WAAA,IACxB,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAQ,CAAE,YAAa,EAAM,QAAU,EACpE,CAAE,OAAQ,KACV,GAAA,WAAA,EAAA,EAAoB,GAAA,OAAA,EAAyB,MAAsB,IAE5E,QAAO,SAAC,EAAG,GAAA,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAA,EAAA,GAAO,EAAE,QAAU,GAAA,GAAA,EAAA,GACrE,EAAS,CACN,QAAS,EACT,MAAO,EACP,KAAM,EACN,YAAa,CAAE,OAAQ,QAG/B,OAAO,CAAE,OAIX,GAAA,WACF,SAAA,EAAY,EAAa,EAAW,GAAA,EAAA,KAAA,GAChC,KAAK,YAAc,GAAe,CAAC,EACnC,KAAK,UAAY,EACjB,KAAK,QAAU,CACnB,CAgDA,OA/CA,EAAA,EAAA,EAAA,IAAA,MAAA,MAAA,WAGI,IAHG,IACC,EADD,EAAA,KAGH,EAAA,UAAA,OAHG,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GAGH,MAAgC,MAA5B,KAAK,YAAY,WAGkB,QAAlC,EAAK,KAAK,YAAY,cAAA,IAAoB,OAAA,EAAyB,EAAG,SAAS,KAAK,aAG5D,MAAzB,KAAK,YAAY,OAGjB,EAAW,OAAO,SAAA,GAAgB,IAAI,EAAI,OAAuC,QAA/B,EAAK,EAAK,YAAY,WAAA,IAAiB,OAAA,EAAyB,EAAG,SAAS,EAAU,GAIhJ,GACA,CAAA,IAAA,SAAA,MAAA,WACI,IAAI,EAAI,EAER,GAAI,KAAK,SAAuC,MAA5B,KAAK,YAAY,OACjC,SAEJ,GAAuC,QAAlC,EAAK,KAAK,YAAY,cAAA,IAAoB,OAAA,EAAyB,EAAG,SAAS,KAAK,WACrF,SAGJ,QAAA,EAAA,UAAA,OAVM,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GAUN,GAAgC,MAA5B,KAAK,YAAY,OACjB,OAAO,EAAM,OAAO,SAAA,GAAA,MAAkB,UAAT,CAAA,IAEjC,IAAM,EAAsD,QAAlC,EAAK,KAAK,YAAY,cAAA,IAAoB,OAAA,EAAyB,EAAG,KAAK,WAGrG,MAAyB,MAArB,EACO,EAAM,OAAO,SAAA,GAAA,MAAkB,UAAT,CAAA,IAE1B,EAAM,OAAO,SAAA,GAAA,OAAS,MAAA,OAAA,EAAoE,EAAiB,MAAM,SAAA,GAAA,OAAkB,IAAkB,GAA2B,MAAlB,GAAkC,UAAT,CAAA,MAClM,GACA,CAAA,IAAA,SAAA,MAAA,WACI,IAAI,EAEJ,SAAI,KAAK,SAAuC,MAA5B,KAAK,YAAY,YAGE,QAAlC,EAAK,KAAK,YAAY,cAAA,IAAoB,OAAA,EAAyB,EAAG,SAAS,KAAK,WAG7F,KAAA,CAAA,CArDE,GAiFA,GAAuB,IAAW,SAAA,GACpC,IAAM,EAAiB,GAAsB,EAAG,QAAQ,KAAK,IAAW,SAAA,GAAA,OAAgB,IAAU,kBAAM,EAAG,QAAQ,MAAM,CAAE,MAAO,EAAY,OAAS,KAAM,SAAA,QACvJ,EAAc,GAA+B,EAAG,QAEtD,OAAO,GAA4B,GAAc,CAAC,EAD5B,GAAmC,EAAG,QACqB,IAAc,KAAK,IAAI,SAAA,GAAiC,IAAA,EAAA,EAAA,EAAA,GAA/B,EAAA,EAAA,GAAgB,EAAA,EAAA,GAAe,EAAA,EAAA,GAC/H,EAAU,SAAC,EAAQ,GAAA,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAA,EAAA,GAAY,EAAE,GAAK,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAI,CAAE,MAAO,EAAY,EAAE,YAAA,EACxI,EAAmB,EAAe,OAAO,EAAS,CAAC,GACnD,EAAc,EAAc,YAAY,OAAO,EAAS,GAC9D,OAAO,OAAO,OAAO,GAChB,QAAQ,SAAA,GAAA,OAAY,EAAO,QAAA,IAC3B,KAAK,SAAA,GAAA,OAAY,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAS,CAAE,OAAA,WACzD,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,cAAA,EAAA,KAAA,EAC7B,EAAG,QAAQ,OAAO,EAAO,GAAI,CAAE,SAAU,IAAI,OACvD,wBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,EACA,OAAA,WACI,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,cAAA,EAAA,KAAA,EAC7B,EAAG,QAAQ,OAAO,EAAO,GAAI,CAAE,SAAU,IAAI,OACvD,wBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,MAAM,KACT,GAAG,IAGN,GAAkB,CACpB,YAAA,GAEJ,SAAS,GAAW,GAAA,IAAA,EAAA,KACV,EAAc,EAAM,KAIpB,EAAqB,GAAsB,GAC3C,EAAgB,GAClB,GAAA,EAEA,EAAkB,KACtB,EAAM,GAAG,SAAU,SAAA,GAAA,OAAU,GAAU,OAAA,OAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OACzD,OADyD,EAAA,KAAA,EAAA,EAAA,KAAA,EAmI7D,SAAmB,GACf,IAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAC5B,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,YAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAmBnC,GAlBA,GAAA,EACM,EAAK,GAAa,GAEF,oBAAX,QAA8C,oBAAb,YACN,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,iBAClE,EAAc,KA3iBlC,SAAyB,GACrB,IAAI,GAAA,EACE,EAAK,SAAS,cAAc,OAalC,OAZI,SAAS,MACT,SAAS,KAAK,YAAY,GAC1B,GAAE,GAAE,GAAU,CAAE,GAAI,EAAG,MAAQ,IAG/B,iBAAiB,oBAAoB,WAC5B,IACD,SAAS,KAAK,YAAY,GAC1B,GAAE,GAAE,GAAU,CAAE,GAAI,EAAG,MAAQ,GACnC,IAGD,CACH,YAAA,WACI,IACI,EAAG,QACP,CACA,MAAO,GAAM,CACb,GAAA,CACJ,EACA,aACI,OAAO,CACX,EAER,CA3BA,CA2iBuD,KAGtC,EAAG,MAAM,mBACV,EAAc,KApgB9B,SAA0B,GACtB,IAAI,EAAc,EAAG,MAAM,gBAAgB,MACrC,EAAsB,EAAG,MAAM,gBAAgB,KAAK,IAAW,SAAA,GACjE,IAAM,EAAa,EACnB,EAAc,EACd,IAAM,EAAK,GAAG,GACd,OAAQ,GAKJ,IAAK,eACD,OAAO,GAAa,MAAQ,EAAG,KAAK,GAAa,MAAQ,EAG7D,IAAK,aACD,MAAsB,gBAAf,GAA+C,UAAf,EACjC,EACA,EAAG,KAAK,GAAa,MAC/B,QACI,OAAO,EACf,KAEJ,OAAO,GAAc,CACjB,EACA,EAAG,sBAAsB,KAAK,GAAU,CAAE,MAAO,aACjD,GAAsB,EAAG,GAAG,QAC5B,KACD,KAAK,IAAI,SAAA,GAA2B,IAC/B,EAD+B,EAAA,EAAA,EAAA,GAAzB,EAAA,EAAA,GAAQ,EAAA,EAAA,GAAW,EAAA,EAAA,GAAM,EAAA,EAAA,GAEnC,IAA6B,QAAvB,EAAK,EAAK,eAAA,IAAqB,OAAA,EAAyB,EAAG,SAAmC,OAAxB,EAAK,QAAQ,OACrF,MAAO,CACH,MAAO,UACP,OAAQ,UACR,QAAS,EAAK,QAAQ,QAG9B,IAAM,EAA2B,EAA7B,MAAS,EAAoB,EAAtB,MAAS,EAAa,EAAf,SACd,EAAiB,EAiCrB,MAhCc,UAAV,IAIA,EAAiB,SAEN,gBAAX,IAGc,YAAV,GAAiC,YAAV,IACvB,EAAiB,eAKH,UAFA,EAAG,MAAM,UAAU,MAAM,OAEO,YAApB,EAAU,OAA2C,YAApB,EAAU,QAEzE,EAAiB,cAKhB,IACD,EAAiB,gBAEJ,CACb,MAAA,EACA,MAAA,EACA,SAAA,EACA,OAAQ,GAAW,EAAiB,UACpC,QAAS,KAEE,IAEvB,CAzEA,CAogBoD,GAAI,UAAU,EAAM,MAAM,YAGlE,EAAc,KAAK,EAAG,kBAAkB,UAAU,IAG7C,EAAG,OAAO,OAAO,SAAA,GAAA,OAAU,EAAM,IAAA,KAClC,OAEoB,kBAAmB,WAAA,CAAA,EAAA,KAAA,eAAA,EAAA,KAAA,EAC/B,UAAU,cAAc,mBAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,gBAAA,EAAA,GAC9B,WACA,OAHA,EAAA,EAAA,GAAA,EAAA,KAAA,GAGwB,EAAG,YAAY,KAAM,EAAG,YAAY,kBAAM,GAAU,OAAA,OAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAG1D,OAH0D,EAExE,EAAG,MAAvB,EAAA,EAAF,QAAW,EAAA,EAAF,OAAA,EAAA,KAAA,EACuD,QAAQ,IAAI,CAC9E,EAAG,aACH,EAAG,YACH,EAAG,0BAAA,OAHmC,GAGnC,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,GAHA,EAAA,EAAA,GAAkB,EAAA,EAAA,GAAiB,EAAA,EAAA,IAKrC,EAAA,CAAA,EAAA,KAAA,YAKK,GACN,KAAK,UAAU,KAAsB,KAAK,UAAU,GAAA,CAAA,EAAA,KAAA,YAE/C,EAAA,CAAA,EAAA,KAAA,eACK,IAAI,MAAM,0BAEO,cADrB,EAAsB,OAAO,OAAO,CAAC,EAAG,IACnB,YAAA,EAAA,KAAA,GACrB,EAAG,WAAW,IAAI,EAAqB,WACjD,QAAA,EAAA,KAAA,iBAVI,EAAG,MAAM,QAAU,GAAoB,KAqC3C,YA1BiC,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,sBACjE,kBAAmB,WACnB,EAAgB,OAAS,IACxB,GAKD,EAAG,MAAM,oBAAA,IAMwB,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,sBAChE,EAAG,MAAM,kBAOd,EAAG,MAAM,oBAAA,GAEb,GAAwB,EAAQ,EAAG,MAAM,SACzC,GAAwB,EAAiB,EAAG,MAAM,UAC7C,EAAA,CAAA,EAAA,KAAA,YAKK,GACN,KAAK,UAAU,KAAqB,KAAK,UAAU,GAAA,CAAA,EAAA,KAAA,SAGnD,IADM,EAAqB,GAAmB,CAAC,EAC/C,EAAA,EAAA,EAAiC,OAAO,QAAQ,GAAA,EAAA,EAAA,OAAA,IAAS,EAAA,EAAA,EAAA,GAAA,GAA7C,EAAA,EAAA,GAAO,EAAA,EAAA,IACT,EAAe,EAAmB,KAKpC,EAAa,cAAgB,EAAU,cACvC,EAAU,QAAU,EAAa,QACjC,EAAa,kBAAoB,EAAU,mBAL3C,EAAmB,GAAS,OAAO,OAAO,CAAC,EAAG,GAOtD,OAAA,EAAA,KAAA,GACM,EAAG,WAAW,IAAI,EAAoB,kBAG5C,OAAO,OAAO,EAAQ,GAC1B,QAAA,EAAA,KAAA,iBArBI,EAAG,MAAM,OAAS,GAAmB,KAsBzC,eAAA,EAAA,OAAA,SAAO,MAAA,OAAA,EAAwE,EAAmB,iBACtG,yBAAA,EAAA,OAAA,GAAA,EAAA,gBAKsF,IA/EhF,EAAA,EAAA,OA4EF,EAAG,oBAAA,GAnzBnB,SAAsB,GAClB,IAAI,EAAI,EACe,EAAvB,EAAA,EAAoB,EAAG,QAAA,IAAvB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MACI,KADO,EAAA,EAAA,MACP,GAA0F,QAArF,EAAgC,QAA1B,EAAK,EAAG,MAAM,cAAA,IAAoB,OAAA,EAAyB,EAAG,EAAM,aAAA,IAAmB,OAAA,EAAyB,EAAG,cAAe,CACzI,GAAI,EAAM,OAAO,QAAQ,KACrB,MAAM,IAAI,GAAM,YAAA,SAAA,OAAqB,EAAM,KAAA,kFAAA,OACK,KAAK,UAAU,EAAM,MAAA,kCAEzE,IAAK,EAAM,OAAO,QAAQ,QACtB,MAAM,IAAI,GAAM,YAAA,SAAA,OAAqB,EAAM,KAAA,kFAAA,OACK,KAAK,UAAU,EAAM,MAAA,iCAE7E,EAER,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,CAuyBY,CArzBZ,CAqzByB,GAAA,EAAA,IACoB,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,eAAiB,GAAA,EAAA,GAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,GA93ClG,SAA4B,EAAI,EAAc,GAC1C,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,cAAA,EAAA,KAAA,EAE7B,GAAK,EAAI,EAAc,EAAa,CAAE,eAAA,IAEhD,wBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CANA,CA+3CyC,EAAI,EAAG,MAAM,QAAS,EAAG,MAAM,QAAA,QACxD,EAAG,oBAAA,GAAmB,QAIZ,GADd,IAAA,EAAA,GACK,EAAG,MAAM,kBAAA,EAAA,GAAA,CAAA,EAAA,KAAA,SAGwE,OAFlF,EAAc,KAAK,IAAU,kBAAM,EAAG,gBAAA,IAAkB,UAAU,IAElE,EAAc,KAAK,IAAU,kBAAM,EAAG,uBAAA,IAAyB,UAAU,EAAG,MAAM,qBAAA,EAAA,KAAA,GAK5E,GAAc,CAChB,EAAmB,KAAK,GAAK,GAAI,GAAK,IACtC,EAAG,MAAM,mBAAmB,KAAK,GAAK,GAAI,GAAK,MAChD,YAAA,QAI6D,GADhE,GAAA,EAAc,EAAA,GACc,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,aAAA,EAAA,GAAA,CAAA,EAAA,KAAA,SAChE,OADgE,EAAA,KAAA,GAC5C,GAAM,GAAA,QAA1B,EAAA,EAAA,KAAA,QAEA,GACA,EAAgB,OACpB,EAAkB,KAClB,IACI,EAAG,MAAM,qBAAmD,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,cAChG,GAAkB,EAAI,EAAc,OAAS,QAAQ,OAAM,eAhlJ3E,SAAmC,GAC/B,IAAI,EACJ,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAIvB,OAJuB,EAAA,KAAA,EAAA,EAAA,KAAA,EAIA,UAAU,cAAc,MAAA,OAAjD,GAAiD,EAAA,EAAA,OAA/C,EAAA,EAAF,cACF,CAAA,EAAA,KAAA,SACA,OADA,EAAA,KAAA,EAAA,EAAA,KAAA,EAEU,EAAa,SAAA,eAAA,OAAwB,EAAG,MAAoC,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,cAE1H,OAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,iBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,kCAAA,EAAA,OAAA,GAAA,EAAA,yBAahB,CAxBA,CAilJ0C,GAAI,OAAM,iBAEF,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,cACtE,EAAG,MAAM,SACR,EAAG,MAAM,qBAEV,EAAkB,GAAgB,EAAI,EAAG,MAAM,QAAS,EAAG,MAAM,SACjD,QAChB,GAAY,EAAI,EAAc,OAAS,SAG3C,IACK,EAAG,MAAM,mBACV,EAAc,KAAK,GAAU,KAAM,UAAU,WAAU,WAEnD,EAAG,sBAAsB,KAAK,CAC1B,MAAO,gBAEN,GAAoB,IACrB,GAAY,EAAI,OACpB,IACA,GAAU,KAAM,WAAW,WAAU,WAErC,EAAG,sBAAsB,KAAK,CAC1B,MAAO,WACT,OAIuB,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,eACnC,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,mBACjE,IACD,EAAc,KA/nC9B,SAA0B,GAAA,IAClB,EADkB,EAAA,KAEtB,KAAkC,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,aAClE,MAAM,IAAI,MAAM,2CAEpB,IAAM,EAAkB,EAAG,gBAAgB,aAAa,KAAK,IAAQ,SAAA,GAAA,OAAY,CAAA,IACjF,IAAU,kBAAM,EAAG,uBAAA,IACnB,IAAQ,SAAA,GAAA,OAAc,GAAa,EAAU,cAAA,IAC7C,IAAW,SAAA,GAAA,OAAc,GAAU,OAAA,OAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAKjD,OALiD,EAAA,GAI5C,EAAU,eAAA,EAAA,KAAA,EACK,GAAoB,GAAA,cAAA,EAAA,GAAA,EAAA,KAAA,EAAA,OAAA,UAFxC,KAAM,QACN,IAAA,EAAA,GACA,aAAA,EAAA,KAAA,wBAAA,EAAA,OAAA,GAAA,EAAA,IAER,KAuDA,OAtDA,SAAS,IAAA,IAAA,EAAA,KACL,OAAO,EAAG,MAAM,mBAAmB,KAAK,IAAQ,SAAA,GAAA,OAAc,MAAA,OAAA,EAAsD,EAAU,cAAA,IAC9H,GAAK,GACL,IAAW,SAAA,GAAA,OAAc,EAAG,MAAM,YAAY,KAAK,IAAK,SAAA,GAAA,MAAc,CAAC,EAAW,EAAA,QAAe,IAAU,SAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAE,EAAA,EAAA,GAAW,EAAA,EAAA,UAI7G,GAAmB,KAAK,IAAK,SAAA,GAAA,MAAa,CAAC,EAAW,EAAY,KAAM,EAAA,QAC/E,IAAU,SAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAE,EAAA,EAAA,GAAW,EAAA,EAAA,UAClB,MAAA,OAAA,EAAsD,EAAU,eAAiB,MAAA,OAAA,EAAsD,EAAU,OAAO,SAAS,EAAU,SAIrK,EAAG,MAAM,mBAAmB,KAAK,IAAQ,SAAA,GAAA,OAAe,MAAA,OAAA,EAAsD,EAAU,OAAO,SAAS,EAAU,WAAA,CAAY,IAAQ,GAAK,GAAI,IAAK,SAAA,GAAA,MAAc,CAAC,EAAW,EAAA,KAElN,IAAI,GAAgB,CAAC,EAAW,GAAA,IACvC,IAAU,SAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAE,EAAA,EAAA,GAAW,EAAA,EAAA,UAAe,GAAU,OAAA,OAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAAuB,OAAvB,EAAA,GAAuB,EAAA,EAAA,KAAA,EAAiB,GAAoB,GAAA,cAAA,EAAA,GAAA,EAAA,KAAA,EAAA,OAAA,UAAA,EAAA,GAAA,EAAA,KAAA,wBAAA,EAAA,OAAA,GAAA,EAAA,IAAa,IAAK,IAAqB,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAE,EAAA,EAAA,GAAU,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAY,EAAA,EAAA,GAAU,EAAA,EAAA,UAAc,IAAa,GAAY,IAAa,CAAA,IAAW,IAAU,SAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAE,EAAA,EAAA,GAAW,EAAA,EAAA,UAI7R,EACO,IAAI,GAAa,EAAG,MAAM,QAAQ,YAAa,EAAG,MAAM,mBAAmB,MAAM,eAAgB,EAAc,EAAG,MAAM,mBAAmB,MAAM,eAAgB,EAAiB,EAAG,MAAM,gBAAiB,EAAU,YAAa,EAAU,uBAG7O,GAAK,OAEhB,IAAY,SAAA,GAAA,MACuD,uBAA9D,MAAA,OAAA,EAA8C,EAAM,MAE9C,IAAA,GAAS,KAAK,IAAU,kBAAM,GAAU,OAAA,OAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAE3D,OAF2D,EAAA,KAAA,EAE9C,EAAG,iBAAA,OAChB,OADA,EAAA,EAAA,KAAA,EAAA,KAAA,EACuB,GAAmB,EAAG,MAAM,QAAQ,YAAa,GAAA,cAAxE,EAAA,EAAA,KAAA,EAAA,KAAA,EAEA,EAAG,MAAM,WAAW,OAAO,EAAK,OAAQ,CAC1C,YAAa,EAAe,YAC5B,sBAAuB,EAAe,sBACtC,OAAQ,EAAe,OACvB,QAAS,EAAe,UAEhC,wBAAA,EAAA,OAAA,GAAA,EAAA,QAAK,IAAU,kBAAM,GAAA,KAGd,IAAW,kBAAM,CAAA,OAE5B,IAAY,SAAA,GAAA,OACZ,EAAG,MAAM,gBAAgB,KAAK,SAC1B,aAAiB,GAEV,IAAW,kBAAM,CAAA,IAErB,GAAK,MAA8C,KAAK,IAAU,kBAAM,GAAA,QAEvF,CArDA,GAsD0B,UAAU,CAChC,KAAO,SAAA,GACC,GAEA,EAAG,gBAAgB,QAAQ,EAC/B,EAEJ,MAAQ,SAAA,GACgC,EAExC,SAAU,WACkC,GAGpD,CApFA,CA+nCoD,IAE5C,yBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,CAxKA,CAjIwB,GACpB,OAAA,EAAA,KAAA,eAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,iCAAA,EAAA,OAAA,GAAA,EAAA,iBAKJ,OAGA,IAAI,GAAA,EACJ,SAAS,IACL,GAAI,EACA,MAAM,IAAI,GAAM,mBACxB,EAnvDJ,SAAoB,EAAI,GACpB,EAAG,GAAG,MAAM,UAAU,GAEtB,IAAM,EAAY,EAAG,OAErB,EAAG,OAAS,WACR,EAAU,KAAK,MACf,GACJ,CAMJ,CAdA,CAovDe,GAAO,WACd,EAAc,SAAS,SAAA,GAAA,OAAiB,EAAa,aAAA,IACrD,GAAA,EACA,GAAmB,EAAgB,OACnC,EAAkB,KAClB,EAAmB,KAAK,GAAkB,IAE9C,IAnjDwC,EAmjDlC,EAAe,IAAI,GACzB,EAAM,MAAQ,CACV,QAAS,gBACT,QAAS,OAAO,OAAO,CAAC,EAAG,IAC3B,OAAQ,KACR,oBACI,OAAO,EAAmB,MAAM,QAAU,GAAkB,MAChE,EACA,YAAa,EACb,UAAW,IAAI,GAAgB,CAC3B,MAAO,UACP,OAAQ,gBAEZ,OAAQ,CACJ,aAAA,GAEJ,mBAAoB,IAAI,QAAA,GACxB,gBAAiB,IAAI,QAAA,GACrB,gBAAiB,IAAI,GAAgB,eACrC,MAAA,SAAM,GACF,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OACX,OAAlB,EAAK,GAAa,GAAA,EAAA,KAAA,EAClB,EAAG,MAAM,OAAA,cAAA,EAAA,KAAA,EACT,GAAM,EAAI,GACpB,wBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,EACA,QAAS,GAAqB,GAC9B,MAAO,GAAyB,GAChC,UAAA,SAAU,GACN,EAAU,EAAM,MAAM,QAAU,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,EAAM,MAAM,SAAU,GACtF,GAAA,EACI,EAAQ,aAAe,EAAQ,aAE/B,EAAM,KAAA,GAAA,OAAU,EAAA,KAAA,OAj7HhC,SAA4B,GACxB,IAAM,EAAM,IAAI,IAAI,GACpB,MAAwB,MAAjB,EAAI,SACL,EAAI,SAAS,MAAM,KAAK,GACxB,EAAI,SAAS,MAAM,KAAK,EAClC,CALA,CAi7HkE,EAAQ,cAC1D,GAAa,GAAO,eAExB,GAAwB,EAAM,MAAM,OAAQ,EAAM,MAAM,QAC5D,EACA,OAAA,WAAoB,IAAX,GAAW,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAD,CAAC,GAAb,MACH,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,WACnC,EAAA,CAAA,EAAA,KAAA,eAAA,EAAA,KAAA,EACY,GAAQ,GAAa,GAAQ,CAAE,oBAAA,IAAoB,OAAA,EAAA,KAAA,sBAAA,EAAA,KAAA,EACnD,GAAO,GAAa,IACpC,wBAAA,EAAA,OAAA,GAAA,EAAA,IACJ,EACA,KAAA,WAAgD,IACxC,EADwC,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAvB,CAAE,MAAA,EAAY,QAAS,QAAzC,EAAA,EAAF,KAAQ,EAAA,EAAF,QAEP,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,YAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAIiF,QAJjF,IAC/B,IACA,GAAA,GACE,EAAK,GAAa,GAAA,EAAA,GAEF,SAD+C,QAA7C,EAAK,EAAG,MAAM,YAAY,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,SAAW,OAAA,EAAA,GAAA,CAAA,EAAA,KAAA,eAAA,EAAA,KAAA,EAG1G,GAAgB,GAAA,UAEV,SAAZ,EAAA,CAAA,EAAA,KAAA,SAC8C,GAAxC,EAAY,EAAG,MAAM,mBAAmB,MAC9C,GAAY,EAAI,IACZ,EAAA,CAAA,EAAA,KAAA,SACM,OADN,EAAA,KAAA,GAC2B,EAAG,MAAM,mBAC/B,KAAK,IAAQ,SAAA,GAAA,OAAyG,OAAvF,MAAA,OAAA,EAA4D,EAAa,cACvG,GAAa,EAAa,UAAY,EAAU,UAAA,IAAa,GAAK,IACnE,YAAA,QAHC,KAIF,OAJE,EAAA,EAAA,WAIF,EAA4D,EAAa,OAAA,CAAA,EAAA,KAAA,eACnE,IAAI,MAAM,eAAiB,EAAa,OAEtD,QAAA,EAAA,KAAA,iBAEC,OAFD,EAAA,KAAA,GAEW,GAAa,GAAA,YAAA,EAAA,KAAA,CAAA,EAAA,KAAA,SAGpB,GAFE,EAAY,EAAG,MAAM,mBAAmB,MAC9C,GAAY,EAAI,GAAA,EAAA,GACZ,GAAA,EAAA,GAAA,CAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,GAEM,GAAK,IAAU,kBAAM,GAAU,OAAA,OAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OACjD,OADiD,EAAA,KAAA,EAC9B,GAAa,GAAA,OAChC,OADA,EAAA,EAAA,KAAA,EAAA,KAAA,EACqB,EAAG,wBAAA,OAAxB,IACD,OADC,EAAA,EAAA,WACD,EAA4D,EAAa,cAAgB,MAAA,OAAA,EAAsD,EAAU,cACzJ,MAAA,OAAA,EAA4D,EAAa,OAAA,CAAA,EAAA,KAAA,cACpE,IAAI,MAAM,eAAiB,EAAa,OAAA,cAAA,EAAA,OAAA,SAC3C,GACX,wBAAA,EAAA,OAAA,GAAA,EAAA,SACK,KAAK,IAAQ,SAAA,GAAA,OAAc,CAAA,IAAW,GAAK,IAC3C,YAAA,yBAAA,EAAA,OAAA,GAAA,EAAA,IAKrB,EACA,YAAW,SAAC,EAAK,GAAA,OA7KzB,SAAqB,EAAO,EAAK,GAC7B,IAAK,EACD,MAAM,IAAI,UAAU,wGACxB,IAAQ,EAAmB,EAArB,MAAS,EAAY,EAAd,QACb,IAAK,EAAW,CACZ,GAAyB,mBAAd,EAAI,MACX,MAAM,IAAI,UAAU,wFAExB,EAAY,EAAI,OACpB,CACA,IAAM,EAAS,GAA+B,GACxC,EAAU,SAAA,GAIZ,IAAM,EAAQ,EAAkB,GAAW,EAAM,MAAM,eACvD,OAAK,EAEE,IAAI,GAAkB,EAAM,YAAa,EAAW,IAAY,EAAM,MAAM,eAAiB,IAAU,EAAM,MAAM,eAD/G,IAAI,GAAkB,CAAC,EAAG,GAAY,GAAS,IAAU,EAAM,MAAM,cACwD,EAEtI,EAAI,EAAO,KAAK,GAAI,IAE1B,OADA,EAAE,SAAW,kBAAM,EAAO,EAAO,WAAA,EAC1B,CACX,CAvBA,CA8K+B,EAAM,OAAQ,EAAK,EAAA,GAG9C,EAAM,QAAQ,UAA4B,iBAAI,GAAM,SAAS,EAAM,QAAQ,UAA4B,kBAAI,SAAA,GAAA,OA10C/G,SAAiC,EAAU,GACvC,OAAO,SAAU,EAAQ,GACrB,IAAM,EAAc,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,IAAqB,GAEzE,OAAO,KAAK,IAAoB,SAAS,SAAA,GACrC,IAAM,EAAY,EAAY,GAE9B,GAAiB,MAAb,EAEA,MAAM,IAAI,MAAA,uBAAA,OAA6B,EAAA,uDAG3C,GAAK,EAAO,GAAZ,CAKA,IAAM,EAAmB,EAAU,MAAM,KAAK,KAAI,SAAA,GAAA,OAAQ,EAAK,MAAA,IACzD,EAAiB,GAAmB,GAAW,MAAM,KAAK,KAAI,SAAA,GAAA,OAAQ,EAAK,MAAA,IAC3E,EAAoB,IAAI,IAAI,EAAiB,KAAI,SAAA,GAAA,OAAS,EAAM,QAAQ,eAAgB,QAE9F,GAAI,EAAiB,KAAO,EAAe,GAEvC,MAAM,IAAI,MAAA,wCAAA,OAA8C,EAAA,4BAAA,OAAoC,EAAA,MAAA,OAAc,KAAK,UAAU,GAAmB,MAGhJ,IAAK,IAAI,EAAI,EAAG,EAAI,EAAe,SAAU,EAAG,CAC5C,IAAM,EAAe,EAAe,GAC/B,EAAkB,IAAI,EAAa,QAAQ,eAAgB,OAE5D,EAAY,IAAA,IAAA,OAAkB,GAEtC,CAlBI,CAkBJ,IAGJ,IAAM,EAAc,EAAM,MAAM,SAAW,EAAM,MAAM,OAAS,CAAC,GAC3D,EAAc,IAAI,IA0BxB,OAzBA,OAAO,KAAK,GAAa,SAAQ,SAAA,GAC7B,IAAM,EAAY,EAAY,GACxB,EAAmB,EAAY,KAAe,EAAY,GAAa,CAAC,GAC7D,MAAb,GACI,MAAM,KAAK,KACX,EAAY,GAAa,EAAY,GAAW,OAAO,GACvD,EAAiB,mBAAA,EACjB,EAAiB,SAjhBrC,SAA6B,EAAW,GAEpC,IADA,IAJiB,EANO,EAAM,EAU1B,EAAK,EAAU,GAAG,oBACb,EAAI,EAAG,EAAI,EAAU,OAAQ,EAAI,GAAK,EAAG,OAAS,IAAK,GACxD,GAAW,KAAK,EAAU,MANjB,EAMoC,EAAU,KALlD,KAAO,GAAM,OAMlB,GAAM,EAAU,GAAG,eAE3B,KAAO,EAAY,IAAI,IAAK,CACxB,GAAI,MAAM,KAAK,GAAK,CAEhB,MADA,EAAK,EAAG,OAAO,EAAG,EAAG,OAAS,IAAM,EAAG,EAAG,OAAS,GAAK,IACjD,OAAS,GAGZ,SAFA,EAAK,EAAG,OAAO,EAAG,EAG1B,MACK,GAAI,EAAG,OAAS,EAAG,CACpB,GAAU,IACV,QACJ,CAGA,IAFA,IAAI,EAAS,EACT,EAAa,EACV,EAAY,IAAI,IAAe,EAAS,GA7B3B,EA8BgB,EAAhC,GA7BQ,GADc,EA8Bc,GA7BxB,EAAK,GAAG,cAAgB,EAAK,GAAG,gBACxC,EAAP,EAAW,EAAK,GAAG,cAAgB,EAAK,GAAG,gBACpC,EAAP,EAAW,EAAK,GAAG,cAAgB,EAAK,GAAG,iBA4BtC,EAEN,GAAI,EAAS,EACT,EAAK,MACJ,CACD,IAAI,EAAY,EAAG,WAAW,GAAK,EAAK,IACxC,EAAK,EAAG,OAAO,EAAG,GAAK,OAAO,aAAa,EAE/C,CACJ,CACA,OAAO,CACX,CAjCA,CAihBoE,EAAW,GAC3D,EAAY,IAAI,EAAiB,WAEhC,MAAM,KAAK,KACZ,EAAA,IAAA,OAAgB,EAAA,eAAyB,QACzC,EAAiB,eAAA,GAEjB,EAAiB,UACjB,EAAiB,SAAA,KAIrB,EAAiB,SAAA,EACjB,EAAiB,eAAA,EACjB,EAAA,IAAA,OAAgB,EAAA,eAAyB,KAC7C,IAEO,EAAS,KAAK,KAAM,EAAa,EAEhD,CACJ,CA0wC4H,CAAwB,EAAU,EAAA,IAC1J,EAAM,MAAM,UAAU,MAAQ,WAA8B,IAAlB,GAAkB,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAD,CAAC,GAApB,aAC9B,EAAW,GAAgB,EAAa,OAAO,EAAa,OAAS,GAC3E,OAAO,GAAY,EAAM,MAAM,OAAO,KAAK,MAAM,UAAY,GAAI,EACrE,EACA,EAAM,MAAM,UAAU,SAAW,WAC7B,IAAI,EAAI,EACR,OAAkG,QAAzF,EAAqC,QAA/B,EAAK,KAAK,GAAG,MAAM,cAAA,IAAoB,OAAA,EAAyB,EAAG,KAAK,aAAA,IAAmB,OAAA,EAAyB,EAAG,WAAa,EACvJ,EACA,EAAM,IAliDV,SAAS,GAA0D,IAAvB,EAAA,EAAF,sBAAyB,EAAA,EAAF,GAC7D,MAAO,CACH,MAAO,SACP,KAAM,6BACN,MAAO,EACP,OAAS,SAAA,GACL,IACI,EADE,EAAiB,EAAK,OAAO,OAAO,QAAQ,SAAA,GAAA,OAAO,MAAM,KAAK,EAAE,KAAA,IAEtE,IACI,EAAc,IAAI,IAAI,EAAe,KAAK,SAAA,GAAA,MAAQ,CAC9C,EAAI,KACJ,EAAK,MAAA,IAAA,OAAU,EAAI,KAAA,mBAE3B,CACA,MAAO,GACH,IACJ,CACA,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAO,CAAE,YAAa,SAAC,EAAQ,GAC9D,IAAI,EACJ,GAAa,cAAT,EAAsB,CACtB,IAAM,EAAiB,EAClB,QAAQ,SAAA,GAAU,IAAI,EAAI,EAAI,OAAsF,QAA9E,EAAgC,QAA1B,EAAK,EAAG,MAAM,cAAA,IAAoB,OAAA,EAAyB,EAAG,UAAA,IAAkB,OAAA,EAAyB,EAAG,aAAa,IACrK,KAAK,SAAA,GAAA,OAAQ,GAAiB,EAAA,IACnC,EAAK,EAAK,YAAA,GAAA,OAAA,EAAgB,GAAA,EAAW,IAAiB,EAC1D,MAEI,EAAK,EAAK,YAAY,EAAQ,GAElC,GAAa,cAAT,EAAsB,CAEtB,EAAG,KAAO,GAAe,IACzB,EAAG,QAAU,EAGb,EAAG,YAAc,EAAsB,MACvC,GAAwB,MAAM,IAAI,GAClC,GAAwB,KAAK,GAAwB,OACrD,IAAM,EAAoB,SAApB,IACF,EAAG,oBAAoB,WAAY,GACnC,EAAG,oBAAoB,QAAS,GAChC,EAAG,oBAAoB,QAAS,GAChC,GAAwB,MAAM,OAAO,GACrC,GAAwB,KAAK,GAAwB,MAAM,EAEzD,EAAa,WACX,EAAG,iBACF,GAAoB,IACrB,GAAY,EAAI,QAEpB,GAAmB,EAEvB,EAAG,iBAAiB,WAAY,GAChC,EAAG,iBAAiB,QAAS,GAC7B,EAAG,iBAAiB,QAAS,EACjC,CACA,OAAO,CAAE,EACV,MAAQ,SAAA,GACP,IAAM,EAAQ,EAAK,MAAM,GACzB,GAAI,MAAM,KAAK,GACX,OAAI,EAAU,SAAS,cAKZ,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAQ,CAAE,OAAS,SAAA,GAAA,MACjC,QAAb,EAAI,MAA+B,QAAb,EAAI,OAC1B,EAAI,MAAM,gBAAA,GAEP,EAAM,OAAO,EAAA,IAGT,YAAd,EACE,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAQ,CAAE,OAAS,SAAA,GAAA,OAE3C,EACF,OAAO,GACP,MAAM,SAAA,GAAA,OAEP,EAAI,MAAM,gBAAA,EAEH,CAAA,IAEN,OAAO,SAAA,GAAA,OAED,QAAQ,OAAO,EAAA,OAK3B,EAGf,IAAQ,EAAW,EAAb,OACA,EAAY,EAAY,IAAI,GAClC,OA3IpB,SAAsB,GAClB,IAAM,EAAO,WAAa,GAC1B,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAQ,CAAE,MAAO,GAAS,EAAM,MAAO,GAAO,IAAK,GAAS,EAAM,IAAK,GAAO,QAAS,GAAS,EAAM,QAAS,GAAO,WAAY,GAAS,EAAM,WAAY,GAAO,MAAO,GAAS,EAAM,MAAO,GAAO,OAAQ,GAAU,EAAM,OAAQ,IACnR,CAHA,CA2IwC,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAQ,CAAE,OAAS,SAAA,GAC/D,IAAI,EAAI,EAAI,EACN,EAAQ,EAAI,MAClB,OAAK,EAAM,KAEP,EAAM,sBACC,EAAM,OAAO,IACmE,QAApF,EAAgC,QAA1B,EAAK,EAAG,MAAM,cAAA,IAAoB,OAAA,EAAyB,EAAG,UAAA,IAAwB,OAAA,EAAyB,EAAG,iBAE5F,QAA5B,EAAK,EAAM,mBAAA,IAAyB,OAAA,EAAyB,EAAG,YAKnD,gBAAb,EAAI,KACL,EAEG,MAAM,CACP,MAAO,CAAE,MAAO,EAAI,MAAO,MAAO,EAAO,YACzC,MAAO,EAAI,MACX,QAAA,IAGC,MAAM,SAAA,GAAA,OACA,EAAa,CAChB,KAAM,SACN,KAAM,EAAI,OACV,MAAO,EAAI,MACX,SAAU,CAAE,MAAO,KAAM,MAAO,EAAI,QAAA,IAG1C,EAAa,GAvBR,EAAM,OAAO,GAJb,EAAM,OAAO,EA2BD,KAE/B,SAAS,EAAa,GAClB,IAAM,EAAQ,EAAI,MAClB,EAAM,gBAAA,EACN,IAAQ,EAAmC,EAArC,KAAuB,EAAc,EAA7B,YAAa,OACnB,EAAS,EAAX,KACA,IAAS,EAAM,QACrB,OAAO,EAAM,OAAO,GAAK,MAAM,SAAA,GAC3B,IAAqB,EAA0B,EAAvC,YAA0B,EAAa,EAAf,SAC5B,EAAgB,WAAT,EAAoB,EAAI,KAAO,EAAI,QAC1C,EAAS,WAAY,EAAM,EAAI,OAAS,GACxC,EAAU,YAAa,GAAO,EAAI,QAClC,IACA,EAAO,EAAK,QAAO,SAAC,EAAG,GAAA,OAAS,EAAS,EAAA,IACzC,EAAS,EAAO,QAAO,SAAC,EAAG,GAAA,OAAS,EAAS,EAAA,KAEjD,IAAM,EAAK,KAAK,MACV,EAAmB,WAAb,EAAI,KACV,CACE,KAAM,SACN,GAAA,EACA,KAAA,EACA,KAAA,EACA,SAAU,EAAI,SACd,KAAA,EACA,OAAA,GAEW,QAAb,EAAI,KACA,CACE,KAAM,SACN,GAAA,EACA,KAAA,EACA,KAAA,EACA,KAAA,EACA,OAAA,EACA,OAAA,GAEF,EAAI,UAAY,EAAI,WAChB,CAEE,KAAM,SACN,GAAA,EACA,KAAA,EACA,KAAA,EACA,SAAU,EAAI,SACd,WAAY,EAAI,WAChB,KAAA,EACA,OAAA,GAEF,EACI,CAEE,KAAM,SACN,GAAA,EACA,KAAA,EACA,KAAM,EAAQ,KACd,YAAa,EAAQ,YACrB,KAAA,EACA,OAAA,GAEF,CACE,KAAM,SACN,GAAA,EACA,KAAA,EACA,KAAA,EACA,OAAA,EACA,KAAA,EACA,OAAA,GAEpB,OAAO,EAAK,OAAS,GAAM,aAAc,GAAO,EAAI,SAC9C,EACG,OAAO,CAAE,KAAM,MAAO,MAAA,EAAO,OAAQ,CAAC,KACtC,MAAK,kBAAM,CAAA,IACd,CAAG,GAEjB,IACA,EAGpB,CAq1Cc,CAAiC,CACvC,sBAAuB,EAAM,MAAM,YACnC,GAAI,GAAa,MAErB,EAAM,KA7pDkC,EA6pDK,GAAa,GA5pDnD,CACH,MAAO,SACP,KAAM,+BACN,MAAO,EACP,OAAS,SAAA,GAAA,OACE,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAO,CAAE,MAAQ,SAAA,GAChD,IAAM,EAAQ,EAAK,MAAM,GACzB,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAQ,CAAE,OAAS,SAAA,GAClD,IAAI,EAAI,EAAI,EAAI,EAEhB,GAAI,EAAI,MAAM,sBACV,OAAO,EAAM,OAAO,GAExB,IAAM,EAAQ,EAAI,MAClB,IAAyF,QAApF,EAAgC,QAA1B,EAAK,EAAG,MAAM,cAAA,IAAoB,OAAA,EAAyB,EAAG,UAAA,IAAwB,OAAA,EAAyB,EAAG,iBACxG,QAAb,EAAI,MAA+B,QAAb,EAAI,MAAA,KAMJ,EANI,EAAA,EAMR,EAAI,QAAA,IAAtB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAA8B,KAAnB,EAAA,EAAA,MACF,EAAI,QACL,EAAI,MAAQ,EAAM,YAAY,QAE7B,EAAI,UACL,EAAI,QAAU,EAAM,YAAY,QAEpC,IAAM,EAA2D,QAApD,GAAM,EAAK,EAAM,OAAO,YAAY,kBAAA,IAAwB,OAAA,EAAyB,EAAG,KAAK,EAAI,GAC3F,iBAAR,GAA+B,MAAX,EAAI,IAed,QAAb,EAAI,cACG,EAAI,gBACJ,EAAI,kBACJ,EAAI,QACX,EAAI,IAAM,KAAK,MAG3B,CAGR,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,SAAO,EAAM,OAAO,EAAI,GACxB,QAsmDxB,EAAM,IAnvDV,SAAsC,GAClC,MAAO,CACH,MAAO,SACP,KAAM,yBACN,MAAO,EACP,OAAS,SAAA,GAAA,OACE,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAO,CAAE,MAAQ,SAAA,GAChD,IAAM,EAAQ,EAAK,MAAM,GA2BzB,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAQ,CAAE,OAAS,SAAA,GAClD,IAAI,EAAI,EAER,GAAI,EAAI,MAAM,sBAEV,OAAO,EAAM,OAAO,GAExB,GAAiB,QAAb,EAAI,MAA+B,QAAb,EAAI,KAAgB,CAC1C,IAAM,EAA8C,QAA1B,EAAK,EAAG,MAAM,cAAA,IAAoB,OAAA,EAAyB,EAAG,GACxF,GAAM,MAAA,OAAA,EAAoE,EAAiB,kBActF,CACD,IAAiC,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,eAAiB,EAAG,gBAAiB,CAEtG,IAAM,EAAO,GAAiB,EAAM,OAAO,WAAY,GAEvD,OAAO,EACF,QAAQ,CAAE,KAAA,EAAM,MAAO,EAAI,MAAO,MAAO,cACzC,MAAM,SAAA,GACP,GAAI,EAAQ,OAAS,EAAK,OAKtB,MAAM,IAAI,MAAM,+EAEpB,OAAO,EAAM,OAAO,EAAI,GAEhC,CACA,OAnEhB,SAAgC,EAAK,GACjC,IAAI,EAAc,KACZ,EAAO,GAAiB,EAAM,OAAO,WAAY,GAsBvD,OArBA,EAAK,SAAQ,SAAC,EAAK,GACf,YAAI,EAAmB,CAEnB,IAAM,EAAc,EAAI,OAAO,GAAK,SAAW,EAAG,MAAM,cAClD,EAAW,EAAY,OAAO,EAAY,OAAS,GACzD,EAAK,GAAO,GAAY,EAAU,GAC7B,EAAM,OAAO,WAAW,WACpB,IACD,EAAc,EAAI,OAAO,SAC7B,EAAY,GAAO,GAAM,UAAU,EAAY,IAC/C,GAAM,aAAa,EAAY,GAAM,EAAM,OAAO,WAAW,QAAS,EAAK,IAEnF,MACK,GAAmB,iBAAR,IACV,EAAI,WAAW,KAAc,EAAI,WAAW,IAAM,GAEpD,MAAM,IAAI,GAAM,gBAAA,WAAA,OAA2B,EAAA,8BAAA,OAAgC,EAAA,gEAAA,OACb,EAAA,YAAA,OAAmB,EAAA,+LAErF,IAEG,EAAM,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAM,CAAE,KAAA,EAAM,OAAQ,GAAe,EAAI,SACjG,CAzBA,CAmE8C,EAAK,EAAiB,SACxD,EAhCQ,MAAA,OAAA,EAAoE,EAAiB,gBAExE,GAAiB,EAAM,OAAO,WAAY,GAClD,SAAQ,SAAC,EAAK,GACf,IAAK,GAAkB,GAAM,CACzB,IAAM,EAAO,MAAM,QAAQ,GACrB,EAAI,IAAI,IAAa,KAAK,KAC1B,GAAY,GAClB,MAAM,IAAI,GAAM,gBAAA,4BAAA,OAA4C,EAAA,eAAA,OAAkB,EAAA,sGAClF,IAwBhB,CACA,OAAO,EAAM,OAAO,EAAI,GACxB,KAI5B,CAgqDc,CAA6B,GAAa,IA0KxD,CACA,GAAW,QAAU,gBACrB,GAAM,MAAQ,GAGd,IAAM,GAAa,IAAI,IACvB,SAAS,GAAiB,GACtB,OAAO,EAAI,WAAW,iBAAmB,EAAI,MAAM,KAAK,EAC5D,CACA,IAAM,GAAkB,IAAI,IAC5B,SAAS,GAAO,EAAQ,GAMpB,IAAI,EAAU,GAAgB,IAAI,EAAS,IAAM,GAajD,OAZK,IACD,EAYJ,SAAS,EAAQ,EAAQ,GACrB,IAAI,EACJ,OAAO,GAAU,iBAAM,EAAQ,IAAA,MAAQ,SAAA,IAAA,IAAA,EAAA,EAwB1B,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAvBe,GAuBf,EAAA,WAQL,OAPA,EAAG,GAAG,GAAG,cAAc,YAAY,GAC/B,GAAW,IAAI,EAAG,QAAU,GAE5B,GAAW,OAAO,EAAG,MAGzB,EAAG,GAAG,SAAA,CAEV,EAhCI,EAAK,GAAW,IAAI,GACnB,CAAA,EAAA,KAAA,SAKyB,OAHpB,EAAQ,IAAI,GAAM,EAAQ,CAAE,OAAQ,CAAC,OAC3C,EAAK,GAAa,IACf,MAAM,mBAAA,EACT,EAAM,GAAG,gBAAiB,GAAA,EAAA,KAAA,EACpB,EAAG,GAAG,OAAA,WACR,GAAW,IAAI,GAAA,CAAA,EAAA,KAAA,SAEZ,OAAH,EAAG,QAAA,EAAA,KAAA,GACU,EAAQ,EAAQ,GAAA,eAAA,EAAA,OAAA,SAAA,EAAA,MAAA,QAEjC,GAAW,IAAI,EAAQ,GAC3B,aACkC,QAA3B,EAAK,EAAG,MAAM,eAAA,IAAqB,OAAA,EAAyB,EAAG,eAIjE,EAAG,MAAM,OAAA,CAAA,EAAA,KAAA,SAcd,OAdc,EAAA,KAAA,GAAA,EAAA,KAAA,GAgBJ,GAAe,EAAI,EAAG,MAAM,QAAS,EAAG,MAAM,OAAQ,CACxD,8BAAA,EACA,QAAA,IAGR,QAAA,EAAA,KAAA,oBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,UAKI,IACI,EAAA,GAAE,OAAS,GAAM,SAAS,eAAA,CAAA,EAAA,KAAA,eAAA,EAAA,GAAA,yBAAA,EAAA,OAAA,GAAA,EAAA,mBAM1C,CAvDA,CAZsB,EAAQ,GACrB,MAAK,WAEN,GAAgB,OAAO,EAAS,IAAM,EAAQ,IAE7C,OAAO,SAAA,GAAA,OACR,GAAgB,OAAO,EAAS,IAAM,GAC/B,QAAQ,OAAO,EAAA,IAE1B,GAAgB,IAAI,EAAS,IAAM,EAAS,IAEzC,CAyDX,CAEK,KACD,KAAK,iBAAiB,QAAS,SAAA,GAE3B,IAAM,EAAS,GAAiB,EAAM,KAClC,GACA,EAAM,UAAU,GAAO,EAAQ,QACnC,IAEJ,KAAK,iBAAiB,gBAAiB,SAAA,GAEnC,IAAM,EAAS,GAAiB,EAAM,KAClC,GACA,EAAM,UAAU,GAAO,EAAQ,QACnC,IAEJ,KAAK,iBAAiB,WAAY,SAAA,GAE9B,GAAwB,qBAApB,EAAM,KAAK,KAA6B,CACxC,IAAQ,EAAW,EAAM,KAAnB,OAGA,EAAe,SAAf,IAAA,IAAgB,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAM,SACjB,GAAO,EAAQ,EAAM,KAAK,SAAW,QAAQ,OAAO,SAAA,GAAA,OAAM,QAAA,OAAU,OAAQ,EAAQ,IAAA,MAAQ,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,UACnF,IAAR,EAAA,CAAA,EAAA,KAAA,cACM,EAAA,OAcf,OAde,EAAA,KAAA,EACE,IAcrB,IAAI,SAAS,SAAA,GAAA,OAAY,WAAW,EAdf,IAcwB,WAbpC,EAAa,EAAM,GACvB,wBAAA,EAAA,OAAA,GAAA,EAAA,SAEA,cAAe,EACf,EAAM,UAAU,IAAe,OAAM,SAAA,GAA6B,KAGlE,IAAe,OAAM,SAAA,GAA6B,GAE1D,iBE77JF,GACA,KCeO,GAdI,SAAC,GACC,IAAf,IAAI,EAAM,EAAK,EAAA,UAAA,OADQ,EAAI,IAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAJ,EAAI,EAAA,GAAA,UAAA,GAK3B,OAHI,EAAK,OAAS,IACd,GAAO,OAAJ,OAAW,KAAK,UAAU,KAE1B,CACX,ECGM,GAAY,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GASd,SAAA,EAAY,EAAW,GAAS,IAAA,EAAA,EAAA,KAAA,GAC5B,IAAM,EAAU,GAAiB,EAAW,GAGrB,OAFvB,EAAA,EAAA,KAAA,KAAM,IACD,KAAO,EACZ,EAAK,QAAU,EAAQ,CAC3B,CAAC,OAAA,EAAA,EAAA,CAda,CAcb,EAdsB,QCPrB,GAAsB,IAAI,ICHhC,ICAI,GDAE,GAAoB,CACtB,gBAAiB,kBACjB,SAAU,cACV,OAAQ,UACR,QAAS,UACT,OAAgC,qBAAjB,aAA+B,aAAa,MAAQ,IAEjE,GAAmB,SAAC,GACtB,MAAO,CAAC,GAAkB,OAAQ,EAAW,GAAkB,QAC1D,QAAO,SAAC,GAAK,OAAK,GAAS,EAAM,OAAS,CAAC,IAC3C,KAAK,IACd,EAMa,GAWQ,SAAC,GACd,OAAO,GAAiB,GAAiB,GAAkB,SAC/D,EAbS,GAiBO,SAAC,GACb,OAAO,GAAiB,GAAiB,GAAkB,QAC/D,EErCJ,SAAS,GAAY,EAAS,GAC1B,IACgC,EAD1B,EAAc,IAAI,IAAI,GAAS,EAAA,EACjB,GAAY,IAAhC,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAkC,KAAvB,EAAK,EAAA,MACZ,EAAY,aAAa,OAAO,EACpC,CAAC,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,CACD,OAAO,EAAY,IACvB,CACA,SAYe,GAAsB,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,MAAC,KAAD,UAAA,UAAA,KAgBpC,OAhBoC,GAAA,EAAA,IAAA,MAArC,SAAA,EAAsC,EAAO,EAAS,EAAc,GAAY,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAE5E,GADM,EAAqB,GAAY,EAAQ,IAAK,GAEhD,EAAQ,MAAQ,EAAkB,CAAA,EAAA,KAAA,eAAA,EAAA,OAAA,SAC3B,EAAM,MAAM,EAAS,IAAa,OAG6C,OAApF,EAAc,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAe,CAAE,cAAc,IAAO,EAAA,KAAA,EAClE,EAAM,KAAK,EAAS,GAAY,OAAlD,EAAS,EAAA,KAAA,EAAA,EACQ,GAAS,EAAA,KAAA,EAAA,EAAA,IAAA,YAAA,EAAA,EAAA,KAAA,KAAE,CAAF,EAAA,KAAA,SACuC,GAD5D,EAAQ,EAAA,MACT,EAAsB,GAAY,EAAS,IAAK,GAClD,IAAuB,EAAmB,CAAA,EAAA,KAAA,gBAAA,EAAA,OAAA,SACnC,EAAM,MAAM,EAAU,IAAa,QAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,mBAAA,EAAA,OAAA,mCAAA,EAAA,OAAA,GAAA,EAAA,0BAIrD,MAAA,KAAA,UAAA,CDxBD,SAAS,KACL,QAAsB,IAAlB,GAA6B,CAC7B,IAAM,EAAe,IAAI,SAAS,IAClC,GAAI,SAAU,EACV,IACI,IAAI,SAAS,EAAa,MAC1B,IAAgB,CACpB,CACA,MAAO,GACH,IAAgB,CACpB,CAEJ,IAAgB,CACpB,CACA,OAAO,EACX,CErBO,SAAS,GAAY,GAEnB,EAAQ,MAAK,WAAQ,GAC9B,CCPA,IAQM,GAAQ,GAIV,SAAA,IAAc,IAAA,EAAA,KAAA,EAAA,KAAA,GACV,KAAK,QAAU,IAAI,SAAQ,SAAC,EAAS,GACjC,EAAK,QAAU,EACf,EAAK,OAAS,CAClB,GACJ,ICfJ,SAOe,KAA0B,OAAA,GAAA,MAAC,KAAD,UAAA,UAAA,KAcxC,OAdwC,GAAA,EAAA,IAAA,MAAzC,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OACQ,EAGH,EAAA,EACsB,IAAmB,EAAA,KAAA,EAAA,EAAA,IAAA,WAAA,EAAA,EAAA,KAAA,KAAE,CAAF,EAAA,KAAA,SAAvB,OAAR,EAAQ,EAAA,MAAA,EAAA,KAAA,EACT,IAAU,OACZ,EAEH,OAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,YAED,EAEH,yBAAA,EAAA,OAAA,GAAA,EAAA,0BACJ,MAAA,KAAA,UAAA,CCvBD,IAAM,GAAiB,SAAC,GAIpB,OAHe,IAAI,IAAI,OAAO,GAAM,SAAS,MAG/B,KAAK,QAAQ,IAAI,OAAO,IAAD,OAAK,SAAS,SAAW,GAClE,ECEO,SAAS,GAAQ,GACpB,OAAO,IAAI,SAAQ,SAAC,GAAO,OAAK,WAAW,EAAS,EAAG,GAC3D,CCDA,SAAS,GAAU,EAAO,GACtB,IAAM,EAAgB,IAEtB,OADA,EAAM,UAAU,GACT,CACX,CCVA,SAmBe,GAAY,EAAA,GAAA,OAAA,GAAA,MAAC,KAAD,UAAA,UAAA,KA0B1B,OA1B0B,GAAA,EAAA,IAAA,MAA3B,SAAA,EAA4B,EAAU,GAAQ,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAMzC,GALG,EAAS,KAET,EAAS,MACH,EAAc,IAAI,IAAI,EAAS,KACrC,EAAS,EAAY,QAErB,IAAW,KAAK,SAAS,OAAM,CAAA,EAAA,KAAA,cACzB,IAAI,GAAa,6BAA8B,CAAE,OAAA,IAAS,OAapE,GAXM,EAAiB,EAAS,QAE1B,EAAe,CACjB,QAAS,IAAI,QAAQ,EAAe,SACpC,OAAQ,EAAe,OACvB,WAAY,EAAe,YAGzB,EAAuB,EAAW,EAAS,GAAgB,GAIpD,KAAoC,CAAA,EAAA,KAAA,SAAA,EAAA,GAC3C,EAAe,KAAI,EAAA,KAAA,wBAAA,EAAA,KAAA,GACb,EAAe,OAAM,QAAA,EAAA,GAAA,EAAA,KAAA,QAFvB,OAAJ,EAAI,EAAA,GAAA,EAAA,OAAA,SAGH,IAAI,SAAS,EAAM,IAAqB,yBAAA,EAAA,OAAA,GAAA,EAAA,MAClD,MAAA,KAAA,UAAA,CCvDD,IAEI,GACA,GAHE,GAAgB,SAAC,EAAQ,GAAY,OAAK,EAAa,MAAK,SAAC,GAAC,OAAK,aAAkB,CAAC,GAAC,EAwB7F,IAAM,GAAmB,IAAI,QACvB,GAAqB,IAAI,QACzB,GAA2B,IAAI,QAC/B,GAAiB,IAAI,QACrB,GAAwB,IAAI,QA0DlC,IAAI,GAAgB,CAChB,IAAG,SAAC,EAAQ,EAAM,GACd,GAAI,aAAkB,eAAgB,CAElC,GAAa,SAAT,EACA,OAAO,GAAmB,IAAI,GAElC,GAAa,qBAAT,EACA,OAAO,EAAO,kBAAoB,GAAyB,IAAI,GAGnE,GAAa,UAAT,EACA,OAAO,EAAS,iBAAiB,QAC3B,EACA,EAAS,YAAY,EAAS,iBAAiB,GAE7D,CAEA,OAAO,GAAK,EAAO,GACvB,EACA,IAAG,SAAC,EAAQ,EAAM,GAEd,OADA,EAAO,GAAQ,GACR,CACX,EACA,IAAG,SAAC,EAAQ,GACR,OAAI,aAAkB,iBACR,SAAT,GAA4B,UAAT,IAGjB,KAAQ,CACnB,GAKJ,SAAS,GAAa,GAIlB,OAAI,IAAS,YAAY,UAAU,aAC7B,qBAAsB,eAAe,WA7GnC,KACH,GAAuB,CACpB,UAAU,UAAU,QACpB,UAAU,UAAU,SACpB,UAAU,UAAU,sBAqHE,SAAS,GAC5B,WAAmB,QAAA,EAAA,UAAA,OAAN,EAAI,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAJ,EAAI,GAAA,UAAA,GAIpB,OADA,EAAK,MAAM,GAAO,MAAO,GAClB,GAAK,GAAiB,IAAI,MACrC,EAEG,WAAmB,QAAA,EAAA,UAAA,OAAN,EAAI,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAJ,EAAI,GAAA,UAAA,GAGpB,OAAO,GAAK,EAAK,MAAM,GAAO,MAAO,GACzC,EAvBW,SAAU,GAAqB,QAAA,EAAA,UAAA,OAAN,EAAI,IAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAJ,EAAI,EAAA,GAAA,UAAA,GAChC,IAAM,EAAK,EAAK,KAAI,MAAT,EAAI,CAAM,GAAO,MAAO,GAAU,OAAK,IAElD,OADA,GAAyB,IAAI,EAAI,EAAW,KAAO,EAAW,OAAS,CAAC,IACjE,GAAK,EAChB,CAoBR,CACA,SAAS,GAAuB,GAC5B,MAAqB,oBAAV,EACA,GAAa,IAGpB,aAAiB,gBAhGzB,SAAwC,GAEpC,IAAI,GAAmB,IAAI,GAA3B,CAEA,IAAM,EAAO,IAAI,SAAQ,SAAC,EAAS,GAC/B,IAAM,EAAW,WACb,EAAG,oBAAoB,WAAY,GACnC,EAAG,oBAAoB,QAAS,GAChC,EAAG,oBAAoB,QAAS,EACpC,EACM,EAAW,WACb,IACA,GACJ,EACM,EAAQ,WACV,EAAO,EAAG,OAAS,IAAI,aAAa,aAAc,eAClD,GACJ,EACA,EAAG,iBAAiB,WAAY,GAChC,EAAG,iBAAiB,QAAS,GAC7B,EAAG,iBAAiB,QAAS,EACjC,IAEA,GAAmB,IAAI,EAAI,EApBjB,CAqBd,CAyEQ,CAA+B,GAC/B,GAAc,EAzJV,KACH,GAAoB,CACjB,YACA,eACA,SACA,UACA,kBAoJG,IAAI,MAAM,EAAO,IAErB,EACX,CACA,SAAS,GAAK,GAGV,GAAI,aAAiB,WACjB,OA3IR,SAA0B,GACtB,IAAM,EAAU,IAAI,SAAQ,SAAC,EAAS,GAClC,IAAM,EAAW,WACb,EAAQ,oBAAoB,UAAW,GACvC,EAAQ,oBAAoB,QAAS,EACzC,EACM,EAAU,WACZ,EAAQ,GAAK,EAAQ,SACrB,GACJ,EACM,EAAQ,WACV,EAAO,EAAQ,OACf,GACJ,EACA,EAAQ,iBAAiB,UAAW,GACpC,EAAQ,iBAAiB,QAAS,EACtC,IAcA,OAbA,EACK,MAAK,SAAC,GAGH,aAAiB,WACjB,GAAiB,IAAI,EAAO,EAGpC,IACK,OAAM,WAAQ,IAGnB,GAAsB,IAAI,EAAS,GAC5B,CACX,CA4Ge,CAAiB,GAG5B,GAAI,GAAe,IAAI,GACnB,OAAO,GAAe,IAAI,GAC9B,IAAM,EAAW,GAAuB,GAOxC,OAJI,IAAa,IACb,GAAe,IAAI,EAAO,GAC1B,GAAsB,IAAI,EAAU,IAEjC,CACX,CACA,IAAM,GAAS,SAAC,GAAK,OAAK,GAAsB,IAAI,EAAM,EC5K1D,SAAS,GAAO,EAAM,GAA0D,IAAA,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAJ,CAAC,EAA5C,EAAO,EAAP,QAAS,EAAO,EAAP,QAAS,EAAQ,EAAR,SAAU,EAAU,EAAV,WACnD,EAAU,UAAU,KAAK,EAAM,GAC/B,EAAc,GAAK,GAoBzB,OAnBI,GACA,EAAQ,iBAAiB,iBAAiB,SAAC,GACvC,EAAQ,GAAK,EAAQ,QAAS,EAAM,WAAY,EAAM,WAAY,GAAK,EAAQ,aAAc,EACjG,IAEA,GACA,EAAQ,iBAAiB,WAAW,SAAC,GAAK,OAAK,EAE/C,EAAM,WAAY,EAAM,WAAY,EAAM,IAE9C,EACK,MAAK,SAAC,GACH,GACA,EAAG,iBAAiB,SAAS,kBAAM,GAAY,IAC/C,GACA,EAAG,iBAAiB,iBAAiB,SAAC,GAAK,OAAK,EAAS,EAAM,WAAY,EAAM,WAAY,EAAM,GAE3G,IACK,OAAM,WAAQ,IACZ,CACX,CAgBA,IAAM,GAAc,CAAC,MAAO,SAAU,SAAU,aAAc,SACxD,GAAe,CAAC,MAAO,MAAO,SAAU,SACxC,GAAgB,IAAI,IAC1B,SAAS,GAAU,EAAQ,GACvB,GAAM,aAAkB,eAClB,KAAQ,IACM,kBAAT,EAFX,CAKA,GAAI,GAAc,IAAI,GAClB,OAAO,GAAc,IAAI,GAC7B,IAAM,EAAiB,EAAK,QAAQ,aAAc,IAC5C,EAAW,IAAS,EACpB,EAAU,GAAa,SAAS,GACtC,GAEE,KAAmB,EAAW,SAAW,gBAAgB,YACrD,GAAW,GAAY,SAAS,IAHtC,CAMA,IAAM,EAAM,eAAA,EAAA,EAAA,IAAA,MAAG,SAAA,EAAgB,GAAS,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAGf,IADf,EAAK,KAAK,YAAY,EAAW,EAAU,YAAc,YAC3D,EAAS,EAAG,MAAK,EAAA,EAAA,OAHoB,EAAI,IAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAJ,EAAI,EAAA,GAAA,EAAA,GAU7C,OANI,IACA,EAAS,EAAO,MAAM,EAAK,UAK/B,EAAA,KAAA,EACc,QAAQ,IAAI,EACtB,EAAA,GAAO,GAAe,MAAA,EAAI,GAC1B,GAAW,EAAG,OAChB,cAAA,EAAA,OAAA,SAAA,EAAA,KAAE,IAAC,wBAAA,EAAA,OAAA,GAAA,EAAA,UACR,gBAfW,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,KAiBZ,OADA,GAAc,IAAI,EAAM,GACjB,CAlBP,CAXA,CA8BJ,CDgCI,GC/BS,SAAC,GAAQ,OAAA,EAAA,EAAA,GACf,GAAQ,IACX,IAAK,SAAC,EAAQ,EAAM,GAAQ,OAAK,GAAU,EAAQ,IAAS,EAAS,IAAI,EAAQ,EAAM,EAAS,EAChG,IAAK,SAAC,EAAQ,GAAI,QAAO,GAAU,EAAQ,IAAS,EAAS,IAAI,EAAQ,EAAK,ID4B9D,CAAS,eE7GvB,GAAqB,gBACrB,GAAe,SAAC,GAClB,IAAM,EAAM,IAAI,IAAI,EAAiB,SAAS,MAE9C,OADA,EAAI,KAAO,GACJ,EAAI,IACf,EAMM,GAAoB,WAOtB,SAAA,EAAY,GAAW,EAAA,KAAA,GACnB,KAAK,IAAM,KACX,KAAK,WAAa,CACtB,CAuJC,OAtJD,EAAA,EAAA,EAAA,IAAA,aAAA,MAOA,SAAW,GAKP,IAAM,EAAW,EAAG,kBAAkB,GAAoB,CAAE,QAAS,OAIrE,EAAS,YAAY,YAAa,YAAa,CAAE,QAAQ,IACzD,EAAS,YAAY,YAAa,YAAa,CAAE,QAAQ,GAC7D,GACA,CAAA,IAAA,4BAAA,MAOA,SAA0B,GACtB,KAAK,WAAW,GACZ,KAAK,YDrBjB,SAAkB,GAAwB,IAAhB,GAAgB,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAJ,CAAC,GAAb,QAChB,EAAU,UAAU,eAAe,GACrC,GACA,EAAQ,iBAAiB,WAAW,SAAC,GAAK,OAAK,EAE/C,EAAM,WAAY,EAAM,IAErB,GAAK,GAAS,MAAK,WAAe,GAC7C,CCciB,CAAS,KAAK,WAE3B,GACA,CAAA,IAAA,eAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAMA,SAAA,EAAmB,EAAK,GAAS,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAU5B,OATD,EAAM,GAAa,GACb,EAAQ,CACV,IAAA,EACA,UAAA,EACA,UAAW,KAAK,WAIhB,GAAI,KAAK,OAAO,IACnB,EAAA,KAAA,EACgB,KAAK,QAAO,OAG3B,OAHI,EAAE,EAAA,KACF,EAAK,EAAG,YAAY,GAAoB,YAAa,CACvD,WAAY,YACd,EAAA,KAAA,EACI,EAAG,MAAM,IAAI,GAAM,cAAA,EAAA,KAAA,GACnB,EAAG,KAAI,yBAAA,EAAA,OAAA,GAAA,EAAA,UAChB,gBAAA,EAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EAvBD,IAwBA,CAAA,IAAA,eAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAQA,SAAA,EAAmB,GAAG,IAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,cAAA,EAAA,KAAA,EACD,KAAK,QAAO,OAArB,OAAF,EAAE,EAAA,KAAA,EAAA,KAAG,EACS,EAAG,IAAI,GAAoB,KAAK,OAAO,IAAK,OAArD,OAAL,EAAK,EAAA,KAAA,EAAA,OAAA,SACM,OAAV,QAA4B,IAAV,OAAmB,EAAS,EAAM,WAAS,wBAAA,EAAA,OAAA,GAAA,EAAA,UACvE,gBAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EAZD,IAaA,CAAA,IAAA,gBAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAWA,SAAA,EAAoB,EAAc,GAAQ,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,cAAA,EAAA,KAAA,EACrB,KAAK,QAAO,OAArB,OAAF,EAAE,EAAA,KAAA,EAAA,KAAG,EACQ,EACd,YAAY,IACZ,MAAM,MAAM,aACZ,WAAW,KAAM,QAAO,OAHzB,EAAM,EAAA,KAIJ,EAAkB,GACpB,EAAyB,EAAC,WACvB,EAAQ,CAAF,EAAA,KAAA,SAsBR,OArBK,EAAS,EAAO,OAGX,YAAc,KAAK,aAGrB,GAAgB,EAAO,UAAY,GACnC,GAAY,GAA0B,EASvC,EAAgB,KAAK,EAAO,OAG5B,KAEP,EAAA,KAAA,GACc,EAAO,WAAU,QAAhC,EAAM,EAAA,KAAA,EAAA,KAAG,EAAH,cAMJ,EAAc,GAAE,EAAA,EAAA,EACF,EAAe,aAAA,EAAA,EAAA,QAAA,CAAA,EAAA,KAAA,SAAnB,OAAL,EAAK,EAAA,GAAA,EAAA,KAAA,GACN,EAAG,OAAO,GAAoB,EAAM,IAAG,QAC7C,EAAY,KAAK,EAAM,KAAK,QAAA,IAAA,EAAA,KAAA,wBAAA,EAAA,OAAA,SAEzB,GAAW,yBAAA,EAAA,OAAA,GAAA,EAAA,UACrB,gBAAA,EAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EAtDD,IAuDA,CAAA,IAAA,SAAA,MAQA,SAAO,GAIH,OAAO,KAAK,WAAa,IAAM,GAAa,EAChD,GACA,CAAA,IAAA,QAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAKA,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,UACS,KAAK,IAAK,CAAF,EAAA,KAAA,eAAA,EAAA,KAAA,EACQ,GAxKb,qBAwK6B,EAAG,CAChC,QAAS,KAAK,0BAA0B,KAAK,QAC/C,OAFF,KAAK,IAAG,EAAA,KAAA,cAAA,EAAA,OAAA,SAIL,KAAK,KAAG,wBAAA,EAAA,OAAA,GAAA,EAAA,UAClB,yBAAA,EAAA,MAAA,KAAA,UAAA,EAZD,MAYC,CAAA,CAjKqB,GCDpB,GAAe,WAcjB,SAAA,EAAY,GAAwB,IAAb,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAG,CAAC,EAAC,EAAA,KAAA,GAC9B,KAAK,YAAa,EAClB,KAAK,iBAAkB,EAgCvB,KAAK,YAAc,EAAO,WAC1B,KAAK,eAAiB,EAAO,cAC7B,KAAK,cAAgB,EAAO,aAC5B,KAAK,WAAa,EAClB,KAAK,gBAAkB,IAAI,GAAqB,EACpD,CA6FC,OA5FD,EAAA,EAAA,EAAA,IAAA,gBAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAGA,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,WACQ,KAAK,WAAY,CAAF,EAAA,KAAA,QACa,OAA5B,KAAK,iBAAkB,EAAK,EAAA,OAAA,iBAMzB,OAHP,KAAK,YAAa,EACZ,EAAe,KAAK,eACpB,KAAK,MAA8B,IAAtB,KAAK,eAClB,EAAC,EAAA,KAAA,EACmB,KAAK,gBAAgB,cAAc,EAAc,KAAK,aAAY,OAA3E,OAAX,EAAW,EAAA,KAAA,EAAA,KAAG,GAEA,KAAK,OAAO,KAAK,KAAK,YAAW,QAA/C,EAAK,EAAA,KAAA,EAAA,EACO,GAAW,EAAA,KAAA,GAAA,EAAA,IAAA,YAAA,EAAA,EAAA,KAAA,KAAE,CAAF,EAAA,KAAA,SAAf,OAAH,EAAG,EAAA,MAAA,EAAA,KAAA,GACJ,EAAM,OAAO,EAAK,KAAK,eAAc,QAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,UAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,YAE3C,EAcJ,KAAK,YAAa,EACd,KAAK,kBACL,KAAK,iBAAkB,EACvB,GAAY,KAAK,kBACpB,yBAAA,EAAA,OAAA,GAAA,EAAA,0BACJ,yBAAA,EAAA,MAAA,KAAA,UAAA,EArCD,IAsCA,CAAA,IAAA,kBAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAOA,SAAA,EAAsB,GAAG,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAQpB,OAAA,EAAA,KAAA,EACK,KAAK,gBAAgB,aAAa,EAAK,KAAK,OAAM,wBAAA,EAAA,OAAA,GAAA,EAAA,UAC3D,gBAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EAjBD,IAkBA,CAAA,IAAA,eAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAWA,SAAA,EAAmB,GAAG,IAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,UACb,KAAK,eAAgB,CAAF,EAAA,KAAA,QACqB,EAAA,KAAA,QAInC,cAAA,EAAA,OAAA,UAEC,GAAK,cAAA,EAAA,KAAA,EAGY,KAAK,gBAAgB,aAAa,GAAI,OACC,OADzD,EAAS,EAAA,KACT,EAAkB,KAAK,MAA8B,IAAtB,KAAK,eAAqB,EAAA,OAAA,cAC1C,IAAd,GAA0B,EAAY,GAAsB,yBAAA,EAAA,OAAA,GAAA,EAAA,UAE1E,gBAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EA1BD,IA2BA,CAAA,IAAA,SAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAIA,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAGiC,OAA7B,KAAK,iBAAkB,EAAM,EAAA,KAAA,EACvB,KAAK,gBAAgB,cAAc,KAAS,wBAAA,EAAA,OAAA,GAAA,EAAA,UACrD,yBAAA,EAAA,MAAA,KAAA,UAAA,EATD,MASC,CAAA,CAlJgB,GCmBf,GAAgB,WAYlB,SAAA,IAAyB,IAAA,EAAA,KAAb,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAG,CAAC,EAAC,EAAA,KAAA,GAkBnB,KAAK,yBAAwB,eAAA,EAAA,EAAA,IAAA,MAAG,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAAkD,GAAzC,EAAK,EAAL,MAAO,EAAO,EAAP,QAAS,EAAS,EAAT,UAAW,EAAc,EAAd,eAC3C,CAAF,EAAA,KAAA,eAAA,EAAA,OAAA,SACR,MAAI,OAUf,GARM,EAAU,EAAK,qBAAqB,GAI1C,IADM,EAAkB,EAAK,oBAAoB,IACrB,iBAGtB,EAAsB,EAAgB,gBAAgB,EAAQ,KAChE,EACA,IACI,EAAM,UAAU,EACpB,CACA,MAAO,GACC,CAQR,CACH,OAAA,EAAA,OAAA,SACM,EAAU,EAAiB,MAAI,wBAAA,EAAA,OAAA,GAAA,EAAA,KACzC,gBAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EA5B4B,GAuC7B,KAAK,eAAc,eAAA,EAAA,EAAA,IAAA,MAAG,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAeyC,OAfhC,EAAS,EAAT,UAAW,EAAO,EAAP,QAehC,EAAkB,EAAK,oBAAoB,GAAU,EAAA,KAAA,EACrD,EAAgB,gBAAgB,EAAQ,KAAI,cAAA,EAAA,KAAA,EAC5C,EAAgB,gBAAe,wBAAA,EAAA,OAAA,GAAA,EAAA,KACxC,gBAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EAlBkB,GA4CnB,KAAK,QAAU,EACf,KAAK,eAAiB,EAAO,cAC7B,KAAK,kBAAoB,IAAI,IACzB,EAAO,mBCvInB,SAAoC,GAQhC,GAAoB,IAAI,EAI5B,CD4HY,EAA2B,kBAAM,EAAK,wBAAwB,GAEtE,CA6FC,OA5FD,EAAA,EAAA,EAAA,IAAA,sBAAA,MASA,SAAoB,GAChB,GAAI,IAAc,KACd,MAAM,IAAI,GAAa,6BAE3B,IAAI,EAAkB,KAAK,kBAAkB,IAAI,GAKjD,OAJK,IACD,EAAkB,IAAI,GAAgB,EAAW,KAAK,SACtD,KAAK,kBAAkB,IAAI,EAAW,IAEnC,CACX,GACA,CAAA,IAAA,uBAAA,MAMA,SAAqB,GACjB,IAAK,KAAK,eAEN,OAAO,EAKX,IAAM,EAAsB,KAAK,wBAAwB,GACzD,OAA4B,OAAxB,GAOG,GADK,KAAK,MACyC,IAAtB,KAAK,cAC7C,GACA,CAAA,IAAA,0BAAA,MASA,SAAwB,GACpB,IAAK,EAAe,QAAQ,IAAI,QAC5B,OAAO,KAEX,IAAM,EAAa,EAAe,QAAQ,IAAI,QAExC,EADa,IAAI,KAAK,GACE,UAG9B,OAAI,MAAM,GACC,KAEJ,CACX,GACA,CAAA,IAAA,yBAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAgBA,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAEI,EAAA,EAC2C,KAAK,mBAAiB,EAAA,KAAA,EAAA,EAAA,IAAA,WAAA,EAAA,EAAA,KAAA,KAAE,CAAF,EAAA,KAAA,SAA3B,OAA2B,EAAA,EAAA,EAAA,MAAA,GAArD,EAAS,EAAA,GAAE,EAAe,EAAA,GAAA,EAAA,KAAA,EAC5B,KAAK,OAAO,OAAO,GAAU,cAAA,EAAA,KAAA,EAC7B,EAAgB,SAAQ,OAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,YAGlC,KAAK,kBAAoB,IAAI,IAAM,yBAAA,EAAA,OAAA,GAAA,EAAA,yBACtC,yBAAA,EAAA,MAAA,KAAA,UAAA,EAzBD,MAyBC,CAAA,CApNiB,UEnBf,SAAS,GAAe,GAC3B,IAAK,EACD,MAAM,IAAI,GAAa,oCAAqC,CAAE,MAAA,IAIlE,GAAqB,kBAAV,EAAoB,CAC3B,IAAM,EAAY,IAAI,IAAI,EAAO,SAAS,MAC1C,MAAO,CACH,SAAU,EAAU,KACpB,IAAK,EAAU,KAEvB,CACA,IAAQ,EAAkB,EAAlB,SAAU,EAAQ,EAAR,IAClB,IAAK,EACD,MAAM,IAAI,GAAa,oCAAqC,CAAE,MAAA,IAIlE,IAAK,EAAU,CACX,IAAM,EAAY,IAAI,IAAI,EAAK,SAAS,MACxC,MAAO,CACH,SAAU,EAAU,KACpB,IAAK,EAAU,KAEvB,CAGA,IAAM,EAAc,IAAI,IAAI,EAAK,SAAS,MACpC,EAAc,IAAI,IAAI,EAAK,SAAS,MAE1C,OADA,EAAY,aAAa,IAxCC,kBAwC0B,GAC7C,CACH,SAAU,EAAY,KACtB,IAAK,EAAY,KAEzB,CC/CA,IAMM,GAA2B,GAC7B,SAAA,IAAc,IAAA,EAAA,KAAA,EAAA,KAAA,GACV,KAAK,YAAc,GACnB,KAAK,eAAiB,GACtB,KAAK,iBAAgB,eAAA,EAAA,EAAA,IAAA,MAAG,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAAS,EAAO,EAAP,SAAS,EAAK,EAAL,SAGlC,EAAM,gBAAkB,GAC3B,wBAAA,EAAA,OAAA,GAAA,EAAA,KACJ,gBAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EALoB,GAMrB,KAAK,yBAAwB,eAAA,EAAA,EAAA,IAAA,MAAG,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAc3B,OAdoC,EAAK,EAAL,MAAO,EAAK,EAAL,MAAO,EAAc,EAAd,eAChC,YAAf,EAAM,MACF,GACA,EAAM,iBACN,EAAM,2BAA2B,UAE3B,EAAM,EAAM,gBAAgB,IAC9B,EACA,EAAK,eAAe,KAAK,GAGzB,EAAK,YAAY,KAAK,IAGjC,EAAA,OAAA,SACM,GAAc,wBAAA,EAAA,OAAA,GAAA,EAAA,KACxB,gBAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EAhB4B,EAiBjC,IC3BE,GAAsB,GACxB,SAAA,EAAA,GAAoC,IAAA,EAAA,KAAtB,EAAkB,EAAlB,mBAAkB,EAAA,KAAA,GAC5B,KAAK,mBAAkB,eAAA,EAAA,EAAA,IAAA,MAAG,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAKtB,OAL+B,EAAO,EAAP,QAAS,EAAM,EAAN,OAGlC,GAAuB,OAAX,QAA8B,IAAX,OAAoB,EAAS,EAAO,WACrE,EAAK,oBAAoB,kBAAkB,EAAQ,KACvD,EAAA,OAAA,SACO,EACD,IAAI,QAAQ,EAAU,CAAE,QAAS,EAAQ,UACzC,GAAO,wBAAA,EAAA,OAAA,GAAA,EAAA,KAChB,gBAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EATsB,GAUvB,KAAK,oBAAsB,CAC/B,WCXJ,SAAS,GAAU,GACf,MAAwB,kBAAV,EAAqB,IAAI,QAAQ,GAAS,CAC5D,CACA,IASM,GAAe,WAiBjB,SAAA,EAAY,EAAU,GAAS,EAAA,KAAA,GAC3B,KAAK,WAAa,CAAC,EA8CnB,OAAO,OAAO,KAAM,GACpB,KAAK,MAAQ,EAAQ,MACrB,KAAK,UAAY,EACjB,KAAK,iBAAmB,IAAI,GAC5B,KAAK,wBAA0B,GAG/B,KAAK,SAAQ,EAAO,EAAS,SAC7B,KAAK,gBAAkB,IAAI,IAAM,IACC,EADD,EAAA,EACZ,KAAK,UAAQ,IAAlC,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAoC,KAAzB,EAAM,EAAA,MACb,KAAK,gBAAgB,IAAI,EAAQ,CAAC,EACtC,CAAC,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,CACD,KAAK,MAAM,UAAU,KAAK,iBAAiB,QAC/C,CAyZC,OAxZD,EAAA,EAAA,EAAA,IAAA,QAAA,MAAA,SAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,QAAA,EAAA,SAAA,kBAAA,EAAA,UAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,IAAA,MAaA,SAAA,EAAY,GAAK,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAEiB,GADtB,EAAU,KAAV,QAEa,cADjB,EAAU,GAAU,IACZ,MACR,aAAiB,YACjB,EAAM,iBAAe,CAAA,EAAA,KAAA,eAAA,EAAA,KAAA,EACkB,EAAM,gBAAe,OAA/B,KAAvB,EAAuB,EAAA,MACA,CAAF,EAAA,KAAA,QAItB,OAAA,EAAA,OAAA,SACM,GAAuB,OAMhC,EAAkB,KAAK,YAAY,gBACnC,EAAQ,QACR,KAAI,EAAA,KAAA,GAAA,EAAA,EAEW,KAAK,iBAAiB,qBAAmB,EAAA,KAAA,GAAA,EAAA,IAAA,YAAA,EAAA,EAAA,KAAA,KAAE,CAAF,EAAA,KAAA,SAA7C,OAAF,EAAE,EAAA,MAAA,EAAA,KAAA,GACO,EAAG,CAAE,QAAS,EAAQ,QAAS,MAAA,IAAQ,QAAvD,EAAO,EAAA,KAAA,QAAA,EAAA,KAAG,GAAH,cAAA,EAAA,KAAG,GAAH,cAAA,EAAA,KAAG,GAAH,EAAA,GAAA,EAAA,UAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAG,GAAH,EAAA,IAAA,EAAA,OAAA,YAAA,EAAA,KAAG,GAAH,iBAAA,EAAA,KAAG,GAAH,EAAA,GAAA,EAAA,YAIP,EAAA,cAAe,OAAK,CAAA,EAAA,KAAA,eACd,IAAI,GAAa,kCAAmC,CACtD,mBAAoB,EAAA,GAAI,UAC1B,QAMmC,OAAvC,EAAwB,EAAQ,QAAO,EAAA,KAAA,GAAA,EAAA,KAAA,GAInB,MAAM,EAA0B,aAAjB,EAAQ,UAAsB,EAAY,KAAK,UAAU,cAAa,QAA3G,EAAa,EAAA,KAKZ,EAAA,EACsB,KAAK,iBAAiB,oBAAkB,EAAA,KAAA,GAAA,EAAA,IAAA,YAAA,EAAA,EAAA,KAAA,KAAE,CAAF,EAAA,KAAA,SAA5C,OAAR,EAAQ,EAAA,MAAA,EAAA,KAAA,GACO,EAAS,CAC3B,MAAA,EACA,QAAS,EACT,SAAU,IACZ,QAJF,EAAa,EAAA,KAAA,QAAA,EAAA,KAAG,GAAH,cAAA,EAAA,KAAG,GAAH,cAAA,EAAA,KAAG,GAAH,EAAA,GAAA,EAAA,UAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAG,GAAH,EAAA,IAAA,EAAA,OAAA,mBAAA,EAAA,OAAA,SAMV,GAAa,QAQpB,GARoB,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,WAShB,EAAiB,CAAF,EAAA,KAAA,gBAAA,EAAA,KAAA,GACT,KAAK,aAAa,eAAgB,CACpC,MAAK,EAAA,GACL,MAAA,EACA,gBAAiB,EAAgB,QACjC,QAAS,EAAsB,UACjC,cAAA,EAAA,GAAA,yBAAA,EAAA,OAAA,GAAA,EAAA,wDAIb,gBAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EArFD,KAsFA,CAAA,IAAA,mBAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAUA,SAAA,EAAuB,GAAK,IAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,cAAA,EAAA,KAAA,EACD,KAAK,MAAM,GAAM,OAEiB,OAFnD,EAAQ,EAAA,KACR,EAAgB,EAAS,QAC1B,KAAK,UAAU,KAAK,SAAS,EAAO,IAAgB,EAAA,OAAA,SAClD,GAAQ,wBAAA,EAAA,OAAA,GAAA,EAAA,UAClB,gBAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EAfD,IAgBA,CAAA,IAAA,aAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAYA,SAAA,EAAiB,GAAG,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAGe,OAFzB,EAAU,GAAU,GAAI,EAEM,KAAK,UAAjC,EAAS,EAAT,UAAW,EAAY,EAAZ,aAAY,EAAA,KAAA,EACA,KAAK,YAAY,EAAS,QAAO,OACuB,OADjF,EAAgB,EAAA,KAChB,EAAoB,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAe,CAAE,UAAA,IAAY,EAAA,KAAA,EAChE,OAAO,MAAM,EAAkB,GAAkB,OAAxE,EAAc,EAAA,KAQb,EAAA,EACsB,KAAK,iBAAiB,6BAA2B,EAAA,KAAA,GAAA,EAAA,IAAA,YAAA,EAAA,EAAA,KAAA,KAAE,CAAF,EAAA,KAAA,SAArD,OAAR,EAAQ,EAAA,MAAA,EAAA,KAAA,GAEJ,EAAS,CACZ,UAAA,EACA,aAAA,EACA,eAAA,EACA,QAAS,EACT,MAAO,KAAK,QACd,WAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAE,CAAF,EAAA,KAAA,SAAA,EAAA,QAAK,EAAS,QAPpB,EAAc,EAAA,GAAA,QAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,UAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,mBAAA,EAAA,OAAA,SASX,GAAc,yBAAA,EAAA,OAAA,GAAA,EAAA,0BACxB,gBAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EAtCD,IAuCA,CAAA,IAAA,WAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAeA,SAAA,EAAe,EAAK,GAAQ,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAGxB,OAFM,EAAU,GAAU,GAE1B,EAAA,KAAA,EACM,GAAQ,GAAE,cAAA,EAAA,KAAA,EACe,KAAK,YAAY,EAAS,SAAQ,OAA3D,EAAgB,EAAA,KACmB,EAAA,KAAA,SAK/B,QAGA,EAAO,EAAS,QAAQ,IAAI,UAE9B,GAAO,MAAM,oBAAA,OAAoB,GAAe,EAAiB,KAAI,qBAAA,OACjD,EAAI,cADX,4HAIhB,WAEA,EAAU,CAAF,EAAA,KAAA,SAIR,MACK,IAAI,GAAa,6BAA8B,CACjD,IAAK,GAAe,EAAiB,OACvC,eAAA,EAAA,KAAA,GAEwB,KAAK,2BAA2B,GAAS,QAAlD,GAAf,EAAe,EAAA,KACC,CAAF,EAAA,KAAA,SAIf,OAAA,EAAA,OAAA,UACM,GAAK,QAEe,OAFf,EAEoB,KAAK,UAAjC,EAAS,EAAT,UAAW,EAAY,EAAZ,aAAY,EAAA,KAAA,GACX,KAAK,OAAO,KAAK,GAAU,QACkB,GAD3D,EAAK,EAAA,OACL,EAAyB,KAAK,YAAY,mBACN,CAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,GAC9B,GAIR,EAAO,EAAiB,QAAS,CAAC,mBAAoB,GAAa,QAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,iBAAA,EAAA,GACjE,KAAI,QAIT,OAVK,EAAW,EAAA,GAUhB,EAAA,KAAA,GAAA,EAAA,KAAA,GAES,EAAM,IAAI,EAAkB,EAAyB,EAAgB,QAAU,GAAgB,QAAA,EAAA,KAAA,oBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,YAGjG,EAAA,cAAiB,OAAK,CAAA,EAAA,KAAA,YAEH,uBAAf,EAAA,GAAM,KAA6B,CAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,GAC7B,KAA4B,cAAA,EAAA,GAAA,QAAA,EAAA,EAKvB,KAAK,iBAAiB,mBAAiB,EAAA,KAAA,GAAA,EAAA,IAAA,YAAA,EAAA,EAAA,KAAA,KAAE,CAAF,EAAA,KAAA,SAA3C,OAAR,EAAQ,EAAA,MAAA,EAAA,KAAA,GACT,EAAS,CACX,UAAA,EACA,YAAA,EACA,YAAa,EAAgB,QAC7B,QAAS,EACT,MAAO,KAAK,QACd,QAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,UAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,mBAAA,EAAA,OAAA,UAEC,GAAI,yBAAA,EAAA,OAAA,GAAA,EAAA,kCACd,gBAAA,EAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EA1FD,IA2FA,CAAA,IAAA,cAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAWA,SAAA,EAAkB,EAAS,GAAI,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OACS,GAA9B,EAAM,GAAH,OAAM,EAAQ,IAAG,OAAA,OAAM,GAC3B,KAAK,WAAW,GAAM,CAAF,EAAA,KAAA,SACjB,EAAmB,EAAO,EAAA,EACP,KAAK,iBAAiB,uBAAqB,EAAA,KAAA,EAAA,EAAA,IAAA,WAAA,EAAA,EAAA,KAAA,KAAE,CAAF,EAAA,KAAA,SAClC,OADrB,EAAQ,EAAA,MAAA,EAAA,GACI,GAAS,EAAA,KAAA,GAAO,EAAS,CACxC,KAAA,EACA,QAAS,EACT,MAAO,KAAK,MAEZ,OAAQ,KAAK,SACf,QAAA,EAAA,GAAA,EAAA,KANF,GAAmB,EAAH,EAAA,IAAA,EAAA,IAAA,QAAA,EAAA,KAAG,EAAH,cAAA,EAAA,KAAG,GAAH,cAAA,EAAA,KAAG,GAAH,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAG,GAAH,EAAA,IAAA,EAAA,OAAA,YAQpB,KAAK,WAAW,GAAO,EAAiB,eAAA,EAAA,OAAA,SAErC,KAAK,WAAW,IAAI,yBAAA,EAAA,OAAA,GAAA,EAAA,yBAC9B,gBAAA,EAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EA3BD,IA4BA,CAAA,IAAA,cAAA,MAOA,SAAY,GAAM,IAC6B,EAD7B,EAAA,EACO,KAAK,UAAU,SAAO,IAA3C,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAA6C,CACzC,GAAI,KADS,EAAA,MAET,OAAO,CAEf,CAAC,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,CACD,OAAO,CACX,GACA,CAAA,IAAA,eAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAgBA,SAAA,EAAmB,EAAM,GAAK,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAAA,EAAA,EACH,KAAK,iBAAiB,IAAK,EAAA,KAAA,EAAA,EAAA,IAAA,WAAA,EAAA,EAAA,KAAA,KAAE,CAAF,EAAA,KAAA,QAA/B,OAAR,EAAQ,EAAA,MAAA,EAAA,KAAA,EAGT,EAAS,GAAM,OAAA,EAAA,KAAA,eAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,6BAAA,EAAA,OAAA,GAAA,EAAA,yBAE5B,gBAAA,EAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EAtBD,IAuBA,CAAA,IAAA,mBAAA,MAAA,IAAA,MASA,SAAA,EAAkB,GAAI,IAAA,EAAA,EAAA,EAAA,EAAA,YAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAAA,EAAA,EACG,KAAK,UAAU,SAAO,EAAA,KAAA,EAAA,EAAA,IAAA,MAAA,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAA1B,GACe,oBADrB,EAAM,EAAA,OACK,GAAoB,CAAA,EAAA,KAAA,QAQlC,OAPM,EAAQ,EAAK,gBAAgB,IAAI,GACjC,EAAmB,SAAC,GACtB,IAAM,EAAgB,OAAO,OAAO,OAAO,OAAO,CAAC,EAAG,GAAQ,CAAE,MAAA,IAGhE,OAAO,EAAO,GAAM,EACxB,EAAC,EAAA,KAAA,EACK,EAAgB,wBAAA,EAAA,OAAA,GAAA,EAAA,IAAA,EAAA,IAAA,WAAA,EAAA,EAAA,KAAA,KAAA,CAAA,EAAA,KAAA,eAAA,EAAA,cAAA,IAAA,eAAA,EAAA,KAAA,eAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,6BAAA,EAAA,OAAA,GAAA,EAAA,yBAIlC,CAAA,IAAA,YAAA,MAaA,SAAU,GAEN,OADA,KAAK,wBAAwB,KAAK,GAC3B,CACX,GACA,CAAA,IAAA,cAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAUA,SAAA,IAAA,IAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,YAEY,EAAU,KAAK,wBAAwB,SAAU,CAAH,EAAA,KAAA,eAAA,EAAA,KAAA,EAC5C,EAAO,OAAA,EAAA,KAAA,gCAAA,EAAA,OAAA,GAAA,EAAA,UAEpB,yBAAA,EAAA,MAAA,KAAA,UAAA,EAfD,IAgBA,CAAA,IAAA,UAAA,MAIA,WACI,KAAK,iBAAiB,QAAQ,KAClC,GACA,CAAA,IAAA,6BAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAUA,SAAA,EAAiC,GAAQ,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OACjC,EAAkB,EAClB,GAAc,EAAK,EAAA,EACA,KAAK,iBAAiB,oBAAkB,EAAA,KAAA,EAAA,EAAA,IAAA,WAAA,EAAA,EAAA,KAAA,KAAE,CAAF,EAAA,KAAA,SAA5C,OAAR,EAAQ,EAAA,MAAA,EAAA,KAAA,EAEJ,EAAS,CACZ,QAAS,KAAK,QACd,SAAU,EACV,MAAO,KAAK,QACd,UAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAE,CAAF,EAAA,KAAA,SAAA,EAAA,QAAK,EAAS,QACD,GANnB,EAAe,EAAA,GAMf,GAAc,EACT,EAAiB,CAAF,EAAA,KAAA,gBAAA,EAAA,OAAA,oBAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,YAwBvB,OApBI,GACG,GAA8C,MAA3B,EAAgB,SACnC,OAAkB,GAkBzB,EAAA,OAAA,SACM,GAAe,yBAAA,EAAA,OAAA,GAAA,EAAA,yBACzB,gBAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EA/CD,MA+CC,CAAA,CAtegB,GCVf,GAAQ,WAuBV,SAAA,IAA0B,IAAd,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAG,CAAC,EAAC,EAAA,KAAA,GAQpB,KAAK,UAAY,GAA0B,EAAQ,WAQnD,KAAK,QAAU,EAAQ,SAAW,GAQlC,KAAK,aAAe,EAAQ,aAQ5B,KAAK,aAAe,EAAQ,YAChC,CAsIC,OArID,EAAA,EAAA,EAAA,IAAA,SAAA,MAmBA,SAAO,GAEH,OAD8C,EAAvB,KAAK,UAAU,GAAQ,GAA3B,EAEvB,GACA,CAAA,IAAA,YAAA,MAsBA,SAAU,GAEF,aAAmB,aACnB,EAAU,CACN,MAAO,EACP,QAAS,EAAQ,UAGzB,IAAM,EAAQ,EAAQ,MAChB,EAAqC,kBAApB,EAAQ,QACzB,IAAI,QAAQ,EAAQ,SACpB,EAAQ,QACR,EAAS,WAAY,EAAU,EAAQ,YAAS,EAChD,EAAU,IAAI,GAAgB,KAAM,CAAE,MAAA,EAAO,QAAA,EAAS,OAAA,IACtD,EAAe,KAAK,aAAa,EAAS,EAAS,GAGzD,MAAO,CAAC,EAFY,KAAK,eAAe,EAAc,EAAS,EAAS,GAG5E,GAAC,CAAA,IAAA,eAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MACD,SAAA,EAAmB,EAAS,EAAS,GAAK,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,cAAA,EAAA,KAAA,EAChC,EAAQ,aAAa,mBAAoB,CAAE,MAAA,EAAO,QAAA,IAAU,OAC1C,OAApB,OAAW,EAAS,EAAA,KAAA,EAAA,EAAA,KAAA,EAEH,KAAK,QAAQ,EAAS,GAAQ,OAAvC,IAAR,EAAQ,EAAA,OAI2B,UAAlB,EAAS,KAAgB,CAAA,EAAA,KAAA,cAChC,IAAI,GAAa,cAAe,CAAE,IAAK,EAAQ,MAAM,OAAA,EAAA,KAAA,oBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,WAI3D,EAAA,cAAiB,OAAK,CAAA,EAAA,KAAA,SAAA,EAAA,EACC,EAAQ,iBAAiB,oBAAkB,EAAA,KAAA,GAAA,EAAA,IAAA,YAAA,EAAA,EAAA,KAAA,KAAE,CAAF,EAAA,KAAA,SAA/C,OAAR,EAAQ,EAAA,MAAA,EAAA,KAAA,GACE,EAAS,CAAE,MAAK,EAAA,GAAE,MAAA,EAAO,QAAA,IAAU,QAA5C,KAAR,EAAQ,EAAA,MACM,CAAF,EAAA,KAAA,gBAAA,EAAA,OAAA,oBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,UAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,eAKf,EAAU,CAAF,EAAA,KAAA,eAAA,EAAA,GAAA,QAGJ,EAIR,QAAA,EAAA,EAEkB,EAAQ,iBAAiB,uBAAqB,EAAA,KAAA,GAAA,EAAA,IAAA,YAAA,EAAA,EAAA,KAAA,KAAE,CAAF,EAAA,KAAA,SAAlD,OAAR,EAAQ,EAAA,MAAA,EAAA,KAAA,GACE,EAAS,CAAE,MAAA,EAAO,QAAA,EAAS,SAAA,IAAW,QAAvD,EAAQ,EAAA,KAAA,QAAA,EAAA,KAAG,GAAH,cAAA,EAAA,KAAG,GAAH,cAAA,EAAA,KAAG,GAAH,EAAA,GAAA,EAAA,UAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAG,GAAH,EAAA,IAAA,EAAA,OAAA,mBAAA,EAAA,OAAA,SAEL,GAAQ,yBAAA,EAAA,OAAA,GAAA,EAAA,+CAClB,gBAAA,EAAA,EAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EAnCA,IAmCA,CAAA,IAAA,iBAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MACD,SAAA,EAAqB,EAAc,EAAS,EAAS,GAAK,IAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,cAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAIjC,EAAY,OAA7B,EAAQ,EAAA,KAAA,EAAA,KAAG,EAAH,aAAA,EAAA,KAAG,EAAH,EAAA,GAAA,EAAA,uBAAA,EAAA,KAAG,EAAH,EAAA,KAAG,GAQL,EAAQ,aAAa,oBAAqB,CAC5C,MAAA,EACA,QAAA,EACA,SAAA,IACF,eAAA,EAAA,KAAA,GACI,EAAQ,cAAa,QAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,SAGvB,EAAA,cAA0B,QAC1B,EAAK,EAAA,IACR,eAAA,EAAA,KAAA,GAEC,EAAQ,aAAa,qBAAsB,CAC7C,MAAA,EACA,QAAA,EACA,SAAA,EACA,MAAO,IACT,QACgB,GAAlB,EAAQ,WACJ,EAAO,CAAF,EAAA,KAAA,eACC,EAAK,yBAAA,EAAA,OAAA,GAAA,EAAA,yBAElB,gBAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EAnCA,MAmCA,CAAA,CA9LS,GCQR,GAAgB,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAkBlB,SAAA,IAA0B,IAAA,EAAd,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAG,CAAC,EASwD,OATvD,EAAA,KAAA,GACpB,EAAQ,UAAY,GAA2B,EAAQ,YACvD,EAAA,EAAA,KAAA,KAAM,IACD,oBAC6B,IAA9B,EAAQ,kBAKZ,EAAK,QAAQ,KAAK,EAAiB,wCAAwC,CAC/E,CAyJC,OAxJD,EAAA,EAAA,EAAA,IAAA,UAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAOA,SAAA,EAAc,EAAS,GAAO,IAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,cAAA,EAAA,KAAA,EACH,EAAQ,WAAW,GAAQ,OAApC,KAAR,EAAQ,EAAA,MACA,CAAF,EAAA,KAAA,eAAA,EAAA,OAAA,SACD,GAAQ,WAIf,EAAQ,OAAgC,YAAvB,EAAQ,MAAM,KAAkB,CAAA,EAAA,KAAA,eAAA,EAAA,KAAA,EACpC,KAAK,eAAe,EAAS,GAAQ,OAIN,eAAA,EAAA,OAAA,SAAA,EAAA,MAJM,cAAA,EAAA,KAAA,GAIzC,KAAK,aAAa,EAAS,GAAQ,yBAAA,EAAA,OAAA,GAAA,EAAA,UACnD,gBAAA,EAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EApBD,IAoBC,CAAA,IAAA,eAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MACD,SAAA,EAAmB,EAAS,GAAO,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAG/B,GADM,EAAU,EAAQ,QAAU,CAAC,GAE/B,KAAK,mBAAoB,CAAF,EAAA,KAAA,SAUvB,OAJM,EAAsB,EAAO,UAC7B,EAAqB,EAAQ,UAC7B,GAAuB,GAAsB,IAAuB,EAE1E,EAAA,KAAA,EACiB,EAAQ,MAAM,IAAI,QAAQ,EAAS,CAChD,UAA4B,YAAjB,EAAQ,KACb,GAAsB,OACtB,KACP,OAJK,GAAR,EAAQ,EAAA,MAYJ,IACA,GACiB,YAAjB,EAAQ,KAAkB,CAAA,EAAA,KAAA,SACmB,OAA7C,KAAK,wCAAwC,EAAA,KAAA,GACrB,EAAQ,SAAS,EAAS,EAAS,SAAQ,QAApD,EAAA,KAMd,QAAA,EAAA,KAAA,uBAMC,IAAI,GAAa,yBAA0B,CAC7C,UAAW,KAAK,UAChB,IAAK,EAAQ,MACf,QAEmC,EAAA,KAAA,SAC0C,QAAA,EAAA,GAAA,EAAA,KAAA,QAAzE,EAAQ,EAAA,GAGd,GAAO,eAAe,gCAAkC,GAAe,EAAQ,MAC/E,GAAO,IAAI,8BAAD,OAA+B,GAAe,aAAoB,QAAU,EAAS,IAAM,KACrG,GAAO,eAAe,8BACtB,GAAO,IAAI,GACX,GAAO,WACP,GAAO,eAAe,+BACtB,GAAO,IAAI,GACX,GAAO,WACP,GAAO,WAAW,eAAA,EAAA,OAAA,SAEf,GAAQ,yBAAA,EAAA,OAAA,GAAA,EAAA,UAClB,gBAAA,EAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EAhEA,IAgEA,CAAA,IAAA,iBAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MACD,SAAA,EAAqB,EAAS,GAAO,IAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OACY,OAA7C,KAAK,wCAAwC,EAAA,KAAA,EACtB,EAAQ,MAAM,GAAQ,OAA/B,OAAR,EAAQ,EAAA,KAAA,EAAA,KAAG,EAGO,EAAQ,SAAS,EAAS,EAAS,SAAQ,OAApD,GAAA,EAAA,KACC,CAAF,EAAA,KAAA,cAGJ,IAAI,GAAa,0BAA2B,CAC9C,IAAK,EAAQ,IACb,OAAQ,EAAS,SACnB,cAAA,EAAA,OAAA,SAEC,GAAQ,yBAAA,EAAA,OAAA,GAAA,EAAA,UAClB,gBAAA,EAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EAhBA,IAiBD,CAAA,IAAA,wCAAA,MA2BA,WACI,IAEoD,EAFhD,EAAqB,KACrB,EAA6B,EAAE,EAAA,EACL,KAAK,QAAQ,WAAS,IAApD,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAsD,KAAA,EAAA,EAAA,EAAA,MAAA,GAA1C,EAAK,EAAA,GAAE,EAAM,EAAA,GAEjB,IAAW,EAAiB,yCAI5B,IAAW,EAAiB,oCAC5B,EAAqB,GAErB,EAAO,iBACP,IAER,CAAC,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,CACkC,IAA/B,EACA,KAAK,QAAQ,KAAK,EAAiB,mCAE9B,EAA6B,GAA4B,OAAvB,GAEvC,KAAK,QAAQ,OAAO,EAAoB,EAGhD,KAAC,CAAA,CArLiB,CAAS,IAuL/B,GAAiB,kCAAoC,CAC3C,gBAAe,SAAA,GAAe,OAAA,EAAA,IAAA,MAAA,SAAA,IAAA,IAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAAJ,IAAR,EAAQ,EAAR,aACH,EAAS,QAAU,KAAG,CAAA,EAAA,KAAA,eAAA,EAAA,OAAA,SAC5B,MAAI,cAAA,EAAA,OAAA,SAER,GAAQ,wBAAA,EAAA,OAAA,GAAA,EAAA,IAJiB,EAKpC,GAEJ,GAAiB,uCAAyC,CAChD,gBAAe,SAAA,GAAe,OAAA,EAAA,IAAA,MAAA,SAAA,IAAA,IAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAAJ,KAAR,EAAQ,EAAR,UACJ,WAAU,CAAA,EAAA,KAAA,eAAA,EAAA,KAAA,EAAS,GAAa,GAAS,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,eAAA,EAAA,GAAG,EAAQ,cAAA,EAAA,OAAA,SAAA,EAAA,IAAA,wBAAA,EAAA,OAAA,GAAA,EAAA,IADpC,EAEpC,GCzMJ,ICVI,GDeE,GAAkB,WAWpB,SAAA,IAAyE,IAAA,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAJ,CAAC,EAAxD,EAAS,EAAT,UAAS,EAAA,EAAE,QAAA,OAAO,IAAA,EAAG,GAAE,EAAA,EAAA,EAAE,kBAAA,OAAiB,IAAA,GAAO,EAAA,EAAA,KAAA,GAC3D,KAAK,iBAAmB,IAAI,IAC5B,KAAK,kBAAoB,IAAI,IAC7B,KAAK,wBAA0B,IAAI,IACnC,KAAK,UAAY,IAAI,GAAiB,CAClC,UAAW,GAA2B,GACtC,QAAS,GAAF,OAAA,EACA,GAAO,CACV,IAAI,GAAuB,CAAE,mBAAoB,SAErD,kBAAA,IAGJ,KAAK,QAAU,KAAK,QAAQ,KAAK,MACjC,KAAK,SAAW,KAAK,SAAS,KAAK,KACvC,CA+OC,OA9OD,EAAA,EAAA,EAAA,IAAA,WAAA,IAIA,WACI,OAAO,KAAK,SAChB,GACA,CAAA,IAAA,WAAA,MAUA,SAAS,GACL,KAAK,eAAe,GACf,KAAK,kCACN,KAAK,iBAAiB,UAAW,KAAK,SACtC,KAAK,iBAAiB,WAAY,KAAK,UACvC,KAAK,iCAAkC,EAE/C,GACA,CAAA,IAAA,iBAAA,MAOA,SAAe,GASX,IAC2B,EADrB,EAAkB,GAAG,EAAA,EACP,GAAO,IAA3B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAA6B,KAAlB,EAAK,EAAA,MAES,kBAAV,EACP,EAAgB,KAAK,GAEhB,QAA4B,IAAnB,EAAM,UACpB,EAAgB,KAAK,EAAM,KAE/B,IAAA,EAA0B,GAAe,GAAjC,EAAQ,EAAR,SAAU,EAAG,EAAH,IACZ,EAA6B,kBAAV,GAAsB,EAAM,SAAW,SAAW,UAC3E,GAAI,KAAK,iBAAiB,IAAI,IAC1B,KAAK,iBAAiB,IAAI,KAAS,EACnC,MAAM,IAAI,GAAa,wCAAyC,CAC5D,WAAY,KAAK,iBAAiB,IAAI,GACtC,YAAa,IAGrB,GAAqB,kBAAV,GAAsB,EAAM,UAAW,CAC9C,GAAI,KAAK,wBAAwB,IAAI,IACjC,KAAK,wBAAwB,IAAI,KAAc,EAAM,UACrD,MAAM,IAAI,GAAa,4CAA6C,CAChE,IAAA,IAGR,KAAK,wBAAwB,IAAI,EAAU,EAAM,UACrD,CAGA,GAFA,KAAK,iBAAiB,IAAI,EAAK,GAC/B,KAAK,kBAAkB,IAAI,EAAK,GAC5B,EAAgB,OAAS,EAAG,CAC5B,IAAM,EAAiB,wDAAA,OACV,EAAgB,KAAK,MAAK,kCAAgC,2CAKnE,QAAQ,KAAK,EAKrB,CACJ,CAAC,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,CACL,GACA,CAAA,IAAA,UAAA,MAUA,SAAQ,GAAO,IAAA,EAAA,KAGX,OAAO,GAAU,EAAK,EAAA,IAAA,MAAE,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OACd,EAAsB,IAAI,GAChC,EAAK,SAAS,QAAQ,KAAK,GAE3B,EAAA,EAC8B,EAAK,kBAAgB,EAAA,KAAA,EAAA,EAAA,IAAA,WAAA,EAAA,EAAA,KAAA,KAAE,CAAF,EAAA,KAAA,SAO7C,OAP6C,EAAA,EAAA,EAAA,MAAA,GAAvC,EAAG,EAAA,GAAE,EAAQ,EAAA,GACf,EAAY,EAAK,wBAAwB,IAAI,GAC7C,EAAY,EAAK,kBAAkB,IAAI,GACvC,EAAU,IAAI,QAAQ,EAAK,CAC7B,UAAA,EACA,MAAO,EACP,YAAa,gBACf,EAAA,KAAA,GACI,QAAQ,IAAI,EAAK,SAAS,UAAU,CACtC,OAAQ,CAAE,SAAA,GACV,QAAA,EACA,MAAA,KACD,QAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,YAKN,OAHO,EAAgC,EAAhC,YAAa,EAAmB,EAAnB,eAGpB,EAAA,OAAA,SACM,CAAE,YAAA,EAAa,eAAA,IAAgB,yBAAA,EAAA,OAAA,GAAA,EAAA,yBAE9C,GACA,CAAA,IAAA,WAAA,MAUA,SAAS,GAAO,IAAA,EAAA,KAGZ,OAAO,GAAU,EAAK,EAAA,IAAA,MAAE,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,cAAA,EAAA,KAAA,EACA,KAAK,OAAO,KAAK,EAAK,SAAS,WAAU,OAAlD,OAAL,EAAK,EAAA,KAAA,EAAA,KAAG,EACwB,EAAM,OAAM,OAA5C,EAAuB,EAAA,KACvB,EAAoB,IAAI,IAAI,EAAK,iBAAiB,UAClD,EAAc,GAAE,EAAA,EACA,GAAuB,EAAA,KAAA,EAAA,EAAA,IAAA,YAAA,EAAA,EAAA,KAAA,KAAE,CAAF,EAAA,KAAA,SAA3B,GAAP,EAAO,EAAA,MACT,EAAkB,IAAI,EAAQ,KAAM,CAAF,EAAA,KAAA,gBAAA,EAAA,KAAA,GAC7B,EAAM,OAAO,GAAQ,QAC3B,EAAY,KAAK,EAAQ,KAAK,QAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,YAKrC,OAAA,EAAA,OAAA,SACM,CAAE,YAAA,IAAa,yBAAA,EAAA,OAAA,GAAA,EAAA,yBAE9B,GACA,CAAA,IAAA,qBAAA,MAMA,WACI,OAAO,KAAK,gBAChB,GACA,CAAA,IAAA,gBAAA,MAMA,WACI,OAAA,EAAW,KAAK,iBAAiB,OACrC,GACA,CAAA,IAAA,oBAAA,MASA,SAAkB,GACd,IAAM,EAAY,IAAI,IAAI,EAAK,SAAS,MACxC,OAAO,KAAK,iBAAiB,IAAI,EAAU,KAC/C,GACA,CAAA,IAAA,0BAAA,MAKA,SAAwB,GACpB,OAAO,KAAK,wBAAwB,IAAI,EAC5C,GACA,CAAA,IAAA,gBAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAkBA,SAAA,EAAoB,GAAO,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAEqB,GADtC,EAAM,aAAmB,QAAU,EAAQ,IAAM,IACjD,EAAW,KAAK,kBAAkB,IAC1B,CAAF,EAAA,KAAA,eAAA,EAAA,KAAA,EACY,KAAK,OAAO,KAAK,KAAK,SAAS,WAAU,OAAlD,OAAL,EAAK,EAAA,KAAA,EAAA,OAAA,SACJ,EAAM,MAAM,IAAS,cAAA,EAAA,OAAA,cAEzB,GAAS,wBAAA,EAAA,OAAA,GAAA,EAAA,UACnB,gBAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EA1BD,IA2BA,CAAA,IAAA,0BAAA,MAQA,SAAwB,GAAK,IAAA,EAAA,KACnB,EAAW,KAAK,kBAAkB,GACxC,IAAK,EACD,MAAM,IAAI,GAAa,oBAAqB,CAAE,IAAA,IAElD,OAAO,SAAC,GAGJ,OAFA,EAAQ,QAAU,IAAI,QAAQ,GAC9B,EAAQ,OAAS,OAAO,OAAO,CAAE,SAAA,GAAY,EAAQ,QAC9C,EAAK,SAAS,OAAO,EAChC,CACJ,KAAC,CAAA,CAzQmB,GCVX,GAAgC,WAIzC,OAHK,KACD,GAAqB,IAAI,IAEtB,EACX,aCVI,GCOS,GAAmB,SAAC,GAC7B,OAAI,GAA8B,kBAAZ,EASX,EAWA,CAAE,OAAQ,EAEzB,ECnBM,GAAK,WAYP,SAAA,EAAY,EAAO,GAAiC,IAAxB,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GChBT,MDgByB,EAAA,KAAA,GAc9C,KAAK,QAAU,GAAiB,GAChC,KAAK,MAAQ,EACb,KAAK,OAAS,CAClB,CAQC,OAPD,EAAA,EAAA,EAAA,IAAA,kBAAA,MAKA,SAAgB,GACZ,KAAK,aAAe,GAAiB,EACzC,KAAC,CAAA,CArCM,GEEL,GAAW,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAcb,SAAA,EAAY,EAAQ,EAAS,GAAQ,EAAA,KAAA,GAgC/B,OAAA,EAAA,KAAA,MAvBY,SAAH,GAAgB,IAAV,EAAG,EAAH,IACP,EAAS,EAAO,KAAK,EAAI,MAE/B,GAAK,IAOD,EAAI,SAAW,SAAS,QAA2B,IAAjB,EAAO,OAY7C,OAAO,EAAO,MAAM,EACxB,GACa,EAAS,EAC1B,CAAC,OAAA,EAAA,EAAA,CAhDY,CAAS,ICSpB,GAAM,WAIR,SAAA,IAAc,EAAA,KAAA,GACV,KAAK,QAAU,IAAI,IACnB,KAAK,mBAAqB,IAAI,GAClC,CAgWC,OA/VD,EAAA,EAAA,EAAA,IAAA,SAAA,IAKA,WACI,OAAO,KAAK,OAChB,GACA,CAAA,IAAA,mBAAA,MAIA,WAAmB,IAAA,EAAA,KAEf,KAAK,iBAAiB,SAAU,SAAC,GAC7B,IAAQ,EAAY,EAAZ,QACF,EAAkB,EAAK,cAAc,CAAE,QAAA,EAAS,MAAA,IAClD,GACA,EAAM,YAAY,EAE1B,GACJ,GACA,CAAA,IAAA,mBAAA,MAsBA,WAAmB,IAAA,EAAA,KAEf,KAAK,iBAAiB,WAAY,SAAC,GAG/B,GAAI,EAAM,MAA4B,eAApB,EAAM,KAAK,KAAuB,CAEhD,IAAQ,EAAY,EAAM,KAAlB,QACJ,EAGJ,IAAM,EAAkB,QAAQ,IAAI,EAAQ,YAAY,KAAI,SAAC,GACpC,kBAAV,IACP,EAAQ,CAAC,IAEb,IAAM,EAAO,EAAO,QAAO,EAAI,IAC/B,OAAO,EAAK,cAAc,CAAE,QAAA,EAAS,MAAA,GAIzC,KACA,EAAM,UAAU,GAEZ,EAAM,OAAS,EAAM,MAAM,IACtB,EAAgB,MAAK,kBAAM,EAAM,MAAM,GAAG,aAAY,EAAK,GAExE,CACJ,GACJ,GACA,CAAA,IAAA,gBAAA,MAYA,SAAA,GAAmC,IAAA,EAAA,KAAnB,EAAO,EAAP,QAAS,EAAK,EAAL,MASrB,IAAM,EAAM,IAAI,IAAI,EAAQ,IAAK,SAAS,MAC1C,GAAK,EAAI,SAAS,WAAW,QAA7B,CAMA,IAAM,EAAa,EAAI,SAAW,SAAS,OAC3C,EAA0B,KAAK,kBAAkB,CAC7C,MAAA,EACA,QAAA,EACA,WAAA,EACA,IAAA,IAJI,EAAM,EAAN,OAAQ,EAAK,EAAL,MAMZ,EAAU,GAAS,EAAM,QAEzB,EAaJ,IAAM,EAAS,EAAQ,OAQvB,IAPK,GAAW,KAAK,mBAAmB,IAAI,KAKxC,EAAU,KAAK,mBAAmB,IAAI,IAErC,EAAL,CAwBA,IAAI,EAhBA,EAiBJ,IACI,EAAkB,EAAQ,OAAO,CAAE,IAAA,EAAK,QAAA,EAAS,MAAA,EAAO,OAAA,GAC5D,CACA,MAAO,GACH,EAAkB,QAAQ,OAAO,EACrC,CAEA,IAAM,EAAe,GAAS,EAAM,aAuCpC,OAtCI,aAA2B,UAC1B,KAAK,eAAiB,KACvB,EAAkB,EAAgB,MAAK,eAAA,EAAA,EAAA,IAAA,MAAC,SAAA,EAAO,GAAG,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,WAE1C,EAAc,CAAF,EAAA,KAAA,SASX,OAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAEgB,EAAa,OAAO,CAAE,IAAA,EAAK,QAAA,EAAS,MAAA,EAAO,OAAA,IAAS,cAAA,EAAA,OAAA,SAAA,EAAA,MAAA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,SAG7D,EAAA,cAAoB,QACpB,EAAG,EAAA,IACN,YAGL,EAAK,cAAe,CAAF,EAAA,KAAA,SASjB,OAAA,EAAA,OAAA,SACM,EAAK,cAAc,OAAO,CAAE,IAAA,EAAK,QAAA,EAAS,MAAA,KAAQ,cAEvD,EAAG,yBAAA,EAAA,OAAA,GAAA,EAAA,kBACZ,gBAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EAlCsC,KAoCpC,CAhEP,CAtCA,CAuGJ,GACA,CAAA,IAAA,oBAAA,MAeA,SAAA,GAAwD,IAE1B,EAFV,EAAG,EAAH,IAAK,EAAU,EAAV,WAAY,EAAO,EAAP,QAAS,EAAK,EAAL,MACY,EAAA,EAAvC,KAAK,QAAQ,IAAI,EAAQ,SAAW,IACzB,IAA1B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAA4B,KAAjB,EAAK,EAAA,MACR,OAAM,EAGJ,EAAc,EAAM,MAAM,CAAE,IAAA,EAAK,WAAA,EAAY,QAAA,EAAS,MAAA,IAC5D,GAAI,EA6BA,OAjBA,EAAS,GACL,MAAM,QAAQ,IAA6B,IAAlB,EAAO,QAI3B,EAAY,cAAgB,QACG,IAApC,OAAO,KAAK,GAAa,QAIG,mBAAhB,KAPZ,OAAS,GAcN,CAAE,MAAA,EAAO,OAAA,EAExB,CACA,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,CACA,MAAO,CAAC,CACZ,GACA,CAAA,IAAA,oBAAA,MAcA,SAAkB,GAAiC,IAAxB,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GF1SR,ME2SrB,KAAK,mBAAmB,IAAI,EAAQ,GAAiB,GACzD,GACA,CAAA,IAAA,kBAAA,MAOA,SAAgB,GACZ,KAAK,cAAgB,GAAiB,EAC1C,GACA,CAAA,IAAA,gBAAA,MAKA,SAAc,GAiCL,KAAK,QAAQ,IAAI,EAAM,SACxB,KAAK,QAAQ,IAAI,EAAM,OAAQ,IAInC,KAAK,QAAQ,IAAI,EAAM,QAAQ,KAAK,EACxC,GACA,CAAA,IAAA,kBAAA,MAKA,SAAgB,GACZ,IAAK,KAAK,QAAQ,IAAI,EAAM,QACxB,MAAM,IAAI,GAAa,6CAA8C,CACjE,OAAQ,EAAM,SAGtB,IAAM,EAAa,KAAK,QAAQ,IAAI,EAAM,QAAQ,QAAQ,GAC1D,KAAI,GAAc,GAId,MAAM,IAAI,GAAa,yCAHvB,KAAK,QAAQ,IAAI,EAAM,QAAQ,OAAO,EAAY,EAK1D,KAAC,CAAA,CAvWO,GLdC,GAA2B,WAOpC,OANK,MACD,GAAgB,IAAI,IAEN,mBACd,GAAc,oBAEX,EACX,EMMA,SAAS,GAAc,EAAS,EAAS,GACrC,IAAI,EACJ,GAAuB,kBAAZ,EAAsB,CAC7B,IAAM,EAAa,IAAI,IAAI,EAAS,SAAS,MAkC7C,EAAQ,IAAI,IAZU,SAAH,GASf,OATwB,EAAH,IASV,OAAS,EAAW,IACnC,GAEiC,EAAS,EAC9C,MACK,GAAI,aAAmB,OAExB,EAAQ,IAAI,GAAY,EAAS,EAAS,QAEzC,GAAuB,oBAAZ,EAEZ,EAAQ,IAAI,GAAM,EAAS,EAAS,OAEnC,MAAI,aAAmB,IAIxB,MAAM,IAAI,GAAa,yBAA0B,CAC7C,WAAY,kBACZ,SAAU,gBACV,UAAW,YANf,EAAQ,CAQZ,CAGA,OAFsB,KACR,cAAc,GACrB,CACX,CCvEO,SAAS,GAA0B,GAGtC,IAHmF,IAAlC,EAA2B,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAG,GAAE,EAAA,WAG5E,IAAM,EAAS,EAAA,GACZ,EAA4B,MAAK,SAAC,GAAM,OAAK,EAAO,KAAK,EAAU,KACnE,EAAU,aAAa,OAAO,EAEtC,EAJA,EAAA,EAAA,EAAA,EAA4B,EAAU,aAAa,QAAM,EAAA,EAAA,OAAA,IAAA,IAKzD,OAAO,CACX,CCjBA,IASM,GAAa,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAiBf,SAAA,EAAY,EAAoB,GAAS,EAAA,KAAA,GAcnC,OAAA,EAAA,KAAA,MAbY,SAAH,GAAqB,IAEyC,EAFxD,EAAO,EAAP,QACP,EAAkB,EAAmB,qBAAqB,EAAA,ECrBrE,SAAgC,GAAG,IAAA,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAA+H,CAAC,EAAC,EAAA,EAA7H,4BAAA,OAA2B,IAAA,EAAG,CAAC,QAAS,YAAW,EAAA,EAAA,EAAE,eAAA,OAAc,IAAA,EAAG,aAAY,EAAA,EAAA,EAAE,UAAA,OAAS,IAAA,GAAO,EAAE,EAAe,EAAf,gBAAe,OAAA,IAAA,MAAA,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAG/J,OAFM,EAAY,IAAI,IAAI,EAAK,SAAS,OAC9B,KAAO,GAAG,EAAA,KAAA,EACd,EAAU,KAAI,OAEpB,OADM,EAA0B,GAA0B,EAAW,GAA4B,EAAA,KAAA,EAC3F,EAAwB,KAAI,WAC9B,IAAkB,EAAwB,SAAS,SAAS,KAAI,CAAA,EAAA,KAAA,SAGhE,OAFM,EAAe,IAAI,IAAI,EAAwB,OACxC,UAAY,EAAe,EAAA,KAAA,GAClC,EAAa,KAAI,YAEvB,EAAW,CAAF,EAAA,KAAA,SAGT,OAFM,EAAW,IAAI,IAAI,EAAwB,OACxC,UAAY,QAAQ,EAAA,KAAA,GACvB,EAAS,KAAI,YAEnB,EAAiB,CAAF,EAAA,KAAA,SACT,EAAiB,EAAgB,CAAE,IAAK,IAAY,EAAA,EAC/B,GAAc,EAAA,KAAA,GAAA,EAAA,IAAA,YAAA,EAAA,EAAA,KAAA,KAAE,CAAF,EAAA,KAAA,SACrC,OADO,EAAY,EAAA,MAAA,EAAA,KAAA,GACb,EAAa,KAAI,QAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,UAAA,EAAA,EAAA,EAAA,IAAA,eAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,OAAA,6BAAA,EAAA,OAAA,GAAA,EAAA,wBAnBgI,EAmBhI,CDGG,CAAsB,EAAQ,IAAK,IAAQ,IAArE,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAuE,KAA5D,EAAW,EAAA,MACZ,EAAW,EAAgB,IAAI,GACrC,GAAI,EAEA,MAAO,CAAE,SAAA,EAAU,UADD,EAAmB,wBAAwB,GAGrE,CAAC,OAAA,GAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,CAKL,GACa,EAAmB,SACpC,CAAC,OAAA,EAAA,EAAA,CAjCc,CAAS,IEXrB,ICc4B,GChBtB,GAAyB,CAWlC,gBAAiB,WAAF,IAAA,EAAA,EAAA,IAAA,MAAE,SAAA,EAAA,GAAA,IAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAAiB,GACN,OADF,EAAQ,EAAR,UACT,QAAsC,IAApB,EAAS,OAAY,CAAA,EAAA,KAAA,eAAA,EAAA,OAAA,SACzC,GAAQ,cAAA,EAAA,OAAA,SAEZ,MAAI,wBAAA,EAAA,OAAA,GAAA,EAAA,KACd,gBAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EALgB,ICgBf,GAAoB,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GActB,SAAA,IAA0B,IAAA,EAAd,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAG,CAAC,EAMlB,OANmB,EAAA,KAAA,IACpB,EAAA,EAAA,KAAA,KAAM,IAGI,QAAQ,MAAK,SAAC,GAAC,MAAK,oBAAqB,CAAC,KAChD,EAAK,QAAQ,QAAQ,IACxB,CACL,CA2DC,OA1DD,EAAA,EAAA,EAAA,IAAA,UAAA,MAAA,eAAA,EAAA,EAAA,IAAA,MAOA,SAAA,EAAc,EAAS,GAAO,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,OAcmB,MAbhC,GASP,EAAuB,EAAQ,iBAAiB,GAAS,OAAM,WAEjE,IAEC,EAAQ,UAAU,GAAsB,EAAA,KAAA,EACxB,EAAQ,WAAW,GAAQ,OAApC,KAAR,EAAQ,EAAA,MAEE,CAAF,EAAA,KAAA,SACJ,EAGH,EAAA,KAAA,iBAMA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,GAIqB,EAAoB,QAAtC,EAAQ,EAAA,KAAA,EAAA,KAAG,GAAH,cAAA,EAAA,KAAG,GAAH,EAAA,GAAA,EAAA,UAGJ,EAAA,cAAe,QACf,EAAK,EAAA,IACR,QAUR,GACI,EAAU,CAAF,EAAA,KAAA,eACH,IAAI,GAAa,cAAe,CAAE,IAAK,EAAQ,IAAK,MAAA,IAAQ,eAAA,EAAA,OAAA,SAE/D,GAAQ,yBAAA,EAAA,OAAA,GAAA,EAAA,oBAClB,gBAAA,EAAA,GAAA,OAAA,EAAA,MAAA,KAAA,UAAA,EA1DD,MA0DC,CAAA,CAhFqB,CAAS,ICdnC,QAAQ,MAAM,0BAA2B,IAAI,KAAK,SAAS,mBCNvD,KAAK,iBAAiB,YAAY,kBAAM,KAAK,QAAQ,OAAO,ICahE,SAAkB,GACa,KACR,SAAS,EAChC,CLNI,CGQa,qOAAK,eGRtB,SAAkB,GACd,IAAM,EAAqB,KAE3B,GADsB,IAAI,GAAc,EAAoB,GAEhE,CNHI,CAAS,IGYb,IIZiC,GJY3B,GAAsB,IAAI,OAAO,oBACvC,IAEE,SAAA,GAAuD,IAApD,EAAO,EAAP,QAAS,EAAG,EAAH,IAEV,MAAqB,aAAjB,EAAQ,QAKR,EAAI,SAAS,WAAW,QAMxB,EAAI,SAAS,MAAM,IAMzB,IIlC+B,GJmCP,eIlCK,KACD,wBAAwB,MJsCtD,IAEE,SAAA,GAAA,IAAG,EAAG,EAAH,IAAG,OAAO,EAAI,SAAW,KAAK,SAAS,QAAU,EAAI,SAAS,SAAS,OAAO,GAEjF,IAAI,GAAqB,CACvB,UAAW,SACX,QAAS,CAGP,IAAI,GAAiB,CAAE,WAAY,SAOzC,KAAK,iBAAiB,WAAW,SAAC,GAC5B,EAAM,MAA4B,iBAApB,EAAM,KAAK,MAC3B,KAAK,aAET,IAWA,KAAK,iBAAiB,WAAW,WAE/B,KAAK,aACP,IACA,KAAK,iBAAiB,WAAU,EAAA,IAAA,MAAE,SAAA,IAAA,OAAA,IAAA,MAAA,SAAA,GAAA,cAAA,EAAA,KAAA,EAAA,MAAA,cAAA,EAAA,KAAA,EACb,KAAK,QAAQ,SAAS,CAAC,KAAM,WAAW,KAAD,EAAhD,EAAA,KAEL,SAAQ,SAAC,GAEZ,EAAI,SAAS,EAAI,IACnB,IAAE,wBAAA,EAAA,OAAA,GAAA,EAAA","file":"service-worker.js","sourceRoot":"","sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:7.0.0'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:7.0.0'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:7.0.0'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:7.0.0'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:7.0.0'] && _();\n}\ncatch (e) { }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * Dexie.js - a minimalistic wrapper for IndexedDB\n * ===============================================\n *\n * By David Fahlander, david.fahlander@gmail.com\n *\n * Version 4.0.1-alpha.27, Fri Oct 13 2023\n *\n * https://dexie.org\n *\n * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/\n */\n \nconst _global = typeof globalThis !== 'undefined' ? globalThis :\n    typeof self !== 'undefined' ? self :\n        typeof window !== 'undefined' ? window :\n            global;\n\nconst keys = Object.keys;\nconst isArray = Array.isArray;\nif (typeof Promise !== 'undefined' && !_global.Promise) {\n    _global.Promise = Promise;\n}\nfunction extend(obj, extension) {\n    if (typeof extension !== 'object')\n        return obj;\n    keys(extension).forEach(function (key) {\n        obj[key] = extension[key];\n    });\n    return obj;\n}\nconst getProto = Object.getPrototypeOf;\nconst _hasOwn = {}.hasOwnProperty;\nfunction hasOwn(obj, prop) {\n    return _hasOwn.call(obj, prop);\n}\nfunction props(proto, extension) {\n    if (typeof extension === 'function')\n        extension = extension(getProto(proto));\n    (typeof Reflect === \"undefined\" ? keys : Reflect.ownKeys)(extension).forEach(key => {\n        setProp(proto, key, extension[key]);\n    });\n}\nconst defineProperty = Object.defineProperty;\nfunction setProp(obj, prop, functionOrGetSet, options) {\n    defineProperty(obj, prop, extend(functionOrGetSet && hasOwn(functionOrGetSet, \"get\") && typeof functionOrGetSet.get === 'function' ?\n        { get: functionOrGetSet.get, set: functionOrGetSet.set, configurable: true } :\n        { value: functionOrGetSet, configurable: true, writable: true }, options));\n}\nfunction derive(Child) {\n    return {\n        from: function (Parent) {\n            Child.prototype = Object.create(Parent.prototype);\n            setProp(Child.prototype, \"constructor\", Child);\n            return {\n                extend: props.bind(null, Child.prototype)\n            };\n        }\n    };\n}\nconst getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nfunction getPropertyDescriptor(obj, prop) {\n    const pd = getOwnPropertyDescriptor(obj, prop);\n    let proto;\n    return pd || (proto = getProto(obj)) && getPropertyDescriptor(proto, prop);\n}\nconst _slice = [].slice;\nfunction slice(args, start, end) {\n    return _slice.call(args, start, end);\n}\nfunction override(origFunc, overridedFactory) {\n    return overridedFactory(origFunc);\n}\nfunction assert(b) {\n    if (!b)\n        throw new Error(\"Assertion Failed\");\n}\nfunction asap$1(fn) {\n    if (_global.setImmediate)\n        setImmediate(fn);\n    else\n        setTimeout(fn, 0);\n}\nfunction arrayToObject(array, extractor) {\n    return array.reduce((result, item, i) => {\n        var nameAndValue = extractor(item, i);\n        if (nameAndValue)\n            result[nameAndValue[0]] = nameAndValue[1];\n        return result;\n    }, {});\n}\nfunction tryCatch(fn, onerror, args) {\n    try {\n        fn.apply(null, args);\n    }\n    catch (ex) {\n        onerror && onerror(ex);\n    }\n}\nfunction getByKeyPath(obj, keyPath) {\n    if (typeof keyPath === 'string' && hasOwn(obj, keyPath))\n        return obj[keyPath];\n    if (!keyPath)\n        return obj;\n    if (typeof keyPath !== 'string') {\n        var rv = [];\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            var val = getByKeyPath(obj, keyPath[i]);\n            rv.push(val);\n        }\n        return rv;\n    }\n    var period = keyPath.indexOf('.');\n    if (period !== -1) {\n        var innerObj = obj[keyPath.substr(0, period)];\n        return innerObj === undefined ? undefined : getByKeyPath(innerObj, keyPath.substr(period + 1));\n    }\n    return undefined;\n}\nfunction setByKeyPath(obj, keyPath, value) {\n    if (!obj || keyPath === undefined)\n        return;\n    if ('isFrozen' in Object && Object.isFrozen(obj))\n        return;\n    if (typeof keyPath !== 'string' && 'length' in keyPath) {\n        assert(typeof value !== 'string' && 'length' in value);\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            setByKeyPath(obj, keyPath[i], value[i]);\n        }\n    }\n    else {\n        var period = keyPath.indexOf('.');\n        if (period !== -1) {\n            var currentKeyPath = keyPath.substr(0, period);\n            var remainingKeyPath = keyPath.substr(period + 1);\n            if (remainingKeyPath === \"\")\n                if (value === undefined) {\n                    if (isArray(obj) && !isNaN(parseInt(currentKeyPath)))\n                        obj.splice(currentKeyPath, 1);\n                    else\n                        delete obj[currentKeyPath];\n                }\n                else\n                    obj[currentKeyPath] = value;\n            else {\n                var innerObj = obj[currentKeyPath];\n                if (!innerObj || !hasOwn(obj, currentKeyPath))\n                    innerObj = (obj[currentKeyPath] = {});\n                setByKeyPath(innerObj, remainingKeyPath, value);\n            }\n        }\n        else {\n            if (value === undefined) {\n                if (isArray(obj) && !isNaN(parseInt(keyPath)))\n                    obj.splice(keyPath, 1);\n                else\n                    delete obj[keyPath];\n            }\n            else\n                obj[keyPath] = value;\n        }\n    }\n}\nfunction delByKeyPath(obj, keyPath) {\n    if (typeof keyPath === 'string')\n        setByKeyPath(obj, keyPath, undefined);\n    else if ('length' in keyPath)\n        [].map.call(keyPath, function (kp) {\n            setByKeyPath(obj, kp, undefined);\n        });\n}\nfunction shallowClone(obj) {\n    var rv = {};\n    for (var m in obj) {\n        if (hasOwn(obj, m))\n            rv[m] = obj[m];\n    }\n    return rv;\n}\nconst concat = [].concat;\nfunction flatten(a) {\n    return concat.apply([], a);\n}\nconst intrinsicTypeNames = \"Array,Boolean,String,Date,RegExp,Blob,File,FileList,FileSystemFileHandle,FileSystemDirectoryHandle,ArrayBuffer,DataView,Uint8ClampedArray,ImageBitmap,ImageData,Map,Set,CryptoKey\"\n    .split(',').concat(flatten([8, 16, 32, 64].map(num => [\"Int\", \"Uint\", \"Float\"].map(t => t + num + \"Array\")))).filter(t => _global[t]);\nconst intrinsicTypes = new Set(intrinsicTypeNames.map(t => _global[t]));\nfunction cloneSimpleObjectTree(o) {\n    const rv = {};\n    for (const k in o)\n        if (hasOwn(o, k)) {\n            const v = o[k];\n            rv[k] = !v || typeof v !== 'object' || intrinsicTypes.has(v.constructor) ? v : cloneSimpleObjectTree(v);\n        }\n    return rv;\n}\nfunction objectIsEmpty(o) {\n    for (const k in o)\n        if (hasOwn(o, k))\n            return false;\n    return true;\n}\nlet circularRefs = null;\nfunction deepClone(any) {\n    circularRefs = new WeakMap();\n    const rv = innerDeepClone(any);\n    circularRefs = null;\n    return rv;\n}\nfunction innerDeepClone(x) {\n    if (!x || typeof x !== 'object')\n        return x;\n    let rv = circularRefs.get(x);\n    if (rv)\n        return rv;\n    if (isArray(x)) {\n        rv = [];\n        circularRefs.set(x, rv);\n        for (var i = 0, l = x.length; i < l; ++i) {\n            rv.push(innerDeepClone(x[i]));\n        }\n    }\n    else if (intrinsicTypes.has(x.constructor)) {\n        rv = x;\n    }\n    else {\n        const proto = getProto(x);\n        rv = proto === Object.prototype ? {} : Object.create(proto);\n        circularRefs.set(x, rv);\n        for (var prop in x) {\n            if (hasOwn(x, prop)) {\n                rv[prop] = innerDeepClone(x[prop]);\n            }\n        }\n    }\n    return rv;\n}\nconst { toString } = {};\nfunction toStringTag(o) {\n    return toString.call(o).slice(8, -1);\n}\nconst iteratorSymbol = typeof Symbol !== 'undefined' ?\n    Symbol.iterator :\n    '@@iterator';\nconst getIteratorOf = typeof iteratorSymbol === \"symbol\" ? function (x) {\n    var i;\n    return x != null && (i = x[iteratorSymbol]) && i.apply(x);\n} : function () { return null; };\nfunction delArrayItem(a, x) {\n    const i = a.indexOf(x);\n    if (i >= 0)\n        a.splice(i, 1);\n    return i >= 0;\n}\nconst NO_CHAR_ARRAY = {};\nfunction getArrayOf(arrayLike) {\n    var i, a, x, it;\n    if (arguments.length === 1) {\n        if (isArray(arrayLike))\n            return arrayLike.slice();\n        if (this === NO_CHAR_ARRAY && typeof arrayLike === 'string')\n            return [arrayLike];\n        if ((it = getIteratorOf(arrayLike))) {\n            a = [];\n            while ((x = it.next()), !x.done)\n                a.push(x.value);\n            return a;\n        }\n        if (arrayLike == null)\n            return [arrayLike];\n        i = arrayLike.length;\n        if (typeof i === 'number') {\n            a = new Array(i);\n            while (i--)\n                a[i] = arrayLike[i];\n            return a;\n        }\n        return [arrayLike];\n    }\n    i = arguments.length;\n    a = new Array(i);\n    while (i--)\n        a[i] = arguments[i];\n    return a;\n}\nconst isAsyncFunction = typeof Symbol !== 'undefined'\n    ? (fn) => fn[Symbol.toStringTag] === 'AsyncFunction'\n    : () => false;\n\nvar debug = typeof location !== 'undefined' &&\n    /^(http|https):\\/\\/(localhost|127\\.0\\.0\\.1)/.test(location.href);\nfunction setDebug(value, filter) {\n    debug = value;\n    libraryFilter = filter;\n}\nvar libraryFilter = () => true;\nconst NEEDS_THROW_FOR_STACK = !new Error(\"\").stack;\nfunction getErrorWithStack() {\n    if (NEEDS_THROW_FOR_STACK)\n        try {\n            getErrorWithStack.arguments;\n            throw new Error();\n        }\n        catch (e) {\n            return e;\n        }\n    return new Error();\n}\nfunction prettyStack(exception, numIgnoredFrames) {\n    var stack = exception.stack;\n    if (!stack)\n        return \"\";\n    numIgnoredFrames = (numIgnoredFrames || 0);\n    if (stack.indexOf(exception.name) === 0)\n        numIgnoredFrames += (exception.name + exception.message).split('\\n').length;\n    return stack.split('\\n')\n        .slice(numIgnoredFrames)\n        .filter(libraryFilter)\n        .map(frame => \"\\n\" + frame)\n        .join('');\n}\n\nvar dexieErrorNames = [\n    'Modify',\n    'Bulk',\n    'OpenFailed',\n    'VersionChange',\n    'Schema',\n    'Upgrade',\n    'InvalidTable',\n    'MissingAPI',\n    'NoSuchDatabase',\n    'InvalidArgument',\n    'SubTransaction',\n    'Unsupported',\n    'Internal',\n    'DatabaseClosed',\n    'PrematureCommit',\n    'ForeignAwait'\n];\nvar idbDomErrorNames = [\n    'Unknown',\n    'Constraint',\n    'Data',\n    'TransactionInactive',\n    'ReadOnly',\n    'Version',\n    'NotFound',\n    'InvalidState',\n    'InvalidAccess',\n    'Abort',\n    'Timeout',\n    'QuotaExceeded',\n    'Syntax',\n    'DataClone'\n];\nvar errorList = dexieErrorNames.concat(idbDomErrorNames);\nvar defaultTexts = {\n    VersionChanged: \"Database version changed by other database connection\",\n    DatabaseClosed: \"Database has been closed\",\n    Abort: \"Transaction aborted\",\n    TransactionInactive: \"Transaction has already completed or failed\",\n    MissingAPI: \"IndexedDB API missing. Please visit https://tinyurl.com/y2uuvskb\"\n};\nfunction DexieError(name, msg) {\n    this._e = getErrorWithStack();\n    this.name = name;\n    this.message = msg;\n}\nderive(DexieError).from(Error).extend({\n    stack: {\n        get: function () {\n            return this._stack ||\n                (this._stack = this.name + \": \" + this.message + prettyStack(this._e, 2));\n        }\n    },\n    toString: function () { return this.name + \": \" + this.message; }\n});\nfunction getMultiErrorMessage(msg, failures) {\n    return msg + \". Errors: \" + Object.keys(failures)\n        .map(key => failures[key].toString())\n        .filter((v, i, s) => s.indexOf(v) === i)\n        .join('\\n');\n}\nfunction ModifyError(msg, failures, successCount, failedKeys) {\n    this._e = getErrorWithStack();\n    this.failures = failures;\n    this.failedKeys = failedKeys;\n    this.successCount = successCount;\n    this.message = getMultiErrorMessage(msg, failures);\n}\nderive(ModifyError).from(DexieError);\nfunction BulkError(msg, failures) {\n    this._e = getErrorWithStack();\n    this.name = \"BulkError\";\n    this.failures = Object.keys(failures).map(pos => failures[pos]);\n    this.failuresByPos = failures;\n    this.message = getMultiErrorMessage(msg, this.failures);\n}\nderive(BulkError).from(DexieError);\nvar errnames = errorList.reduce((obj, name) => (obj[name] = name + \"Error\", obj), {});\nconst BaseException = DexieError;\nvar exceptions = errorList.reduce((obj, name) => {\n    var fullName = name + \"Error\";\n    function DexieError(msgOrInner, inner) {\n        this._e = getErrorWithStack();\n        this.name = fullName;\n        if (!msgOrInner) {\n            this.message = defaultTexts[name] || fullName;\n            this.inner = null;\n        }\n        else if (typeof msgOrInner === 'string') {\n            this.message = `${msgOrInner}${!inner ? '' : '\\n ' + inner}`;\n            this.inner = inner || null;\n        }\n        else if (typeof msgOrInner === 'object') {\n            this.message = `${msgOrInner.name} ${msgOrInner.message}`;\n            this.inner = msgOrInner;\n        }\n    }\n    derive(DexieError).from(BaseException);\n    obj[name] = DexieError;\n    return obj;\n}, {});\nexceptions.Syntax = SyntaxError;\nexceptions.Type = TypeError;\nexceptions.Range = RangeError;\nvar exceptionMap = idbDomErrorNames.reduce((obj, name) => {\n    obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\nfunction mapError(domError, message) {\n    if (!domError || domError instanceof DexieError || domError instanceof TypeError || domError instanceof SyntaxError || !domError.name || !exceptionMap[domError.name])\n        return domError;\n    var rv = new exceptionMap[domError.name](message || domError.message, domError);\n    if (\"stack\" in domError) {\n        setProp(rv, \"stack\", { get: function () {\n                return this.inner.stack;\n            } });\n    }\n    return rv;\n}\nvar fullNameExceptions = errorList.reduce((obj, name) => {\n    if ([\"Syntax\", \"Type\", \"Range\"].indexOf(name) === -1)\n        obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\nfullNameExceptions.ModifyError = ModifyError;\nfullNameExceptions.DexieError = DexieError;\nfullNameExceptions.BulkError = BulkError;\n\nfunction nop() { }\nfunction mirror(val) { return val; }\nfunction pureFunctionChain(f1, f2) {\n    if (f1 == null || f1 === mirror)\n        return f2;\n    return function (val) {\n        return f2(f1(val));\n    };\n}\nfunction callBoth(on1, on2) {\n    return function () {\n        on1.apply(this, arguments);\n        on2.apply(this, arguments);\n    };\n}\nfunction hookCreatingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res !== undefined)\n            arguments[0] = res;\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res2 !== undefined ? res2 : res;\n    };\n}\nfunction hookDeletingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        f1.apply(this, arguments);\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = this.onerror = null;\n        f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n    };\n}\nfunction hookUpdatingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function (modifications) {\n        var res = f1.apply(this, arguments);\n        extend(modifications, res);\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res === undefined ?\n            (res2 === undefined ? undefined : res2) :\n            (extend(res, res2));\n    };\n}\nfunction reverseStoppableEventChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        if (f2.apply(this, arguments) === false)\n            return false;\n        return f1.apply(this, arguments);\n    };\n}\nfunction promisableChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res && typeof res.then === 'function') {\n            var thiz = this, i = arguments.length, args = new Array(i);\n            while (i--)\n                args[i] = arguments[i];\n            return res.then(function () {\n                return f2.apply(thiz, args);\n            });\n        }\n        return f2.apply(this, arguments);\n    };\n}\n\nvar INTERNAL = {};\nconst LONG_STACKS_CLIP_LIMIT = 100,\nMAX_LONG_STACKS = 20, ZONE_ECHO_LIMIT = 100, [resolvedNativePromise, nativePromiseProto, resolvedGlobalPromise] = typeof Promise === 'undefined' ?\n    [] :\n    (() => {\n        let globalP = Promise.resolve();\n        if (typeof crypto === 'undefined' || !crypto.subtle)\n            return [globalP, getProto(globalP), globalP];\n        const nativeP = crypto.subtle.digest(\"SHA-512\", new Uint8Array([0]));\n        return [\n            nativeP,\n            getProto(nativeP),\n            globalP\n        ];\n    })(), nativePromiseThen = nativePromiseProto && nativePromiseProto.then;\nconst NativePromise = resolvedNativePromise && resolvedNativePromise.constructor;\nconst patchGlobalPromise = !!resolvedGlobalPromise;\nvar stack_being_generated = false;\nfunction schedulePhysicalTick() {\n    queueMicrotask(physicalTick);\n}\nvar asap = function (callback, args) {\n    microtickQueue.push([callback, args]);\n    if (needsNewPhysicalTick) {\n        schedulePhysicalTick();\n        needsNewPhysicalTick = false;\n    }\n};\nvar isOutsideMicroTick = true,\nneedsNewPhysicalTick = true,\nunhandledErrors = [],\nrejectingErrors = [],\ncurrentFulfiller = null, rejectionMapper = mirror;\nvar globalPSD = {\n    id: 'global',\n    global: true,\n    ref: 0,\n    unhandleds: [],\n    onunhandled: nop,\n    pgp: false,\n    env: {},\n    finalize: nop\n};\nvar PSD = globalPSD;\nvar microtickQueue = [];\nvar numScheduledCalls = 0;\nvar tickFinalizers = [];\nfunction DexiePromise(fn) {\n    if (typeof this !== 'object')\n        throw new TypeError('Promises must be constructed via new');\n    this._listeners = [];\n    this._lib = false;\n    var psd = (this._PSD = PSD);\n    if (debug) {\n        this._stackHolder = getErrorWithStack();\n        this._prev = null;\n        this._numPrev = 0;\n    }\n    if (typeof fn !== 'function') {\n        if (fn !== INTERNAL)\n            throw new TypeError('Not a function');\n        this._state = arguments[1];\n        this._value = arguments[2];\n        if (this._state === false)\n            handleRejection(this, this._value);\n        return;\n    }\n    this._state = null;\n    this._value = null;\n    ++psd.ref;\n    executePromiseTask(this, fn);\n}\nconst thenProp = {\n    get: function () {\n        var psd = PSD, microTaskId = totalEchoes;\n        function then(onFulfilled, onRejected) {\n            var possibleAwait = !psd.global && (psd !== PSD || microTaskId !== totalEchoes);\n            const cleanup = possibleAwait && !decrementExpectedAwaits();\n            var rv = new DexiePromise((resolve, reject) => {\n                propagateToListener(this, new Listener(nativeAwaitCompatibleWrap(onFulfilled, psd, possibleAwait, cleanup), nativeAwaitCompatibleWrap(onRejected, psd, possibleAwait, cleanup), resolve, reject, psd));\n            });\n            debug && linkToPreviousPromise(rv, this);\n            return rv;\n        }\n        then.prototype = INTERNAL;\n        return then;\n    },\n    set: function (value) {\n        setProp(this, 'then', value && value.prototype === INTERNAL ?\n            thenProp :\n            {\n                get: function () {\n                    return value;\n                },\n                set: thenProp.set\n            });\n    }\n};\nprops(DexiePromise.prototype, {\n    then: thenProp,\n    _then: function (onFulfilled, onRejected) {\n        propagateToListener(this, new Listener(null, null, onFulfilled, onRejected, PSD));\n    },\n    catch: function (onRejected) {\n        if (arguments.length === 1)\n            return this.then(null, onRejected);\n        var type = arguments[0], handler = arguments[1];\n        return typeof type === 'function' ? this.then(null, err =>\n        err instanceof type ? handler(err) : PromiseReject(err))\n            : this.then(null, err =>\n            err && err.name === type ? handler(err) : PromiseReject(err));\n    },\n    finally: function (onFinally) {\n        return this.then(value => {\n            onFinally();\n            return value;\n        }, err => {\n            onFinally();\n            return PromiseReject(err);\n        });\n    },\n    stack: {\n        get: function () {\n            if (this._stack)\n                return this._stack;\n            try {\n                stack_being_generated = true;\n                var stacks = getStack(this, [], MAX_LONG_STACKS);\n                var stack = stacks.join(\"\\nFrom previous: \");\n                if (this._state !== null)\n                    this._stack = stack;\n                return stack;\n            }\n            finally {\n                stack_being_generated = false;\n            }\n        }\n    },\n    timeout: function (ms, msg) {\n        return ms < Infinity ?\n            new DexiePromise((resolve, reject) => {\n                var handle = setTimeout(() => reject(new exceptions.Timeout(msg)), ms);\n                this.then(resolve, reject).finally(clearTimeout.bind(null, handle));\n            }) : this;\n    }\n});\nif (typeof Symbol !== 'undefined' && Symbol.toStringTag)\n    setProp(DexiePromise.prototype, Symbol.toStringTag, 'Dexie.Promise');\nglobalPSD.env = snapShot();\nfunction Listener(onFulfilled, onRejected, resolve, reject, zone) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.resolve = resolve;\n    this.reject = reject;\n    this.psd = zone;\n}\nprops(DexiePromise, {\n    all: function () {\n        var values = getArrayOf.apply(null, arguments)\n            .map(onPossibleParallellAsync);\n        return new DexiePromise(function (resolve, reject) {\n            if (values.length === 0)\n                resolve([]);\n            var remaining = values.length;\n            values.forEach((a, i) => DexiePromise.resolve(a).then(x => {\n                values[i] = x;\n                if (!--remaining)\n                    resolve(values);\n            }, reject));\n        });\n    },\n    resolve: value => {\n        if (value instanceof DexiePromise)\n            return value;\n        if (value && typeof value.then === 'function')\n            return new DexiePromise((resolve, reject) => {\n                value.then(resolve, reject);\n            });\n        var rv = new DexiePromise(INTERNAL, true, value);\n        linkToPreviousPromise(rv, currentFulfiller);\n        return rv;\n    },\n    reject: PromiseReject,\n    race: function () {\n        var values = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n        return new DexiePromise((resolve, reject) => {\n            values.map(value => DexiePromise.resolve(value).then(resolve, reject));\n        });\n    },\n    PSD: {\n        get: () => PSD,\n        set: value => PSD = value\n    },\n    totalEchoes: { get: () => totalEchoes },\n    newPSD: newScope,\n    usePSD: usePSD,\n    scheduler: {\n        get: () => asap,\n        set: value => { asap = value; }\n    },\n    rejectionMapper: {\n        get: () => rejectionMapper,\n        set: value => { rejectionMapper = value; }\n    },\n    follow: (fn, zoneProps) => {\n        return new DexiePromise((resolve, reject) => {\n            return newScope((resolve, reject) => {\n                var psd = PSD;\n                psd.unhandleds = [];\n                psd.onunhandled = reject;\n                psd.finalize = callBoth(function () {\n                    run_at_end_of_this_or_next_physical_tick(() => {\n                        this.unhandleds.length === 0 ? resolve() : reject(this.unhandleds[0]);\n                    });\n                }, psd.finalize);\n                fn();\n            }, zoneProps, resolve, reject);\n        });\n    }\n});\nif (NativePromise) {\n    if (NativePromise.allSettled)\n        setProp(DexiePromise, \"allSettled\", function () {\n            const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n            return new DexiePromise(resolve => {\n                if (possiblePromises.length === 0)\n                    resolve([]);\n                let remaining = possiblePromises.length;\n                const results = new Array(remaining);\n                possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => results[i] = { status: \"fulfilled\", value }, reason => results[i] = { status: \"rejected\", reason })\n                    .then(() => --remaining || resolve(results)));\n            });\n        });\n    if (NativePromise.any && typeof AggregateError !== 'undefined')\n        setProp(DexiePromise, \"any\", function () {\n            const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n            return new DexiePromise((resolve, reject) => {\n                if (possiblePromises.length === 0)\n                    reject(new AggregateError([]));\n                let remaining = possiblePromises.length;\n                const failures = new Array(remaining);\n                possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => resolve(value), failure => {\n                    failures[i] = failure;\n                    if (!--remaining)\n                        reject(new AggregateError(failures));\n                }));\n            });\n        });\n}\nfunction executePromiseTask(promise, fn) {\n    try {\n        fn(value => {\n            if (promise._state !== null)\n                return;\n            if (value === promise)\n                throw new TypeError('A promise cannot be resolved with itself.');\n            var shouldExecuteTick = promise._lib && beginMicroTickScope();\n            if (value && typeof value.then === 'function') {\n                executePromiseTask(promise, (resolve, reject) => {\n                    value instanceof DexiePromise ?\n                        value._then(resolve, reject) :\n                        value.then(resolve, reject);\n                });\n            }\n            else {\n                promise._state = true;\n                promise._value = value;\n                propagateAllListeners(promise);\n            }\n            if (shouldExecuteTick)\n                endMicroTickScope();\n        }, handleRejection.bind(null, promise));\n    }\n    catch (ex) {\n        handleRejection(promise, ex);\n    }\n}\nfunction handleRejection(promise, reason) {\n    rejectingErrors.push(reason);\n    if (promise._state !== null)\n        return;\n    var shouldExecuteTick = promise._lib && beginMicroTickScope();\n    reason = rejectionMapper(reason);\n    promise._state = false;\n    promise._value = reason;\n    debug && reason !== null && typeof reason === 'object' && !reason._promise && tryCatch(() => {\n        var origProp = getPropertyDescriptor(reason, \"stack\");\n        reason._promise = promise;\n        setProp(reason, \"stack\", {\n            get: () => stack_being_generated ?\n                origProp && (origProp.get ?\n                    origProp.get.apply(reason) :\n                    origProp.value) :\n                promise.stack\n        });\n    });\n    addPossiblyUnhandledError(promise);\n    propagateAllListeners(promise);\n    if (shouldExecuteTick)\n        endMicroTickScope();\n}\nfunction propagateAllListeners(promise) {\n    var listeners = promise._listeners;\n    promise._listeners = [];\n    for (var i = 0, len = listeners.length; i < len; ++i) {\n        propagateToListener(promise, listeners[i]);\n    }\n    var psd = promise._PSD;\n    --psd.ref || psd.finalize();\n    if (numScheduledCalls === 0) {\n        ++numScheduledCalls;\n        asap(() => {\n            if (--numScheduledCalls === 0)\n                finalizePhysicalTick();\n        }, []);\n    }\n}\nfunction propagateToListener(promise, listener) {\n    if (promise._state === null) {\n        promise._listeners.push(listener);\n        return;\n    }\n    var cb = promise._state ? listener.onFulfilled : listener.onRejected;\n    if (cb === null) {\n        return (promise._state ? listener.resolve : listener.reject)(promise._value);\n    }\n    ++listener.psd.ref;\n    ++numScheduledCalls;\n    asap(callListener, [cb, promise, listener]);\n}\nfunction callListener(cb, promise, listener) {\n    try {\n        currentFulfiller = promise;\n        var ret, value = promise._value;\n        if (promise._state) {\n            ret = cb(value);\n        }\n        else {\n            if (rejectingErrors.length)\n                rejectingErrors = [];\n            ret = cb(value);\n            if (rejectingErrors.indexOf(value) === -1)\n                markErrorAsHandled(promise);\n        }\n        listener.resolve(ret);\n    }\n    catch (e) {\n        listener.reject(e);\n    }\n    finally {\n        currentFulfiller = null;\n        if (--numScheduledCalls === 0)\n            finalizePhysicalTick();\n        --listener.psd.ref || listener.psd.finalize();\n    }\n}\nfunction getStack(promise, stacks, limit) {\n    if (stacks.length === limit)\n        return stacks;\n    var stack = \"\";\n    if (promise._state === false) {\n        var failure = promise._value, errorName, message;\n        if (failure != null) {\n            errorName = failure.name || \"Error\";\n            message = failure.message || failure;\n            stack = prettyStack(failure, 0);\n        }\n        else {\n            errorName = failure;\n            message = \"\";\n        }\n        stacks.push(errorName + (message ? \": \" + message : \"\") + stack);\n    }\n    if (debug) {\n        stack = prettyStack(promise._stackHolder, 2);\n        if (stack && stacks.indexOf(stack) === -1)\n            stacks.push(stack);\n        if (promise._prev)\n            getStack(promise._prev, stacks, limit);\n    }\n    return stacks;\n}\nfunction linkToPreviousPromise(promise, prev) {\n    var numPrev = prev ? prev._numPrev + 1 : 0;\n    if (numPrev < LONG_STACKS_CLIP_LIMIT) {\n        promise._prev = prev;\n        promise._numPrev = numPrev;\n    }\n}\nfunction physicalTick() {\n    usePSD(globalPSD, () => {\n        beginMicroTickScope() && endMicroTickScope();\n    });\n}\nfunction beginMicroTickScope() {\n    var wasRootExec = isOutsideMicroTick;\n    isOutsideMicroTick = false;\n    needsNewPhysicalTick = false;\n    return wasRootExec;\n}\nfunction endMicroTickScope() {\n    var callbacks, i, l;\n    do {\n        while (microtickQueue.length > 0) {\n            callbacks = microtickQueue;\n            microtickQueue = [];\n            l = callbacks.length;\n            for (i = 0; i < l; ++i) {\n                var item = callbacks[i];\n                item[0].apply(null, item[1]);\n            }\n        }\n    } while (microtickQueue.length > 0);\n    isOutsideMicroTick = true;\n    needsNewPhysicalTick = true;\n}\nfunction finalizePhysicalTick() {\n    var unhandledErrs = unhandledErrors;\n    unhandledErrors = [];\n    unhandledErrs.forEach(p => {\n        p._PSD.onunhandled.call(null, p._value, p);\n    });\n    var finalizers = tickFinalizers.slice(0);\n    var i = finalizers.length;\n    while (i)\n        finalizers[--i]();\n}\nfunction run_at_end_of_this_or_next_physical_tick(fn) {\n    function finalizer() {\n        fn();\n        tickFinalizers.splice(tickFinalizers.indexOf(finalizer), 1);\n    }\n    tickFinalizers.push(finalizer);\n    ++numScheduledCalls;\n    asap(() => {\n        if (--numScheduledCalls === 0)\n            finalizePhysicalTick();\n    }, []);\n}\nfunction addPossiblyUnhandledError(promise) {\n    if (!unhandledErrors.some(p => p._value === promise._value))\n        unhandledErrors.push(promise);\n}\nfunction markErrorAsHandled(promise) {\n    var i = unhandledErrors.length;\n    while (i)\n        if (unhandledErrors[--i]._value === promise._value) {\n            unhandledErrors.splice(i, 1);\n            return;\n        }\n}\nfunction PromiseReject(reason) {\n    return new DexiePromise(INTERNAL, false, reason);\n}\nfunction wrap(fn, errorCatcher) {\n    var psd = PSD;\n    return function () {\n        var wasRootExec = beginMicroTickScope(), outerScope = PSD;\n        try {\n            switchToZone(psd, true);\n            return fn.apply(this, arguments);\n        }\n        catch (e) {\n            errorCatcher && errorCatcher(e);\n        }\n        finally {\n            switchToZone(outerScope, false);\n            if (wasRootExec)\n                endMicroTickScope();\n        }\n    };\n}\nconst task = { awaits: 0, echoes: 0, id: 0 };\nvar taskCounter = 0;\nvar zoneStack = [];\nvar zoneEchoes = 0;\nvar totalEchoes = 0;\nvar zone_id_counter = 0;\nfunction newScope(fn, props, a1, a2) {\n    var parent = PSD, psd = Object.create(parent);\n    psd.parent = parent;\n    psd.ref = 0;\n    psd.global = false;\n    psd.id = ++zone_id_counter;\n    var globalEnv = globalPSD.env;\n    psd.env = patchGlobalPromise ? {\n        Promise: DexiePromise,\n        PromiseProp: { value: DexiePromise, configurable: true, writable: true },\n        all: DexiePromise.all,\n        race: DexiePromise.race,\n        allSettled: DexiePromise.allSettled,\n        any: DexiePromise.any,\n        resolve: DexiePromise.resolve,\n        reject: DexiePromise.reject,\n        nthen: getPatchedPromiseThen(globalEnv.nthen, psd),\n        gthen: getPatchedPromiseThen(globalEnv.gthen, psd)\n    } : {};\n    if (props)\n        extend(psd, props);\n    ++parent.ref;\n    psd.finalize = function () {\n        --this.parent.ref || this.parent.finalize();\n    };\n    var rv = usePSD(psd, fn, a1, a2);\n    if (psd.ref === 0)\n        psd.finalize();\n    return rv;\n}\nfunction incrementExpectedAwaits() {\n    if (!task.id)\n        task.id = ++taskCounter;\n    ++task.awaits;\n    task.echoes += ZONE_ECHO_LIMIT;\n    return task.id;\n}\nfunction decrementExpectedAwaits() {\n    if (!task.awaits)\n        return false;\n    if (--task.awaits === 0)\n        task.id = 0;\n    task.echoes = task.awaits * ZONE_ECHO_LIMIT;\n    return true;\n}\nif (('' + nativePromiseThen).indexOf('[native code]') === -1) {\n    incrementExpectedAwaits = decrementExpectedAwaits = nop;\n}\nfunction onPossibleParallellAsync(possiblePromise) {\n    if (task.echoes && possiblePromise && possiblePromise.constructor === NativePromise) {\n        incrementExpectedAwaits();\n        return possiblePromise.then(x => {\n            decrementExpectedAwaits();\n            return x;\n        }, e => {\n            decrementExpectedAwaits();\n            return rejection(e);\n        });\n    }\n    return possiblePromise;\n}\nfunction zoneEnterEcho(targetZone) {\n    ++totalEchoes;\n    if (!task.echoes || --task.echoes === 0) {\n        task.echoes = task.id = 0;\n    }\n    zoneStack.push(PSD);\n    switchToZone(targetZone, true);\n}\nfunction zoneLeaveEcho() {\n    var zone = zoneStack[zoneStack.length - 1];\n    zoneStack.pop();\n    switchToZone(zone, false);\n}\nfunction switchToZone(targetZone, bEnteringZone) {\n    var currentZone = PSD;\n    if (bEnteringZone ? task.echoes && (!zoneEchoes++ || targetZone !== PSD) : zoneEchoes && (!--zoneEchoes || targetZone !== PSD)) {\n        queueMicrotask(bEnteringZone ? zoneEnterEcho.bind(null, targetZone) : zoneLeaveEcho);\n    }\n    if (targetZone === PSD)\n        return;\n    PSD = targetZone;\n    if (currentZone === globalPSD)\n        globalPSD.env = snapShot();\n    if (patchGlobalPromise) {\n        var GlobalPromise = globalPSD.env.Promise;\n        var targetEnv = targetZone.env;\n        nativePromiseProto.then = targetEnv.nthen;\n        GlobalPromise.prototype.then = targetEnv.gthen;\n        if (currentZone.global || targetZone.global) {\n            Object.defineProperty(_global, 'Promise', targetEnv.PromiseProp);\n            GlobalPromise.all = targetEnv.all;\n            GlobalPromise.race = targetEnv.race;\n            GlobalPromise.resolve = targetEnv.resolve;\n            GlobalPromise.reject = targetEnv.reject;\n            if (targetEnv.allSettled)\n                GlobalPromise.allSettled = targetEnv.allSettled;\n            if (targetEnv.any)\n                GlobalPromise.any = targetEnv.any;\n        }\n    }\n}\nfunction snapShot() {\n    var GlobalPromise = _global.Promise;\n    return patchGlobalPromise ? {\n        Promise: GlobalPromise,\n        PromiseProp: Object.getOwnPropertyDescriptor(_global, \"Promise\"),\n        all: GlobalPromise.all,\n        race: GlobalPromise.race,\n        allSettled: GlobalPromise.allSettled,\n        any: GlobalPromise.any,\n        resolve: GlobalPromise.resolve,\n        reject: GlobalPromise.reject,\n        nthen: nativePromiseProto.then,\n        gthen: GlobalPromise.prototype.then\n    } : {};\n}\nfunction usePSD(psd, fn, a1, a2, a3) {\n    var outerScope = PSD;\n    try {\n        switchToZone(psd, true);\n        return fn(a1, a2, a3);\n    }\n    finally {\n        switchToZone(outerScope, false);\n    }\n}\nfunction nativeAwaitCompatibleWrap(fn, zone, possibleAwait, cleanup) {\n    return typeof fn !== 'function' ? fn : function () {\n        var outerZone = PSD;\n        if (possibleAwait)\n            incrementExpectedAwaits();\n        switchToZone(zone, true);\n        try {\n            return fn.apply(this, arguments);\n        }\n        finally {\n            switchToZone(outerZone, false);\n            if (cleanup)\n                queueMicrotask(decrementExpectedAwaits);\n        }\n    };\n}\nfunction getPatchedPromiseThen(origThen, zone) {\n    return function (onResolved, onRejected) {\n        return origThen.call(this, nativeAwaitCompatibleWrap(onResolved, zone), nativeAwaitCompatibleWrap(onRejected, zone));\n    };\n}\nvar rejection = DexiePromise.reject;\n\nfunction tempTransaction(db, mode, storeNames, fn) {\n    if (!db.idbdb || (!db._state.openComplete && (!PSD.letThrough && !db._vip))) {\n        if (db._state.openComplete) {\n            return rejection(new exceptions.DatabaseClosed(db._state.dbOpenError));\n        }\n        if (!db._state.isBeingOpened) {\n            if (!db._options.autoOpen)\n                return rejection(new exceptions.DatabaseClosed());\n            db.open().catch(nop);\n        }\n        return db._state.dbReadyPromise.then(() => tempTransaction(db, mode, storeNames, fn));\n    }\n    else {\n        var trans = db._createTransaction(mode, storeNames, db._dbSchema);\n        try {\n            trans.create();\n            db._state.PR1398_maxLoop = 3;\n        }\n        catch (ex) {\n            if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                console.warn('Dexie: Need to reopen db');\n                db._close();\n                return db.open().then(() => tempTransaction(db, mode, storeNames, fn));\n            }\n            return rejection(ex);\n        }\n        return trans._promise(mode, (resolve, reject) => {\n            return newScope(() => {\n                PSD.trans = trans;\n                return fn(resolve, reject, trans);\n            });\n        }).then(result => {\n            if (mode === 'readwrite')\n                try {\n                    trans.idbtrans.commit();\n                }\n                catch (_a) { }\n            return mode === 'readonly' ? result : trans._completion.then(() => result);\n        });\n    }\n}\n\nconst DEXIE_VERSION = '4.0.1-alpha.27';\nconst maxString = String.fromCharCode(65535);\nconst minKey = -Infinity;\nconst INVALID_KEY_ARGUMENT = \"Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.\";\nconst STRING_EXPECTED = \"String expected.\";\nconst connections = [];\nconst isIEOrEdge = typeof navigator !== 'undefined' && /(MSIE|Trident|Edge)/.test(navigator.userAgent);\nconst hasIEDeleteObjectStoreBug = isIEOrEdge;\nconst hangsOnDeleteLargeKeyRange = isIEOrEdge;\nconst dexieStackFrameFilter = frame => !/(dexie\\.js|dexie\\.min\\.js)/.test(frame);\nconst DBNAMES_DB = '__dbnames';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\nfunction combine(filter1, filter2) {\n    return filter1 ?\n        filter2 ?\n            function () { return filter1.apply(this, arguments) && filter2.apply(this, arguments); } :\n            filter1 :\n        filter2;\n}\n\nconst AnyRange = {\n    type: 3 ,\n    lower: -Infinity,\n    lowerOpen: false,\n    upper: [[]],\n    upperOpen: false\n};\n\nfunction workaroundForUndefinedPrimKey(keyPath) {\n    return typeof keyPath === \"string\" && !/\\./.test(keyPath)\n        ? (obj) => {\n            if (obj[keyPath] === undefined && (keyPath in obj)) {\n                obj = deepClone(obj);\n                delete obj[keyPath];\n            }\n            return obj;\n        }\n        : (obj) => obj;\n}\n\nfunction Entity() {\n    throw exceptions.Type();\n}\n\nfunction cmp(a, b) {\n    try {\n        const ta = type(a);\n        const tb = type(b);\n        if (ta !== tb) {\n            if (ta === 'Array')\n                return 1;\n            if (tb === 'Array')\n                return -1;\n            if (ta === 'binary')\n                return 1;\n            if (tb === 'binary')\n                return -1;\n            if (ta === 'string')\n                return 1;\n            if (tb === 'string')\n                return -1;\n            if (ta === 'Date')\n                return 1;\n            if (tb !== 'Date')\n                return NaN;\n            return -1;\n        }\n        switch (ta) {\n            case 'number':\n            case 'Date':\n            case 'string':\n                return a > b ? 1 : a < b ? -1 : 0;\n            case 'binary': {\n                return compareUint8Arrays(getUint8Array(a), getUint8Array(b));\n            }\n            case 'Array':\n                return compareArrays(a, b);\n        }\n    }\n    catch (_a) { }\n    return NaN;\n}\nfunction compareArrays(a, b) {\n    const al = a.length;\n    const bl = b.length;\n    const l = al < bl ? al : bl;\n    for (let i = 0; i < l; ++i) {\n        const res = cmp(a[i], b[i]);\n        if (res !== 0)\n            return res;\n    }\n    return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction compareUint8Arrays(a, b) {\n    const al = a.length;\n    const bl = b.length;\n    const l = al < bl ? al : bl;\n    for (let i = 0; i < l; ++i) {\n        if (a[i] !== b[i])\n            return a[i] < b[i] ? -1 : 1;\n    }\n    return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction type(x) {\n    const t = typeof x;\n    if (t !== 'object')\n        return t;\n    if (ArrayBuffer.isView(x))\n        return 'binary';\n    const tsTag = toStringTag(x);\n    return tsTag === 'ArrayBuffer' ? 'binary' : tsTag;\n}\nfunction getUint8Array(a) {\n    if (a instanceof Uint8Array)\n        return a;\n    if (ArrayBuffer.isView(a))\n        return new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    return new Uint8Array(a);\n}\n\nclass Table {\n    _trans(mode, fn, writeLocked) {\n        const trans = this._tx || PSD.trans;\n        const tableName = this.name;\n        function checkTableInTransaction(resolve, reject, trans) {\n            if (!trans.schema[tableName])\n                throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n            return fn(trans.idbtrans, trans);\n        }\n        const wasRootExec = beginMicroTickScope();\n        try {\n            return trans && trans.db._novip === this.db._novip ?\n                trans === PSD.trans ?\n                    trans._promise(mode, checkTableInTransaction, writeLocked) :\n                    newScope(() => trans._promise(mode, checkTableInTransaction, writeLocked), { trans: trans, transless: PSD.transless || PSD }) :\n                tempTransaction(this.db, mode, [this.name], checkTableInTransaction);\n        }\n        finally {\n            if (wasRootExec)\n                endMicroTickScope();\n        }\n    }\n    get(keyOrCrit, cb) {\n        if (keyOrCrit && keyOrCrit.constructor === Object)\n            return this.where(keyOrCrit).first(cb);\n        return this._trans('readonly', (trans) => {\n            return this.core.get({ trans, key: keyOrCrit })\n                .then(res => this.hook.reading.fire(res));\n        }).then(cb);\n    }\n    where(indexOrCrit) {\n        if (typeof indexOrCrit === 'string')\n            return new this.db.WhereClause(this, indexOrCrit);\n        if (isArray(indexOrCrit))\n            return new this.db.WhereClause(this, `[${indexOrCrit.join('+')}]`);\n        const keyPaths = keys(indexOrCrit);\n        if (keyPaths.length === 1)\n            return this\n                .where(keyPaths[0])\n                .equals(indexOrCrit[keyPaths[0]]);\n        const compoundIndex = this.schema.indexes.concat(this.schema.primKey).filter(ix => {\n            if (ix.compound &&\n                keyPaths.every(keyPath => ix.keyPath.indexOf(keyPath) >= 0)) {\n                for (let i = 0; i < keyPaths.length; ++i) {\n                    if (keyPaths.indexOf(ix.keyPath[i]) === -1)\n                        return false;\n                }\n                return true;\n            }\n            return false;\n        }).sort((a, b) => a.keyPath.length - b.keyPath.length)[0];\n        if (compoundIndex && this.db._maxKey !== maxString) {\n            const keyPathsInValidOrder = compoundIndex.keyPath.slice(0, keyPaths.length);\n            return this\n                .where(keyPathsInValidOrder)\n                .equals(keyPathsInValidOrder.map(kp => indexOrCrit[kp]));\n        }\n        if (!compoundIndex && debug)\n            console.warn(`The query ${JSON.stringify(indexOrCrit)} on ${this.name} would benefit of a ` +\n                `compound index [${keyPaths.join('+')}]`);\n        const { idxByName } = this.schema;\n        const idb = this.db._deps.indexedDB;\n        function equals(a, b) {\n            return idb.cmp(a, b) === 0;\n        }\n        const [idx, filterFunction] = keyPaths.reduce(([prevIndex, prevFilterFn], keyPath) => {\n            const index = idxByName[keyPath];\n            const value = indexOrCrit[keyPath];\n            return [\n                prevIndex || index,\n                prevIndex || !index ?\n                    combine(prevFilterFn, index && index.multi ?\n                        x => {\n                            const prop = getByKeyPath(x, keyPath);\n                            return isArray(prop) && prop.some(item => equals(value, item));\n                        } : x => equals(value, getByKeyPath(x, keyPath)))\n                    : prevFilterFn\n            ];\n        }, [null, null]);\n        return idx ?\n            this.where(idx.name).equals(indexOrCrit[idx.keyPath])\n                .filter(filterFunction) :\n            compoundIndex ?\n                this.filter(filterFunction) :\n                this.where(keyPaths).equals('');\n    }\n    filter(filterFunction) {\n        return this.toCollection().and(filterFunction);\n    }\n    count(thenShortcut) {\n        return this.toCollection().count(thenShortcut);\n    }\n    offset(offset) {\n        return this.toCollection().offset(offset);\n    }\n    limit(numRows) {\n        return this.toCollection().limit(numRows);\n    }\n    each(callback) {\n        return this.toCollection().each(callback);\n    }\n    toArray(thenShortcut) {\n        return this.toCollection().toArray(thenShortcut);\n    }\n    toCollection() {\n        return new this.db.Collection(new this.db.WhereClause(this));\n    }\n    orderBy(index) {\n        return new this.db.Collection(new this.db.WhereClause(this, isArray(index) ?\n            `[${index.join('+')}]` :\n            index));\n    }\n    reverse() {\n        return this.toCollection().reverse();\n    }\n    mapToClass(constructor) {\n        const { db, name: tableName } = this;\n        this.schema.mappedClass = constructor;\n        if (constructor.prototype instanceof Entity) {\n            constructor = class extends constructor {\n                get db() { return db; }\n                table() { return tableName; }\n            };\n        }\n        const inheritedProps = new Set();\n        for (let proto = constructor.prototype; proto; proto = getProto(proto)) {\n            Object.getOwnPropertyNames(proto).forEach(propName => inheritedProps.add(propName));\n        }\n        const readHook = (obj) => {\n            if (!obj)\n                return obj;\n            const res = Object.create(constructor.prototype);\n            for (let m in obj)\n                if (!inheritedProps.has(m))\n                    try {\n                        res[m] = obj[m];\n                    }\n                    catch (_) { }\n            return res;\n        };\n        if (this.schema.readHook) {\n            this.hook.reading.unsubscribe(this.schema.readHook);\n        }\n        this.schema.readHook = readHook;\n        this.hook(\"reading\", readHook);\n        return constructor;\n    }\n    defineClass() {\n        function Class(content) {\n            extend(this, content);\n        }\n        return this.mapToClass(Class);\n    }\n    add(obj, key) {\n        const { auto, keyPath } = this.schema.primKey;\n        let objToAdd = obj;\n        if (keyPath && auto) {\n            objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n        }\n        return this._trans('readwrite', trans => {\n            return this.core.mutate({ trans, type: 'add', keys: key != null ? [key] : null, values: [objToAdd] });\n        }).then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult)\n            .then(lastResult => {\n            if (keyPath) {\n                try {\n                    setByKeyPath(obj, keyPath, lastResult);\n                }\n                catch (_) { }\n            }\n            return lastResult;\n        });\n    }\n    update(keyOrObject, modifications) {\n        if (typeof keyOrObject === 'object' && !isArray(keyOrObject)) {\n            const key = getByKeyPath(keyOrObject, this.schema.primKey.keyPath);\n            if (key === undefined)\n                return rejection(new exceptions.InvalidArgument(\"Given object does not contain its primary key\"));\n            return this.where(\":id\").equals(key).modify(modifications);\n        }\n        else {\n            return this.where(\":id\").equals(keyOrObject).modify(modifications);\n        }\n    }\n    put(obj, key) {\n        const { auto, keyPath } = this.schema.primKey;\n        let objToAdd = obj;\n        if (keyPath && auto) {\n            objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n        }\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'put', values: [objToAdd], keys: key != null ? [key] : null }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult)\n            .then(lastResult => {\n            if (keyPath) {\n                try {\n                    setByKeyPath(obj, keyPath, lastResult);\n                }\n                catch (_) { }\n            }\n            return lastResult;\n        });\n    }\n    delete(key) {\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'delete', keys: [key] }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n    }\n    clear() {\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'deleteRange', range: AnyRange }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n    }\n    bulkGet(keys) {\n        return this._trans('readonly', trans => {\n            return this.core.getMany({\n                keys,\n                trans\n            }).then(result => result.map(res => this.hook.reading.fire(res)));\n        });\n    }\n    bulkAdd(objects, keysOrOptions, options) {\n        const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n        options = options || (keys ? undefined : keysOrOptions);\n        const wantResults = options ? options.allKeys : undefined;\n        return this._trans('readwrite', trans => {\n            const { auto, keyPath } = this.schema.primKey;\n            if (keyPath && keys)\n                throw new exceptions.InvalidArgument(\"bulkAdd(): keys argument invalid on tables with inbound keys\");\n            if (keys && keys.length !== objects.length)\n                throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n            const numObjects = objects.length;\n            let objectsToAdd = keyPath && auto ?\n                objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                objects;\n            return this.core.mutate({ trans, type: 'add', keys: keys, values: objectsToAdd, wantResults })\n                .then(({ numFailures, results, lastResult, failures }) => {\n                const result = wantResults ? results : lastResult;\n                if (numFailures === 0)\n                    return result;\n                throw new BulkError(`${this.name}.bulkAdd(): ${numFailures} of ${numObjects} operations failed`, failures);\n            });\n        });\n    }\n    bulkPut(objects, keysOrOptions, options) {\n        const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n        options = options || (keys ? undefined : keysOrOptions);\n        const wantResults = options ? options.allKeys : undefined;\n        return this._trans('readwrite', trans => {\n            const { auto, keyPath } = this.schema.primKey;\n            if (keyPath && keys)\n                throw new exceptions.InvalidArgument(\"bulkPut(): keys argument invalid on tables with inbound keys\");\n            if (keys && keys.length !== objects.length)\n                throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n            const numObjects = objects.length;\n            let objectsToPut = keyPath && auto ?\n                objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                objects;\n            return this.core.mutate({ trans, type: 'put', keys: keys, values: objectsToPut, wantResults })\n                .then(({ numFailures, results, lastResult, failures }) => {\n                const result = wantResults ? results : lastResult;\n                if (numFailures === 0)\n                    return result;\n                throw new BulkError(`${this.name}.bulkPut(): ${numFailures} of ${numObjects} operations failed`, failures);\n            });\n        });\n    }\n    bulkUpdate(keysAndChanges) {\n        const coreTable = this.core;\n        const keys = keysAndChanges.map((entry) => entry.key);\n        const changeSpecs = keysAndChanges.map((entry) => entry.changes);\n        const offsetMap = [];\n        return this._trans('readwrite', (trans) => {\n            return coreTable.getMany({ trans, keys, cache: 'clone' }).then((objs) => {\n                const resultKeys = [];\n                const resultObjs = [];\n                keysAndChanges.forEach(({ key, changes }, idx) => {\n                    const obj = objs[idx];\n                    if (obj) {\n                        for (const keyPath of Object.keys(changes)) {\n                            const value = changes[keyPath];\n                            if (keyPath === this.schema.primKey.keyPath) {\n                                if (cmp(value, key) !== 0) {\n                                    throw new exceptions.Constraint(`Cannot update primary key in bulkUpdate()`);\n                                }\n                            }\n                            else {\n                                setByKeyPath(obj, keyPath, value);\n                            }\n                        }\n                        offsetMap.push(idx);\n                        resultKeys.push(key);\n                        resultObjs.push(obj);\n                    }\n                });\n                const numEntries = resultKeys.length;\n                return coreTable\n                    .mutate({\n                    trans,\n                    type: 'put',\n                    keys: resultKeys,\n                    values: resultObjs,\n                    updates: {\n                        keys,\n                        changeSpecs\n                    }\n                })\n                    .then(({ numFailures, failures }) => {\n                    if (numFailures === 0)\n                        return numEntries;\n                    for (const offset of Object.keys(failures)) {\n                        const mappedOffset = offsetMap[Number(offset)];\n                        if (mappedOffset != null) {\n                            const failure = failures[offset];\n                            delete failures[offset];\n                            failures[mappedOffset] = failure;\n                        }\n                    }\n                    throw new BulkError(`${this.name}.bulkUpdate(): ${numFailures} of ${numEntries} operations failed`, failures);\n                });\n            });\n        });\n    }\n    bulkDelete(keys) {\n        const numKeys = keys.length;\n        return this._trans('readwrite', trans => {\n            return this.core.mutate({ trans, type: 'delete', keys: keys });\n        }).then(({ numFailures, lastResult, failures }) => {\n            if (numFailures === 0)\n                return lastResult;\n            throw new BulkError(`${this.name}.bulkDelete(): ${numFailures} of ${numKeys} operations failed`, failures);\n        });\n    }\n}\n\nfunction Events(ctx) {\n    var evs = {};\n    var rv = function (eventName, subscriber) {\n        if (subscriber) {\n            var i = arguments.length, args = new Array(i - 1);\n            while (--i)\n                args[i - 1] = arguments[i];\n            evs[eventName].subscribe.apply(null, args);\n            return ctx;\n        }\n        else if (typeof (eventName) === 'string') {\n            return evs[eventName];\n        }\n    };\n    rv.addEventType = add;\n    for (var i = 1, l = arguments.length; i < l; ++i) {\n        add(arguments[i]);\n    }\n    return rv;\n    function add(eventName, chainFunction, defaultFunction) {\n        if (typeof eventName === 'object')\n            return addConfiguredEvents(eventName);\n        if (!chainFunction)\n            chainFunction = reverseStoppableEventChain;\n        if (!defaultFunction)\n            defaultFunction = nop;\n        var context = {\n            subscribers: [],\n            fire: defaultFunction,\n            subscribe: function (cb) {\n                if (context.subscribers.indexOf(cb) === -1) {\n                    context.subscribers.push(cb);\n                    context.fire = chainFunction(context.fire, cb);\n                }\n            },\n            unsubscribe: function (cb) {\n                context.subscribers = context.subscribers.filter(function (fn) { return fn !== cb; });\n                context.fire = context.subscribers.reduce(chainFunction, defaultFunction);\n            }\n        };\n        evs[eventName] = rv[eventName] = context;\n        return context;\n    }\n    function addConfiguredEvents(cfg) {\n        keys(cfg).forEach(function (eventName) {\n            var args = cfg[eventName];\n            if (isArray(args)) {\n                add(eventName, cfg[eventName][0], cfg[eventName][1]);\n            }\n            else if (args === 'asap') {\n                var context = add(eventName, mirror, function fire() {\n                    var i = arguments.length, args = new Array(i);\n                    while (i--)\n                        args[i] = arguments[i];\n                    context.subscribers.forEach(function (fn) {\n                        asap$1(function fireEvent() {\n                            fn.apply(null, args);\n                        });\n                    });\n                });\n            }\n            else\n                throw new exceptions.InvalidArgument(\"Invalid event config\");\n        });\n    }\n}\n\nfunction makeClassConstructor(prototype, constructor) {\n    derive(constructor).from({ prototype });\n    return constructor;\n}\n\nfunction createTableConstructor(db) {\n    return makeClassConstructor(Table.prototype, function Table(name, tableSchema, trans) {\n        this.db = db;\n        this._tx = trans;\n        this.name = name;\n        this.schema = tableSchema;\n        this.hook = db._allTables[name] ? db._allTables[name].hook : Events(null, {\n            \"creating\": [hookCreatingChain, nop],\n            \"reading\": [pureFunctionChain, mirror],\n            \"updating\": [hookUpdatingChain, nop],\n            \"deleting\": [hookDeletingChain, nop]\n        });\n    });\n}\n\nfunction isPlainKeyRange(ctx, ignoreLimitFilter) {\n    return !(ctx.filter || ctx.algorithm || ctx.or) &&\n        (ignoreLimitFilter ? ctx.justLimit : !ctx.replayFilter);\n}\nfunction addFilter(ctx, fn) {\n    ctx.filter = combine(ctx.filter, fn);\n}\nfunction addReplayFilter(ctx, factory, isLimitFilter) {\n    var curr = ctx.replayFilter;\n    ctx.replayFilter = curr ? () => combine(curr(), factory()) : factory;\n    ctx.justLimit = isLimitFilter && !curr;\n}\nfunction addMatchFilter(ctx, fn) {\n    ctx.isMatch = combine(ctx.isMatch, fn);\n}\nfunction getIndexOrStore(ctx, coreSchema) {\n    if (ctx.isPrimKey)\n        return coreSchema.primaryKey;\n    const index = coreSchema.getIndexByKeyPath(ctx.index);\n    if (!index)\n        throw new exceptions.Schema(\"KeyPath \" + ctx.index + \" on object store \" + coreSchema.name + \" is not indexed\");\n    return index;\n}\nfunction openCursor(ctx, coreTable, trans) {\n    const index = getIndexOrStore(ctx, coreTable.schema);\n    return coreTable.openCursor({\n        trans,\n        values: !ctx.keysOnly,\n        reverse: ctx.dir === 'prev',\n        unique: !!ctx.unique,\n        query: {\n            index,\n            range: ctx.range\n        }\n    });\n}\nfunction iter(ctx, fn, coreTrans, coreTable) {\n    const filter = ctx.replayFilter ? combine(ctx.filter, ctx.replayFilter()) : ctx.filter;\n    if (!ctx.or) {\n        return iterate(openCursor(ctx, coreTable, coreTrans), combine(ctx.algorithm, filter), fn, !ctx.keysOnly && ctx.valueMapper);\n    }\n    else {\n        const set = {};\n        const union = (item, cursor, advance) => {\n            if (!filter || filter(cursor, advance, result => cursor.stop(result), err => cursor.fail(err))) {\n                var primaryKey = cursor.primaryKey;\n                var key = '' + primaryKey;\n                if (key === '[object ArrayBuffer]')\n                    key = '' + new Uint8Array(primaryKey);\n                if (!hasOwn(set, key)) {\n                    set[key] = true;\n                    fn(item, cursor, advance);\n                }\n            }\n        };\n        return Promise.all([\n            ctx.or._iterate(union, coreTrans),\n            iterate(openCursor(ctx, coreTable, coreTrans), ctx.algorithm, union, !ctx.keysOnly && ctx.valueMapper)\n        ]);\n    }\n}\nfunction iterate(cursorPromise, filter, fn, valueMapper) {\n    var mappedFn = valueMapper ? (x, c, a) => fn(valueMapper(x), c, a) : fn;\n    var wrappedFn = wrap(mappedFn);\n    return cursorPromise.then(cursor => {\n        if (cursor) {\n            return cursor.start(() => {\n                var c = () => cursor.continue();\n                if (!filter || filter(cursor, advancer => c = advancer, val => { cursor.stop(val); c = nop; }, e => { cursor.fail(e); c = nop; }))\n                    wrappedFn(cursor.value, cursor, advancer => c = advancer);\n                c();\n            });\n        }\n    });\n}\n\nclass Collection {\n    _read(fn, cb) {\n        var ctx = this._ctx;\n        return ctx.error ?\n            ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n            ctx.table._trans('readonly', fn).then(cb);\n    }\n    _write(fn) {\n        var ctx = this._ctx;\n        return ctx.error ?\n            ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n            ctx.table._trans('readwrite', fn, \"locked\");\n    }\n    _addAlgorithm(fn) {\n        var ctx = this._ctx;\n        ctx.algorithm = combine(ctx.algorithm, fn);\n    }\n    _iterate(fn, coreTrans) {\n        return iter(this._ctx, fn, coreTrans, this._ctx.table.core);\n    }\n    clone(props) {\n        var rv = Object.create(this.constructor.prototype), ctx = Object.create(this._ctx);\n        if (props)\n            extend(ctx, props);\n        rv._ctx = ctx;\n        return rv;\n    }\n    raw() {\n        this._ctx.valueMapper = null;\n        return this;\n    }\n    each(fn) {\n        var ctx = this._ctx;\n        return this._read(trans => iter(ctx, fn, trans, ctx.table.core));\n    }\n    count(cb) {\n        return this._read(trans => {\n            const ctx = this._ctx;\n            const coreTable = ctx.table.core;\n            if (isPlainKeyRange(ctx, true)) {\n                return coreTable.count({\n                    trans,\n                    query: {\n                        index: getIndexOrStore(ctx, coreTable.schema),\n                        range: ctx.range\n                    }\n                }).then(count => Math.min(count, ctx.limit));\n            }\n            else {\n                var count = 0;\n                return iter(ctx, () => { ++count; return false; }, trans, coreTable)\n                    .then(() => count);\n            }\n        }).then(cb);\n    }\n    sortBy(keyPath, cb) {\n        const parts = keyPath.split('.').reverse(), lastPart = parts[0], lastIndex = parts.length - 1;\n        function getval(obj, i) {\n            if (i)\n                return getval(obj[parts[i]], i - 1);\n            return obj[lastPart];\n        }\n        var order = this._ctx.dir === \"next\" ? 1 : -1;\n        function sorter(a, b) {\n            var aVal = getval(a, lastIndex), bVal = getval(b, lastIndex);\n            return aVal < bVal ? -order : aVal > bVal ? order : 0;\n        }\n        return this.toArray(function (a) {\n            return a.sort(sorter);\n        }).then(cb);\n    }\n    toArray(cb) {\n        return this._read(trans => {\n            var ctx = this._ctx;\n            if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n                const { valueMapper } = ctx;\n                const index = getIndexOrStore(ctx, ctx.table.core.schema);\n                return ctx.table.core.query({\n                    trans,\n                    limit: ctx.limit,\n                    values: true,\n                    query: {\n                        index,\n                        range: ctx.range\n                    }\n                }).then(({ result }) => valueMapper ? result.map(valueMapper) : result);\n            }\n            else {\n                const a = [];\n                return iter(ctx, item => a.push(item), trans, ctx.table.core).then(() => a);\n            }\n        }, cb);\n    }\n    offset(offset) {\n        var ctx = this._ctx;\n        if (offset <= 0)\n            return this;\n        ctx.offset += offset;\n        if (isPlainKeyRange(ctx)) {\n            addReplayFilter(ctx, () => {\n                var offsetLeft = offset;\n                return (cursor, advance) => {\n                    if (offsetLeft === 0)\n                        return true;\n                    if (offsetLeft === 1) {\n                        --offsetLeft;\n                        return false;\n                    }\n                    advance(() => {\n                        cursor.advance(offsetLeft);\n                        offsetLeft = 0;\n                    });\n                    return false;\n                };\n            });\n        }\n        else {\n            addReplayFilter(ctx, () => {\n                var offsetLeft = offset;\n                return () => (--offsetLeft < 0);\n            });\n        }\n        return this;\n    }\n    limit(numRows) {\n        this._ctx.limit = Math.min(this._ctx.limit, numRows);\n        addReplayFilter(this._ctx, () => {\n            var rowsLeft = numRows;\n            return function (cursor, advance, resolve) {\n                if (--rowsLeft <= 0)\n                    advance(resolve);\n                return rowsLeft >= 0;\n            };\n        }, true);\n        return this;\n    }\n    until(filterFunction, bIncludeStopEntry) {\n        addFilter(this._ctx, function (cursor, advance, resolve) {\n            if (filterFunction(cursor.value)) {\n                advance(resolve);\n                return bIncludeStopEntry;\n            }\n            else {\n                return true;\n            }\n        });\n        return this;\n    }\n    first(cb) {\n        return this.limit(1).toArray(function (a) { return a[0]; }).then(cb);\n    }\n    last(cb) {\n        return this.reverse().first(cb);\n    }\n    filter(filterFunction) {\n        addFilter(this._ctx, function (cursor) {\n            return filterFunction(cursor.value);\n        });\n        addMatchFilter(this._ctx, filterFunction);\n        return this;\n    }\n    and(filter) {\n        return this.filter(filter);\n    }\n    or(indexName) {\n        return new this.db.WhereClause(this._ctx.table, indexName, this);\n    }\n    reverse() {\n        this._ctx.dir = (this._ctx.dir === \"prev\" ? \"next\" : \"prev\");\n        if (this._ondirectionchange)\n            this._ondirectionchange(this._ctx.dir);\n        return this;\n    }\n    desc() {\n        return this.reverse();\n    }\n    eachKey(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        return this.each(function (val, cursor) { cb(cursor.key, cursor); });\n    }\n    eachUniqueKey(cb) {\n        this._ctx.unique = \"unique\";\n        return this.eachKey(cb);\n    }\n    eachPrimaryKey(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        return this.each(function (val, cursor) { cb(cursor.primaryKey, cursor); });\n    }\n    keys(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        var a = [];\n        return this.each(function (item, cursor) {\n            a.push(cursor.key);\n        }).then(function () {\n            return a;\n        }).then(cb);\n    }\n    primaryKeys(cb) {\n        var ctx = this._ctx;\n        if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n            return this._read(trans => {\n                var index = getIndexOrStore(ctx, ctx.table.core.schema);\n                return ctx.table.core.query({\n                    trans,\n                    values: false,\n                    limit: ctx.limit,\n                    query: {\n                        index,\n                        range: ctx.range\n                    }\n                });\n            }).then(({ result }) => result).then(cb);\n        }\n        ctx.keysOnly = !ctx.isMatch;\n        var a = [];\n        return this.each(function (item, cursor) {\n            a.push(cursor.primaryKey);\n        }).then(function () {\n            return a;\n        }).then(cb);\n    }\n    uniqueKeys(cb) {\n        this._ctx.unique = \"unique\";\n        return this.keys(cb);\n    }\n    firstKey(cb) {\n        return this.limit(1).keys(function (a) { return a[0]; }).then(cb);\n    }\n    lastKey(cb) {\n        return this.reverse().firstKey(cb);\n    }\n    distinct() {\n        var ctx = this._ctx, idx = ctx.index && ctx.table.schema.idxByName[ctx.index];\n        if (!idx || !idx.multi)\n            return this;\n        var set = {};\n        addFilter(this._ctx, function (cursor) {\n            var strKey = cursor.primaryKey.toString();\n            var found = hasOwn(set, strKey);\n            set[strKey] = true;\n            return !found;\n        });\n        return this;\n    }\n    modify(changes) {\n        var ctx = this._ctx;\n        return this._write(trans => {\n            var modifyer;\n            if (typeof changes === 'function') {\n                modifyer = changes;\n            }\n            else {\n                var keyPaths = keys(changes);\n                var numKeys = keyPaths.length;\n                modifyer = function (item) {\n                    var anythingModified = false;\n                    for (var i = 0; i < numKeys; ++i) {\n                        var keyPath = keyPaths[i], val = changes[keyPath];\n                        if (getByKeyPath(item, keyPath) !== val) {\n                            setByKeyPath(item, keyPath, val);\n                            anythingModified = true;\n                        }\n                    }\n                    return anythingModified;\n                };\n            }\n            const coreTable = ctx.table.core;\n            const { outbound, extractKey } = coreTable.schema.primaryKey;\n            const limit = this.db._options.modifyChunkSize || 200;\n            const totalFailures = [];\n            let successCount = 0;\n            const failedKeys = [];\n            const applyMutateResult = (expectedCount, res) => {\n                const { failures, numFailures } = res;\n                successCount += expectedCount - numFailures;\n                for (let pos of keys(failures)) {\n                    totalFailures.push(failures[pos]);\n                }\n            };\n            return this.clone().primaryKeys().then(keys => {\n                const nextChunk = (offset) => {\n                    const count = Math.min(limit, keys.length - offset);\n                    return coreTable.getMany({\n                        trans,\n                        keys: keys.slice(offset, offset + count),\n                        cache: \"immutable\"\n                    }).then(values => {\n                        const addValues = [];\n                        const putValues = [];\n                        const putKeys = outbound ? [] : null;\n                        const deleteKeys = [];\n                        for (let i = 0; i < count; ++i) {\n                            const origValue = values[i];\n                            const ctx = {\n                                value: deepClone(origValue),\n                                primKey: keys[offset + i]\n                            };\n                            if (modifyer.call(ctx, ctx.value, ctx) !== false) {\n                                if (ctx.value == null) {\n                                    deleteKeys.push(keys[offset + i]);\n                                }\n                                else if (!outbound && cmp(extractKey(origValue), extractKey(ctx.value)) !== 0) {\n                                    deleteKeys.push(keys[offset + i]);\n                                    addValues.push(ctx.value);\n                                }\n                                else {\n                                    putValues.push(ctx.value);\n                                    if (outbound)\n                                        putKeys.push(keys[offset + i]);\n                                }\n                            }\n                        }\n                        const criteria = isPlainKeyRange(ctx) &&\n                            ctx.limit === Infinity &&\n                            (typeof changes !== 'function' || changes === deleteCallback) && {\n                            index: ctx.index,\n                            range: ctx.range\n                        };\n                        return Promise.resolve(addValues.length > 0 &&\n                            coreTable.mutate({ trans, type: 'add', values: addValues })\n                                .then(res => {\n                                for (let pos in res.failures) {\n                                    deleteKeys.splice(parseInt(pos), 1);\n                                }\n                                applyMutateResult(addValues.length, res);\n                            })).then(() => (putValues.length > 0 || (criteria && typeof changes === 'object')) &&\n                            coreTable.mutate({\n                                trans,\n                                type: 'put',\n                                keys: putKeys,\n                                values: putValues,\n                                criteria,\n                                changeSpec: typeof changes !== 'function'\n                                    && changes\n                            }).then(res => applyMutateResult(putValues.length, res))).then(() => (deleteKeys.length > 0 || (criteria && changes === deleteCallback)) &&\n                            coreTable.mutate({\n                                trans,\n                                type: 'delete',\n                                keys: deleteKeys,\n                                criteria\n                            }).then(res => applyMutateResult(deleteKeys.length, res))).then(() => {\n                            return keys.length > offset + count && nextChunk(offset + limit);\n                        });\n                    });\n                };\n                return nextChunk(0).then(() => {\n                    if (totalFailures.length > 0)\n                        throw new ModifyError(\"Error modifying one or more objects\", totalFailures, successCount, failedKeys);\n                    return keys.length;\n                });\n            });\n        });\n    }\n    delete() {\n        var ctx = this._ctx, range = ctx.range;\n        if (isPlainKeyRange(ctx) &&\n            ((ctx.isPrimKey && !hangsOnDeleteLargeKeyRange) || range.type === 3 ))\n         {\n            return this._write(trans => {\n                const { primaryKey } = ctx.table.core.schema;\n                const coreRange = range;\n                return ctx.table.core.count({ trans, query: { index: primaryKey, range: coreRange } }).then(count => {\n                    return ctx.table.core.mutate({ trans, type: 'deleteRange', range: coreRange })\n                        .then(({ failures, lastResult, results, numFailures }) => {\n                        if (numFailures)\n                            throw new ModifyError(\"Could not delete some values\", Object.keys(failures).map(pos => failures[pos]), count - numFailures);\n                        return count - numFailures;\n                    });\n                });\n            });\n        }\n        return this.modify(deleteCallback);\n    }\n}\nconst deleteCallback = (value, ctx) => ctx.value = null;\n\nfunction createCollectionConstructor(db) {\n    return makeClassConstructor(Collection.prototype, function Collection(whereClause, keyRangeGenerator) {\n        this.db = db;\n        let keyRange = AnyRange, error = null;\n        if (keyRangeGenerator)\n            try {\n                keyRange = keyRangeGenerator();\n            }\n            catch (ex) {\n                error = ex;\n            }\n        const whereCtx = whereClause._ctx;\n        const table = whereCtx.table;\n        const readingHook = table.hook.reading.fire;\n        this._ctx = {\n            table: table,\n            index: whereCtx.index,\n            isPrimKey: (!whereCtx.index || (table.schema.primKey.keyPath && whereCtx.index === table.schema.primKey.name)),\n            range: keyRange,\n            keysOnly: false,\n            dir: \"next\",\n            unique: \"\",\n            algorithm: null,\n            filter: null,\n            replayFilter: null,\n            justLimit: true,\n            isMatch: null,\n            offset: 0,\n            limit: Infinity,\n            error: error,\n            or: whereCtx.or,\n            valueMapper: readingHook !== mirror ? readingHook : null\n        };\n    });\n}\n\nfunction simpleCompare(a, b) {\n    return a < b ? -1 : a === b ? 0 : 1;\n}\nfunction simpleCompareReverse(a, b) {\n    return a > b ? -1 : a === b ? 0 : 1;\n}\n\nfunction fail(collectionOrWhereClause, err, T) {\n    var collection = collectionOrWhereClause instanceof WhereClause ?\n        new collectionOrWhereClause.Collection(collectionOrWhereClause) :\n        collectionOrWhereClause;\n    collection._ctx.error = T ? new T(err) : new TypeError(err);\n    return collection;\n}\nfunction emptyCollection(whereClause) {\n    return new whereClause.Collection(whereClause, () => rangeEqual(\"\")).limit(0);\n}\nfunction upperFactory(dir) {\n    return dir === \"next\" ?\n        (s) => s.toUpperCase() :\n        (s) => s.toLowerCase();\n}\nfunction lowerFactory(dir) {\n    return dir === \"next\" ?\n        (s) => s.toLowerCase() :\n        (s) => s.toUpperCase();\n}\nfunction nextCasing(key, lowerKey, upperNeedle, lowerNeedle, cmp, dir) {\n    var length = Math.min(key.length, lowerNeedle.length);\n    var llp = -1;\n    for (var i = 0; i < length; ++i) {\n        var lwrKeyChar = lowerKey[i];\n        if (lwrKeyChar !== lowerNeedle[i]) {\n            if (cmp(key[i], upperNeedle[i]) < 0)\n                return key.substr(0, i) + upperNeedle[i] + upperNeedle.substr(i + 1);\n            if (cmp(key[i], lowerNeedle[i]) < 0)\n                return key.substr(0, i) + lowerNeedle[i] + upperNeedle.substr(i + 1);\n            if (llp >= 0)\n                return key.substr(0, llp) + lowerKey[llp] + upperNeedle.substr(llp + 1);\n            return null;\n        }\n        if (cmp(key[i], lwrKeyChar) < 0)\n            llp = i;\n    }\n    if (length < lowerNeedle.length && dir === \"next\")\n        return key + upperNeedle.substr(key.length);\n    if (length < key.length && dir === \"prev\")\n        return key.substr(0, upperNeedle.length);\n    return (llp < 0 ? null : key.substr(0, llp) + lowerNeedle[llp] + upperNeedle.substr(llp + 1));\n}\nfunction addIgnoreCaseAlgorithm(whereClause, match, needles, suffix) {\n    var upper, lower, compare, upperNeedles, lowerNeedles, direction, nextKeySuffix, needlesLen = needles.length;\n    if (!needles.every(s => typeof s === 'string')) {\n        return fail(whereClause, STRING_EXPECTED);\n    }\n    function initDirection(dir) {\n        upper = upperFactory(dir);\n        lower = lowerFactory(dir);\n        compare = (dir === \"next\" ? simpleCompare : simpleCompareReverse);\n        var needleBounds = needles.map(function (needle) {\n            return { lower: lower(needle), upper: upper(needle) };\n        }).sort(function (a, b) {\n            return compare(a.lower, b.lower);\n        });\n        upperNeedles = needleBounds.map(function (nb) { return nb.upper; });\n        lowerNeedles = needleBounds.map(function (nb) { return nb.lower; });\n        direction = dir;\n        nextKeySuffix = (dir === \"next\" ? \"\" : suffix);\n    }\n    initDirection(\"next\");\n    var c = new whereClause.Collection(whereClause, () => createRange(upperNeedles[0], lowerNeedles[needlesLen - 1] + suffix));\n    c._ondirectionchange = function (direction) {\n        initDirection(direction);\n    };\n    var firstPossibleNeedle = 0;\n    c._addAlgorithm(function (cursor, advance, resolve) {\n        var key = cursor.key;\n        if (typeof key !== 'string')\n            return false;\n        var lowerKey = lower(key);\n        if (match(lowerKey, lowerNeedles, firstPossibleNeedle)) {\n            return true;\n        }\n        else {\n            var lowestPossibleCasing = null;\n            for (var i = firstPossibleNeedle; i < needlesLen; ++i) {\n                var casing = nextCasing(key, lowerKey, upperNeedles[i], lowerNeedles[i], compare, direction);\n                if (casing === null && lowestPossibleCasing === null)\n                    firstPossibleNeedle = i + 1;\n                else if (lowestPossibleCasing === null || compare(lowestPossibleCasing, casing) > 0) {\n                    lowestPossibleCasing = casing;\n                }\n            }\n            if (lowestPossibleCasing !== null) {\n                advance(function () { cursor.continue(lowestPossibleCasing + nextKeySuffix); });\n            }\n            else {\n                advance(resolve);\n            }\n            return false;\n        }\n    });\n    return c;\n}\nfunction createRange(lower, upper, lowerOpen, upperOpen) {\n    return {\n        type: 2 ,\n        lower,\n        upper,\n        lowerOpen,\n        upperOpen\n    };\n}\nfunction rangeEqual(value) {\n    return {\n        type: 1 ,\n        lower: value,\n        upper: value\n    };\n}\n\nclass WhereClause {\n    get Collection() {\n        return this._ctx.table.db.Collection;\n    }\n    between(lower, upper, includeLower, includeUpper) {\n        includeLower = includeLower !== false;\n        includeUpper = includeUpper === true;\n        try {\n            if ((this._cmp(lower, upper) > 0) ||\n                (this._cmp(lower, upper) === 0 && (includeLower || includeUpper) && !(includeLower && includeUpper)))\n                return emptyCollection(this);\n            return new this.Collection(this, () => createRange(lower, upper, !includeLower, !includeUpper));\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n    }\n    equals(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => rangeEqual(value));\n    }\n    above(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(value, undefined, true));\n    }\n    aboveOrEqual(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(value, undefined, false));\n    }\n    below(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(undefined, value, false, true));\n    }\n    belowOrEqual(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(undefined, value));\n    }\n    startsWith(str) {\n        if (typeof str !== 'string')\n            return fail(this, STRING_EXPECTED);\n        return this.between(str, str + maxString, true, true);\n    }\n    startsWithIgnoreCase(str) {\n        if (str === \"\")\n            return this.startsWith(str);\n        return addIgnoreCaseAlgorithm(this, (x, a) => x.indexOf(a[0]) === 0, [str], maxString);\n    }\n    equalsIgnoreCase(str) {\n        return addIgnoreCaseAlgorithm(this, (x, a) => x === a[0], [str], \"\");\n    }\n    anyOfIgnoreCase() {\n        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return emptyCollection(this);\n        return addIgnoreCaseAlgorithm(this, (x, a) => a.indexOf(x) !== -1, set, \"\");\n    }\n    startsWithAnyOfIgnoreCase() {\n        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return emptyCollection(this);\n        return addIgnoreCaseAlgorithm(this, (x, a) => a.some(n => x.indexOf(n) === 0), set, maxString);\n    }\n    anyOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        let compare = this._cmp;\n        try {\n            set.sort(compare);\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        if (set.length === 0)\n            return emptyCollection(this);\n        const c = new this.Collection(this, () => createRange(set[0], set[set.length - 1]));\n        c._ondirectionchange = direction => {\n            compare = (direction === \"next\" ?\n                this._ascending :\n                this._descending);\n            set.sort(compare);\n        };\n        let i = 0;\n        c._addAlgorithm((cursor, advance, resolve) => {\n            const key = cursor.key;\n            while (compare(key, set[i]) > 0) {\n                ++i;\n                if (i === set.length) {\n                    advance(resolve);\n                    return false;\n                }\n            }\n            if (compare(key, set[i]) === 0) {\n                return true;\n            }\n            else {\n                advance(() => { cursor.continue(set[i]); });\n                return false;\n            }\n        });\n        return c;\n    }\n    notEqual(value) {\n        return this.inAnyRange([[minKey, value], [value, this.db._maxKey]], { includeLowers: false, includeUppers: false });\n    }\n    noneOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return new this.Collection(this);\n        try {\n            set.sort(this._ascending);\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        const ranges = set.reduce((res, val) => res ?\n            res.concat([[res[res.length - 1][1], val]]) :\n            [[minKey, val]], null);\n        ranges.push([set[set.length - 1], this.db._maxKey]);\n        return this.inAnyRange(ranges, { includeLowers: false, includeUppers: false });\n    }\n    inAnyRange(ranges, options) {\n        const cmp = this._cmp, ascending = this._ascending, descending = this._descending, min = this._min, max = this._max;\n        if (ranges.length === 0)\n            return emptyCollection(this);\n        if (!ranges.every(range => range[0] !== undefined &&\n            range[1] !== undefined &&\n            ascending(range[0], range[1]) <= 0)) {\n            return fail(this, \"First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower\", exceptions.InvalidArgument);\n        }\n        const includeLowers = !options || options.includeLowers !== false;\n        const includeUppers = options && options.includeUppers === true;\n        function addRange(ranges, newRange) {\n            let i = 0, l = ranges.length;\n            for (; i < l; ++i) {\n                const range = ranges[i];\n                if (cmp(newRange[0], range[1]) < 0 && cmp(newRange[1], range[0]) > 0) {\n                    range[0] = min(range[0], newRange[0]);\n                    range[1] = max(range[1], newRange[1]);\n                    break;\n                }\n            }\n            if (i === l)\n                ranges.push(newRange);\n            return ranges;\n        }\n        let sortDirection = ascending;\n        function rangeSorter(a, b) { return sortDirection(a[0], b[0]); }\n        let set;\n        try {\n            set = ranges.reduce(addRange, []);\n            set.sort(rangeSorter);\n        }\n        catch (ex) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        let rangePos = 0;\n        const keyIsBeyondCurrentEntry = includeUppers ?\n            key => ascending(key, set[rangePos][1]) > 0 :\n            key => ascending(key, set[rangePos][1]) >= 0;\n        const keyIsBeforeCurrentEntry = includeLowers ?\n            key => descending(key, set[rangePos][0]) > 0 :\n            key => descending(key, set[rangePos][0]) >= 0;\n        function keyWithinCurrentRange(key) {\n            return !keyIsBeyondCurrentEntry(key) && !keyIsBeforeCurrentEntry(key);\n        }\n        let checkKey = keyIsBeyondCurrentEntry;\n        const c = new this.Collection(this, () => createRange(set[0][0], set[set.length - 1][1], !includeLowers, !includeUppers));\n        c._ondirectionchange = direction => {\n            if (direction === \"next\") {\n                checkKey = keyIsBeyondCurrentEntry;\n                sortDirection = ascending;\n            }\n            else {\n                checkKey = keyIsBeforeCurrentEntry;\n                sortDirection = descending;\n            }\n            set.sort(rangeSorter);\n        };\n        c._addAlgorithm((cursor, advance, resolve) => {\n            var key = cursor.key;\n            while (checkKey(key)) {\n                ++rangePos;\n                if (rangePos === set.length) {\n                    advance(resolve);\n                    return false;\n                }\n            }\n            if (keyWithinCurrentRange(key)) {\n                return true;\n            }\n            else if (this._cmp(key, set[rangePos][1]) === 0 || this._cmp(key, set[rangePos][0]) === 0) {\n                return false;\n            }\n            else {\n                advance(() => {\n                    if (sortDirection === ascending)\n                        cursor.continue(set[rangePos][0]);\n                    else\n                        cursor.continue(set[rangePos][1]);\n                });\n                return false;\n            }\n        });\n        return c;\n    }\n    startsWithAnyOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (!set.every(s => typeof s === 'string')) {\n            return fail(this, \"startsWithAnyOf() only works with strings\");\n        }\n        if (set.length === 0)\n            return emptyCollection(this);\n        return this.inAnyRange(set.map((str) => [str, str + maxString]));\n    }\n}\n\nfunction createWhereClauseConstructor(db) {\n    return makeClassConstructor(WhereClause.prototype, function WhereClause(table, index, orCollection) {\n        this.db = db;\n        this._ctx = {\n            table: table,\n            index: index === \":id\" ? null : index,\n            or: orCollection\n        };\n        this._cmp = this._ascending = cmp;\n        this._descending = (a, b) => cmp(b, a);\n        this._max = (a, b) => cmp(a, b) > 0 ? a : b;\n        this._min = (a, b) => cmp(a, b) < 0 ? a : b;\n        this._IDBKeyRange = db._deps.IDBKeyRange;\n        if (!this._IDBKeyRange)\n            throw new exceptions.MissingAPI();\n    });\n}\n\nfunction eventRejectHandler(reject) {\n    return wrap(function (event) {\n        preventDefault(event);\n        reject(event.target.error);\n        return false;\n    });\n}\nfunction preventDefault(event) {\n    if (event.stopPropagation)\n        event.stopPropagation();\n    if (event.preventDefault)\n        event.preventDefault();\n}\n\nconst DEXIE_STORAGE_MUTATED_EVENT_NAME = 'storagemutated';\nconst STORAGE_MUTATED_DOM_EVENT_NAME = 'x-storagemutated-1';\nconst globalEvents = Events(null, DEXIE_STORAGE_MUTATED_EVENT_NAME);\n\nclass Transaction {\n    _lock() {\n        assert(!PSD.global);\n        ++this._reculock;\n        if (this._reculock === 1 && !PSD.global)\n            PSD.lockOwnerFor = this;\n        return this;\n    }\n    _unlock() {\n        assert(!PSD.global);\n        if (--this._reculock === 0) {\n            if (!PSD.global)\n                PSD.lockOwnerFor = null;\n            while (this._blockedFuncs.length > 0 && !this._locked()) {\n                var fnAndPSD = this._blockedFuncs.shift();\n                try {\n                    usePSD(fnAndPSD[1], fnAndPSD[0]);\n                }\n                catch (e) { }\n            }\n        }\n        return this;\n    }\n    _locked() {\n        return this._reculock && PSD.lockOwnerFor !== this;\n    }\n    create(idbtrans) {\n        if (!this.mode)\n            return this;\n        const idbdb = this.db.idbdb;\n        const dbOpenError = this.db._state.dbOpenError;\n        assert(!this.idbtrans);\n        if (!idbtrans && !idbdb) {\n            switch (dbOpenError && dbOpenError.name) {\n                case \"DatabaseClosedError\":\n                    throw new exceptions.DatabaseClosed(dbOpenError);\n                case \"MissingAPIError\":\n                    throw new exceptions.MissingAPI(dbOpenError.message, dbOpenError);\n                default:\n                    throw new exceptions.OpenFailed(dbOpenError);\n            }\n        }\n        if (!this.active)\n            throw new exceptions.TransactionInactive();\n        assert(this._completion._state === null);\n        idbtrans = this.idbtrans = idbtrans ||\n            (this.db.core\n                ? this.db.core.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability })\n                : idbdb.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability }));\n        idbtrans.onerror = wrap(ev => {\n            preventDefault(ev);\n            this._reject(idbtrans.error);\n        });\n        idbtrans.onabort = wrap(ev => {\n            preventDefault(ev);\n            this.active && this._reject(new exceptions.Abort(idbtrans.error));\n            this.active = false;\n            this.on(\"abort\").fire(ev);\n        });\n        idbtrans.oncomplete = wrap(() => {\n            this.active = false;\n            this._resolve();\n            if ('mutatedParts' in idbtrans) {\n                globalEvents.storagemutated.fire(idbtrans[\"mutatedParts\"]);\n            }\n        });\n        return this;\n    }\n    _promise(mode, fn, bWriteLock) {\n        if (mode === 'readwrite' && this.mode !== 'readwrite')\n            return rejection(new exceptions.ReadOnly(\"Transaction is readonly\"));\n        if (!this.active)\n            return rejection(new exceptions.TransactionInactive());\n        if (this._locked()) {\n            return new DexiePromise((resolve, reject) => {\n                this._blockedFuncs.push([() => {\n                        this._promise(mode, fn, bWriteLock).then(resolve, reject);\n                    }, PSD]);\n            });\n        }\n        else if (bWriteLock) {\n            return newScope(() => {\n                var p = new DexiePromise((resolve, reject) => {\n                    this._lock();\n                    const rv = fn(resolve, reject, this);\n                    if (rv && rv.then)\n                        rv.then(resolve, reject);\n                });\n                p.finally(() => this._unlock());\n                p._lib = true;\n                return p;\n            });\n        }\n        else {\n            var p = new DexiePromise((resolve, reject) => {\n                var rv = fn(resolve, reject, this);\n                if (rv && rv.then)\n                    rv.then(resolve, reject);\n            });\n            p._lib = true;\n            return p;\n        }\n    }\n    _root() {\n        return this.parent ? this.parent._root() : this;\n    }\n    waitFor(promiseLike) {\n        var root = this._root();\n        const promise = DexiePromise.resolve(promiseLike);\n        if (root._waitingFor) {\n            root._waitingFor = root._waitingFor.then(() => promise);\n        }\n        else {\n            root._waitingFor = promise;\n            root._waitingQueue = [];\n            var store = root.idbtrans.objectStore(root.storeNames[0]);\n            (function spin() {\n                ++root._spinCount;\n                while (root._waitingQueue.length)\n                    (root._waitingQueue.shift())();\n                if (root._waitingFor)\n                    store.get(-Infinity).onsuccess = spin;\n            }());\n        }\n        var currentWaitPromise = root._waitingFor;\n        return new DexiePromise((resolve, reject) => {\n            promise.then(res => root._waitingQueue.push(wrap(resolve.bind(null, res))), err => root._waitingQueue.push(wrap(reject.bind(null, err)))).finally(() => {\n                if (root._waitingFor === currentWaitPromise) {\n                    root._waitingFor = null;\n                }\n            });\n        });\n    }\n    abort() {\n        if (this.active) {\n            this.active = false;\n            if (this.idbtrans)\n                this.idbtrans.abort();\n            this._reject(new exceptions.Abort());\n        }\n    }\n    table(tableName) {\n        const memoizedTables = (this._memoizedTables || (this._memoizedTables = {}));\n        if (hasOwn(memoizedTables, tableName))\n            return memoizedTables[tableName];\n        const tableSchema = this.schema[tableName];\n        if (!tableSchema) {\n            throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n        }\n        const transactionBoundTable = new this.db.Table(tableName, tableSchema, this);\n        transactionBoundTable.core = this.db.core.table(tableName);\n        memoizedTables[tableName] = transactionBoundTable;\n        return transactionBoundTable;\n    }\n}\n\nfunction createTransactionConstructor(db) {\n    return makeClassConstructor(Transaction.prototype, function Transaction(mode, storeNames, dbschema, chromeTransactionDurability, parent) {\n        this.db = db;\n        this.mode = mode;\n        this.storeNames = storeNames;\n        this.schema = dbschema;\n        this.chromeTransactionDurability = chromeTransactionDurability;\n        this.idbtrans = null;\n        this.on = Events(this, \"complete\", \"error\", \"abort\");\n        this.parent = parent || null;\n        this.active = true;\n        this._reculock = 0;\n        this._blockedFuncs = [];\n        this._resolve = null;\n        this._reject = null;\n        this._waitingFor = null;\n        this._waitingQueue = null;\n        this._spinCount = 0;\n        this._completion = new DexiePromise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this._completion.then(() => {\n            this.active = false;\n            this.on.complete.fire();\n        }, e => {\n            var wasActive = this.active;\n            this.active = false;\n            this.on.error.fire(e);\n            this.parent ?\n                this.parent._reject(e) :\n                wasActive && this.idbtrans && this.idbtrans.abort();\n            return rejection(e);\n        });\n    });\n}\n\nfunction createIndexSpec(name, keyPath, unique, multi, auto, compound, isPrimKey) {\n    return {\n        name,\n        keyPath,\n        unique,\n        multi,\n        auto,\n        compound,\n        src: (unique && !isPrimKey ? '&' : '') + (multi ? '*' : '') + (auto ? \"++\" : \"\") + nameFromKeyPath(keyPath)\n    };\n}\nfunction nameFromKeyPath(keyPath) {\n    return typeof keyPath === 'string' ?\n        keyPath :\n        keyPath ? ('[' + [].join.call(keyPath, '+') + ']') : \"\";\n}\n\nfunction createTableSchema(name, primKey, indexes) {\n    return {\n        name,\n        primKey,\n        indexes,\n        mappedClass: null,\n        idxByName: arrayToObject(indexes, index => [index.name, index])\n    };\n}\n\nfunction safariMultiStoreFix(storeNames) {\n    return storeNames.length === 1 ? storeNames[0] : storeNames;\n}\nlet getMaxKey = (IdbKeyRange) => {\n    try {\n        IdbKeyRange.only([[]]);\n        getMaxKey = () => [[]];\n        return [[]];\n    }\n    catch (e) {\n        getMaxKey = () => maxString;\n        return maxString;\n    }\n};\n\nfunction getKeyExtractor(keyPath) {\n    if (keyPath == null) {\n        return () => undefined;\n    }\n    else if (typeof keyPath === 'string') {\n        return getSinglePathKeyExtractor(keyPath);\n    }\n    else {\n        return obj => getByKeyPath(obj, keyPath);\n    }\n}\nfunction getSinglePathKeyExtractor(keyPath) {\n    const split = keyPath.split('.');\n    if (split.length === 1) {\n        return obj => obj[keyPath];\n    }\n    else {\n        return obj => getByKeyPath(obj, keyPath);\n    }\n}\n\nfunction arrayify(arrayLike) {\n    return [].slice.call(arrayLike);\n}\nlet _id_counter = 0;\nfunction getKeyPathAlias(keyPath) {\n    return keyPath == null ?\n        \":id\" :\n        typeof keyPath === 'string' ?\n            keyPath :\n            `[${keyPath.join('+')}]`;\n}\nfunction createDBCore(db, IdbKeyRange, tmpTrans) {\n    function extractSchema(db, trans) {\n        const tables = arrayify(db.objectStoreNames);\n        return {\n            schema: {\n                name: db.name,\n                tables: tables.map(table => trans.objectStore(table)).map(store => {\n                    const { keyPath, autoIncrement } = store;\n                    const compound = isArray(keyPath);\n                    const outbound = keyPath == null;\n                    const indexByKeyPath = {};\n                    const result = {\n                        name: store.name,\n                        primaryKey: {\n                            name: null,\n                            isPrimaryKey: true,\n                            outbound,\n                            compound,\n                            keyPath,\n                            autoIncrement,\n                            unique: true,\n                            extractKey: getKeyExtractor(keyPath)\n                        },\n                        indexes: arrayify(store.indexNames).map(indexName => store.index(indexName))\n                            .map(index => {\n                            const { name, unique, multiEntry, keyPath } = index;\n                            const compound = isArray(keyPath);\n                            const result = {\n                                name,\n                                compound,\n                                keyPath,\n                                unique,\n                                multiEntry,\n                                extractKey: getKeyExtractor(keyPath)\n                            };\n                            indexByKeyPath[getKeyPathAlias(keyPath)] = result;\n                            return result;\n                        }),\n                        getIndexByKeyPath: (keyPath) => indexByKeyPath[getKeyPathAlias(keyPath)]\n                    };\n                    indexByKeyPath[\":id\"] = result.primaryKey;\n                    if (keyPath != null) {\n                        indexByKeyPath[getKeyPathAlias(keyPath)] = result.primaryKey;\n                    }\n                    return result;\n                })\n            },\n            hasGetAll: tables.length > 0 && ('getAll' in trans.objectStore(tables[0])) &&\n                !(typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n                    !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n                    [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604)\n        };\n    }\n    function makeIDBKeyRange(range) {\n        if (range.type === 3 )\n            return null;\n        if (range.type === 4 )\n            throw new Error(\"Cannot convert never type to IDBKeyRange\");\n        const { lower, upper, lowerOpen, upperOpen } = range;\n        const idbRange = lower === undefined ?\n            upper === undefined ?\n                null :\n                IdbKeyRange.upperBound(upper, !!upperOpen) :\n            upper === undefined ?\n                IdbKeyRange.lowerBound(lower, !!lowerOpen) :\n                IdbKeyRange.bound(lower, upper, !!lowerOpen, !!upperOpen);\n        return idbRange;\n    }\n    function createDbCoreTable(tableSchema) {\n        const tableName = tableSchema.name;\n        function mutate({ trans, type, keys, values, range }) {\n            return new Promise((resolve, reject) => {\n                resolve = wrap(resolve);\n                const store = trans.objectStore(tableName);\n                const outbound = store.keyPath == null;\n                const isAddOrPut = type === \"put\" || type === \"add\";\n                if (!isAddOrPut && type !== 'delete' && type !== 'deleteRange')\n                    throw new Error(\"Invalid operation type: \" + type);\n                const { length } = keys || values || { length: 1 };\n                if (keys && values && keys.length !== values.length) {\n                    throw new Error(\"Given keys array must have same length as given values array.\");\n                }\n                if (length === 0)\n                    return resolve({ numFailures: 0, failures: {}, results: [], lastResult: undefined });\n                let req;\n                const reqs = [];\n                const failures = [];\n                let numFailures = 0;\n                const errorHandler = event => {\n                    ++numFailures;\n                    preventDefault(event);\n                };\n                if (type === 'deleteRange') {\n                    if (range.type === 4 )\n                        return resolve({ numFailures, failures, results: [], lastResult: undefined });\n                    if (range.type === 3 )\n                        reqs.push(req = store.clear());\n                    else\n                        reqs.push(req = store.delete(makeIDBKeyRange(range)));\n                }\n                else {\n                    const [args1, args2] = isAddOrPut ?\n                        outbound ?\n                            [values, keys] :\n                            [values, null] :\n                        [keys, null];\n                    if (isAddOrPut) {\n                        for (let i = 0; i < length; ++i) {\n                            reqs.push(req = (args2 && args2[i] !== undefined ?\n                                store[type](args1[i], args2[i]) :\n                                store[type](args1[i])));\n                            req.onerror = errorHandler;\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < length; ++i) {\n                            reqs.push(req = store[type](args1[i]));\n                            req.onerror = errorHandler;\n                        }\n                    }\n                }\n                const done = event => {\n                    const lastResult = event.target.result;\n                    reqs.forEach((req, i) => req.error != null && (failures[i] = req.error));\n                    resolve({\n                        numFailures,\n                        failures,\n                        results: type === \"delete\" ? keys : reqs.map(req => req.result),\n                        lastResult\n                    });\n                };\n                req.onerror = event => {\n                    errorHandler(event);\n                    done(event);\n                };\n                req.onsuccess = done;\n            });\n        }\n        function openCursor({ trans, values, query, reverse, unique }) {\n            return new Promise((resolve, reject) => {\n                resolve = wrap(resolve);\n                const { index, range } = query;\n                const store = trans.objectStore(tableName);\n                const source = index.isPrimaryKey ?\n                    store :\n                    store.index(index.name);\n                const direction = reverse ?\n                    unique ?\n                        \"prevunique\" :\n                        \"prev\" :\n                    unique ?\n                        \"nextunique\" :\n                        \"next\";\n                const req = values || !('openKeyCursor' in source) ?\n                    source.openCursor(makeIDBKeyRange(range), direction) :\n                    source.openKeyCursor(makeIDBKeyRange(range), direction);\n                req.onerror = eventRejectHandler(reject);\n                req.onsuccess = wrap(ev => {\n                    const cursor = req.result;\n                    if (!cursor) {\n                        resolve(null);\n                        return;\n                    }\n                    cursor.___id = ++_id_counter;\n                    cursor.done = false;\n                    const _cursorContinue = cursor.continue.bind(cursor);\n                    let _cursorContinuePrimaryKey = cursor.continuePrimaryKey;\n                    if (_cursorContinuePrimaryKey)\n                        _cursorContinuePrimaryKey = _cursorContinuePrimaryKey.bind(cursor);\n                    const _cursorAdvance = cursor.advance.bind(cursor);\n                    const doThrowCursorIsNotStarted = () => { throw new Error(\"Cursor not started\"); };\n                    const doThrowCursorIsStopped = () => { throw new Error(\"Cursor not stopped\"); };\n                    cursor.trans = trans;\n                    cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsNotStarted;\n                    cursor.fail = wrap(reject);\n                    cursor.next = function () {\n                        let gotOne = 1;\n                        return this.start(() => gotOne-- ? this.continue() : this.stop()).then(() => this);\n                    };\n                    cursor.start = (callback) => {\n                        const iterationPromise = new Promise((resolveIteration, rejectIteration) => {\n                            resolveIteration = wrap(resolveIteration);\n                            req.onerror = eventRejectHandler(rejectIteration);\n                            cursor.fail = rejectIteration;\n                            cursor.stop = value => {\n                                cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsStopped;\n                                resolveIteration(value);\n                            };\n                        });\n                        const guardedCallback = () => {\n                            if (req.result) {\n                                try {\n                                    callback();\n                                }\n                                catch (err) {\n                                    cursor.fail(err);\n                                }\n                            }\n                            else {\n                                cursor.done = true;\n                                cursor.start = () => { throw new Error(\"Cursor behind last entry\"); };\n                                cursor.stop();\n                            }\n                        };\n                        req.onsuccess = wrap(ev => {\n                            req.onsuccess = guardedCallback;\n                            guardedCallback();\n                        });\n                        cursor.continue = _cursorContinue;\n                        cursor.continuePrimaryKey = _cursorContinuePrimaryKey;\n                        cursor.advance = _cursorAdvance;\n                        guardedCallback();\n                        return iterationPromise;\n                    };\n                    resolve(cursor);\n                }, reject);\n            });\n        }\n        function query(hasGetAll) {\n            return (request) => {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const { trans, values, limit, query } = request;\n                    const nonInfinitLimit = limit === Infinity ? undefined : limit;\n                    const { index, range } = query;\n                    const store = trans.objectStore(tableName);\n                    const source = index.isPrimaryKey ? store : store.index(index.name);\n                    const idbKeyRange = makeIDBKeyRange(range);\n                    if (limit === 0)\n                        return resolve({ result: [] });\n                    if (hasGetAll) {\n                        const req = values ?\n                            source.getAll(idbKeyRange, nonInfinitLimit) :\n                            source.getAllKeys(idbKeyRange, nonInfinitLimit);\n                        req.onsuccess = event => resolve({ result: event.target.result });\n                        req.onerror = eventRejectHandler(reject);\n                    }\n                    else {\n                        let count = 0;\n                        const req = values || !('openKeyCursor' in source) ?\n                            source.openCursor(idbKeyRange) :\n                            source.openKeyCursor(idbKeyRange);\n                        const result = [];\n                        req.onsuccess = event => {\n                            const cursor = req.result;\n                            if (!cursor)\n                                return resolve({ result });\n                            result.push(values ? cursor.value : cursor.primaryKey);\n                            if (++count === limit)\n                                return resolve({ result });\n                            cursor.continue();\n                        };\n                        req.onerror = eventRejectHandler(reject);\n                    }\n                });\n            };\n        }\n        return {\n            name: tableName,\n            schema: tableSchema,\n            mutate,\n            getMany({ trans, keys }) {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const store = trans.objectStore(tableName);\n                    const length = keys.length;\n                    const result = new Array(length);\n                    let keyCount = 0;\n                    let callbackCount = 0;\n                    let req;\n                    const successHandler = event => {\n                        const req = event.target;\n                        if ((result[req._pos] = req.result) != null)\n                            ;\n                        if (++callbackCount === keyCount)\n                            resolve(result);\n                    };\n                    const errorHandler = eventRejectHandler(reject);\n                    for (let i = 0; i < length; ++i) {\n                        const key = keys[i];\n                        if (key != null) {\n                            req = store.get(keys[i]);\n                            req._pos = i;\n                            req.onsuccess = successHandler;\n                            req.onerror = errorHandler;\n                            ++keyCount;\n                        }\n                    }\n                    if (keyCount === 0)\n                        resolve(result);\n                });\n            },\n            get({ trans, key }) {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const store = trans.objectStore(tableName);\n                    const req = store.get(key);\n                    req.onsuccess = event => resolve(event.target.result);\n                    req.onerror = eventRejectHandler(reject);\n                });\n            },\n            query: query(hasGetAll),\n            openCursor,\n            count({ query, trans }) {\n                const { index, range } = query;\n                return new Promise((resolve, reject) => {\n                    const store = trans.objectStore(tableName);\n                    const source = index.isPrimaryKey ? store : store.index(index.name);\n                    const idbKeyRange = makeIDBKeyRange(range);\n                    const req = idbKeyRange ? source.count(idbKeyRange) : source.count();\n                    req.onsuccess = wrap(ev => resolve(ev.target.result));\n                    req.onerror = eventRejectHandler(reject);\n                });\n            }\n        };\n    }\n    const { schema, hasGetAll } = extractSchema(db, tmpTrans);\n    const tables = schema.tables.map(tableSchema => createDbCoreTable(tableSchema));\n    const tableMap = {};\n    tables.forEach(table => tableMap[table.name] = table);\n    return {\n        stack: \"dbcore\",\n        transaction: db.transaction.bind(db),\n        table(name) {\n            const result = tableMap[name];\n            if (!result)\n                throw new Error(`Table '${name}' not found`);\n            return tableMap[name];\n        },\n        MIN_KEY: -Infinity,\n        MAX_KEY: getMaxKey(IdbKeyRange),\n        schema\n    };\n}\n\nfunction createMiddlewareStack(stackImpl, middlewares) {\n    return middlewares.reduce((down, { create }) => ({ ...down, ...create(down) }), stackImpl);\n}\nfunction createMiddlewareStacks(middlewares, idbdb, { IDBKeyRange, indexedDB }, tmpTrans) {\n    const dbcore = createMiddlewareStack(createDBCore(idbdb, IDBKeyRange, tmpTrans), middlewares.dbcore);\n    return {\n        dbcore\n    };\n}\nfunction generateMiddlewareStacks(db, tmpTrans) {\n    const idbdb = tmpTrans.db;\n    const stacks = createMiddlewareStacks(db._middlewares, idbdb, db._deps, tmpTrans);\n    db.core = stacks.dbcore;\n    db.tables.forEach(table => {\n        const tableName = table.name;\n        if (db.core.schema.tables.some(tbl => tbl.name === tableName)) {\n            table.core = db.core.table(tableName);\n            if (db[tableName] instanceof db.Table) {\n                db[tableName].core = table.core;\n            }\n        }\n    });\n}\n\nfunction setApiOnPlace(db, objs, tableNames, dbschema) {\n    tableNames.forEach(tableName => {\n        const schema = dbschema[tableName];\n        objs.forEach(obj => {\n            const propDesc = getPropertyDescriptor(obj, tableName);\n            if (!propDesc || (\"value\" in propDesc && propDesc.value === undefined)) {\n                if (obj === db.Transaction.prototype || obj instanceof db.Transaction) {\n                    setProp(obj, tableName, {\n                        get() { return this.table(tableName); },\n                        set(value) {\n                            defineProperty(this, tableName, { value, writable: true, configurable: true, enumerable: true });\n                        }\n                    });\n                }\n                else {\n                    obj[tableName] = new db.Table(tableName, schema);\n                }\n            }\n        });\n    });\n}\nfunction removeTablesApi(db, objs) {\n    objs.forEach(obj => {\n        for (let key in obj) {\n            if (obj[key] instanceof db.Table)\n                delete obj[key];\n        }\n    });\n}\nfunction lowerVersionFirst(a, b) {\n    return a._cfg.version - b._cfg.version;\n}\nfunction runUpgraders(db, oldVersion, idbUpgradeTrans, reject) {\n    const globalSchema = db._dbSchema;\n    const trans = db._createTransaction('readwrite', db._storeNames, globalSchema);\n    trans.create(idbUpgradeTrans);\n    trans._completion.catch(reject);\n    const rejectTransaction = trans._reject.bind(trans);\n    const transless = PSD.transless || PSD;\n    newScope(() => {\n        PSD.trans = trans;\n        PSD.transless = transless;\n        if (oldVersion === 0) {\n            keys(globalSchema).forEach(tableName => {\n                createTable(idbUpgradeTrans, tableName, globalSchema[tableName].primKey, globalSchema[tableName].indexes);\n            });\n            generateMiddlewareStacks(db, idbUpgradeTrans);\n            DexiePromise.follow(() => db.on.populate.fire(trans)).catch(rejectTransaction);\n        }\n        else\n            updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans).catch(rejectTransaction);\n    });\n}\nfunction updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans) {\n    const queue = [];\n    const versions = db._versions;\n    let globalSchema = db._dbSchema = buildGlobalSchema(db, db.idbdb, idbUpgradeTrans);\n    let anyContentUpgraderHasRun = false;\n    const versToRun = versions.filter(v => v._cfg.version >= oldVersion);\n    versToRun.forEach(version => {\n        queue.push(() => {\n            const oldSchema = globalSchema;\n            const newSchema = version._cfg.dbschema;\n            adjustToExistingIndexNames(db, oldSchema, idbUpgradeTrans);\n            adjustToExistingIndexNames(db, newSchema, idbUpgradeTrans);\n            globalSchema = db._dbSchema = newSchema;\n            const diff = getSchemaDiff(oldSchema, newSchema);\n            diff.add.forEach(tuple => {\n                createTable(idbUpgradeTrans, tuple[0], tuple[1].primKey, tuple[1].indexes);\n            });\n            diff.change.forEach(change => {\n                if (change.recreate) {\n                    throw new exceptions.Upgrade(\"Not yet support for changing primary key\");\n                }\n                else {\n                    const store = idbUpgradeTrans.objectStore(change.name);\n                    change.add.forEach(idx => addIndex(store, idx));\n                    change.change.forEach(idx => {\n                        store.deleteIndex(idx.name);\n                        addIndex(store, idx);\n                    });\n                    change.del.forEach(idxName => store.deleteIndex(idxName));\n                }\n            });\n            const contentUpgrade = version._cfg.contentUpgrade;\n            if (contentUpgrade && version._cfg.version > oldVersion) {\n                generateMiddlewareStacks(db, idbUpgradeTrans);\n                trans._memoizedTables = {};\n                anyContentUpgraderHasRun = true;\n                let upgradeSchema = shallowClone(newSchema);\n                diff.del.forEach(table => {\n                    upgradeSchema[table] = oldSchema[table];\n                });\n                removeTablesApi(db, [db.Transaction.prototype]);\n                setApiOnPlace(db, [db.Transaction.prototype], keys(upgradeSchema), upgradeSchema);\n                trans.schema = upgradeSchema;\n                const contentUpgradeIsAsync = isAsyncFunction(contentUpgrade);\n                if (contentUpgradeIsAsync) {\n                    incrementExpectedAwaits();\n                }\n                let returnValue;\n                const promiseFollowed = DexiePromise.follow(() => {\n                    returnValue = contentUpgrade(trans);\n                    if (returnValue) {\n                        if (contentUpgradeIsAsync) {\n                            var decrementor = decrementExpectedAwaits.bind(null, null);\n                            returnValue.then(decrementor, decrementor);\n                        }\n                    }\n                });\n                return (returnValue && typeof returnValue.then === 'function' ?\n                    DexiePromise.resolve(returnValue) : promiseFollowed.then(() => returnValue));\n            }\n        });\n        queue.push(idbtrans => {\n            if (!anyContentUpgraderHasRun || !hasIEDeleteObjectStoreBug) {\n                const newSchema = version._cfg.dbschema;\n                deleteRemovedTables(newSchema, idbtrans);\n            }\n            removeTablesApi(db, [db.Transaction.prototype]);\n            setApiOnPlace(db, [db.Transaction.prototype], db._storeNames, db._dbSchema);\n            trans.schema = db._dbSchema;\n        });\n    });\n    function runQueue() {\n        return queue.length ? DexiePromise.resolve(queue.shift()(trans.idbtrans)).then(runQueue) :\n            DexiePromise.resolve();\n    }\n    return runQueue().then(() => {\n        createMissingTables(globalSchema, idbUpgradeTrans);\n    });\n}\nfunction getSchemaDiff(oldSchema, newSchema) {\n    const diff = {\n        del: [],\n        add: [],\n        change: []\n    };\n    let table;\n    for (table in oldSchema) {\n        if (!newSchema[table])\n            diff.del.push(table);\n    }\n    for (table in newSchema) {\n        const oldDef = oldSchema[table], newDef = newSchema[table];\n        if (!oldDef) {\n            diff.add.push([table, newDef]);\n        }\n        else {\n            const change = {\n                name: table,\n                def: newDef,\n                recreate: false,\n                del: [],\n                add: [],\n                change: []\n            };\n            if ((\n            '' + (oldDef.primKey.keyPath || '')) !== ('' + (newDef.primKey.keyPath || '')) ||\n                (oldDef.primKey.auto !== newDef.primKey.auto && !isIEOrEdge))\n             {\n                change.recreate = true;\n                diff.change.push(change);\n            }\n            else {\n                const oldIndexes = oldDef.idxByName;\n                const newIndexes = newDef.idxByName;\n                let idxName;\n                for (idxName in oldIndexes) {\n                    if (!newIndexes[idxName])\n                        change.del.push(idxName);\n                }\n                for (idxName in newIndexes) {\n                    const oldIdx = oldIndexes[idxName], newIdx = newIndexes[idxName];\n                    if (!oldIdx)\n                        change.add.push(newIdx);\n                    else if (oldIdx.src !== newIdx.src)\n                        change.change.push(newIdx);\n                }\n                if (change.del.length > 0 || change.add.length > 0 || change.change.length > 0) {\n                    diff.change.push(change);\n                }\n            }\n        }\n    }\n    return diff;\n}\nfunction createTable(idbtrans, tableName, primKey, indexes) {\n    const store = idbtrans.db.createObjectStore(tableName, primKey.keyPath ?\n        { keyPath: primKey.keyPath, autoIncrement: primKey.auto } :\n        { autoIncrement: primKey.auto });\n    indexes.forEach(idx => addIndex(store, idx));\n    return store;\n}\nfunction createMissingTables(newSchema, idbtrans) {\n    keys(newSchema).forEach(tableName => {\n        if (!idbtrans.db.objectStoreNames.contains(tableName)) {\n            createTable(idbtrans, tableName, newSchema[tableName].primKey, newSchema[tableName].indexes);\n        }\n    });\n}\nfunction deleteRemovedTables(newSchema, idbtrans) {\n    [].slice.call(idbtrans.db.objectStoreNames).forEach(storeName => newSchema[storeName] == null && idbtrans.db.deleteObjectStore(storeName));\n}\nfunction addIndex(store, idx) {\n    store.createIndex(idx.name, idx.keyPath, { unique: idx.unique, multiEntry: idx.multi });\n}\nfunction buildGlobalSchema(db, idbdb, tmpTrans) {\n    const globalSchema = {};\n    const dbStoreNames = slice(idbdb.objectStoreNames, 0);\n    dbStoreNames.forEach(storeName => {\n        const store = tmpTrans.objectStore(storeName);\n        let keyPath = store.keyPath;\n        const primKey = createIndexSpec(nameFromKeyPath(keyPath), keyPath || \"\", false, false, !!store.autoIncrement, keyPath && typeof keyPath !== \"string\", true);\n        const indexes = [];\n        for (let j = 0; j < store.indexNames.length; ++j) {\n            const idbindex = store.index(store.indexNames[j]);\n            keyPath = idbindex.keyPath;\n            var index = createIndexSpec(idbindex.name, keyPath, !!idbindex.unique, !!idbindex.multiEntry, false, keyPath && typeof keyPath !== \"string\", false);\n            indexes.push(index);\n        }\n        globalSchema[storeName] = createTableSchema(storeName, primKey, indexes);\n    });\n    return globalSchema;\n}\nfunction readGlobalSchema(db, idbdb, tmpTrans) {\n    db.verno = idbdb.version / 10;\n    const globalSchema = db._dbSchema = buildGlobalSchema(db, idbdb, tmpTrans);\n    db._storeNames = slice(idbdb.objectStoreNames, 0);\n    setApiOnPlace(db, [db._allTables], keys(globalSchema), globalSchema);\n}\nfunction verifyInstalledSchema(db, tmpTrans) {\n    const installedSchema = buildGlobalSchema(db, db.idbdb, tmpTrans);\n    const diff = getSchemaDiff(installedSchema, db._dbSchema);\n    return !(diff.add.length || diff.change.some(ch => ch.add.length || ch.change.length));\n}\nfunction adjustToExistingIndexNames(db, schema, idbtrans) {\n    const storeNames = idbtrans.db.objectStoreNames;\n    for (let i = 0; i < storeNames.length; ++i) {\n        const storeName = storeNames[i];\n        const store = idbtrans.objectStore(storeName);\n        db._hasGetAll = 'getAll' in store;\n        for (let j = 0; j < store.indexNames.length; ++j) {\n            const indexName = store.indexNames[j];\n            const keyPath = store.index(indexName).keyPath;\n            const dexieName = typeof keyPath === 'string' ? keyPath : \"[\" + slice(keyPath).join('+') + \"]\";\n            if (schema[storeName]) {\n                const indexSpec = schema[storeName].idxByName[dexieName];\n                if (indexSpec) {\n                    indexSpec.name = indexName;\n                    delete schema[storeName].idxByName[dexieName];\n                    schema[storeName].idxByName[indexName] = indexSpec;\n                }\n            }\n        }\n    }\n    if (typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n        !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n        _global.WorkerGlobalScope && _global instanceof _global.WorkerGlobalScope &&\n        [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604) {\n        db._hasGetAll = false;\n    }\n}\nfunction parseIndexSyntax(primKeyAndIndexes) {\n    return primKeyAndIndexes.split(',').map((index, indexNum) => {\n        index = index.trim();\n        const name = index.replace(/([&*]|\\+\\+)/g, \"\");\n        const keyPath = /^\\[/.test(name) ? name.match(/^\\[(.*)\\]$/)[1].split('+') : name;\n        return createIndexSpec(name, keyPath || null, /\\&/.test(index), /\\*/.test(index), /\\+\\+/.test(index), isArray(keyPath), indexNum === 0);\n    });\n}\n\nclass Version {\n    _parseStoresSpec(stores, outSchema) {\n        keys(stores).forEach(tableName => {\n            if (stores[tableName] !== null) {\n                var indexes = parseIndexSyntax(stores[tableName]);\n                var primKey = indexes.shift();\n                if (primKey.multi)\n                    throw new exceptions.Schema(\"Primary key cannot be multi-valued\");\n                indexes.forEach(idx => {\n                    if (idx.auto)\n                        throw new exceptions.Schema(\"Only primary key can be marked as autoIncrement (++)\");\n                    if (!idx.keyPath)\n                        throw new exceptions.Schema(\"Index must have a name and cannot be an empty string\");\n                });\n                outSchema[tableName] = createTableSchema(tableName, primKey, indexes);\n            }\n        });\n    }\n    stores(stores) {\n        const db = this.db;\n        this._cfg.storesSource = this._cfg.storesSource ?\n            extend(this._cfg.storesSource, stores) :\n            stores;\n        const versions = db._versions;\n        const storesSpec = {};\n        let dbschema = {};\n        versions.forEach(version => {\n            extend(storesSpec, version._cfg.storesSource);\n            dbschema = (version._cfg.dbschema = {});\n            version._parseStoresSpec(storesSpec, dbschema);\n        });\n        db._dbSchema = dbschema;\n        removeTablesApi(db, [db._allTables, db, db.Transaction.prototype]);\n        setApiOnPlace(db, [db._allTables, db, db.Transaction.prototype, this._cfg.tables], keys(dbschema), dbschema);\n        db._storeNames = keys(dbschema);\n        return this;\n    }\n    upgrade(upgradeFunction) {\n        this._cfg.contentUpgrade = promisableChain(this._cfg.contentUpgrade || nop, upgradeFunction);\n        return this;\n    }\n}\n\nfunction createVersionConstructor(db) {\n    return makeClassConstructor(Version.prototype, function Version(versionNumber) {\n        this.db = db;\n        this._cfg = {\n            version: versionNumber,\n            storesSource: null,\n            dbschema: {},\n            tables: {},\n            contentUpgrade: null\n        };\n    });\n}\n\nfunction getDbNamesTable(indexedDB, IDBKeyRange) {\n    let dbNamesDB = indexedDB[\"_dbNamesDB\"];\n    if (!dbNamesDB) {\n        dbNamesDB = indexedDB[\"_dbNamesDB\"] = new Dexie$1(DBNAMES_DB, {\n            addons: [],\n            indexedDB,\n            IDBKeyRange,\n        });\n        dbNamesDB.version(1).stores({ dbnames: \"name\" });\n    }\n    return dbNamesDB.table(\"dbnames\");\n}\nfunction hasDatabasesNative(indexedDB) {\n    return indexedDB && typeof indexedDB.databases === \"function\";\n}\nfunction getDatabaseNames({ indexedDB, IDBKeyRange, }) {\n    return hasDatabasesNative(indexedDB)\n        ? Promise.resolve(indexedDB.databases()).then((infos) => infos\n            .map((info) => info.name)\n            .filter((name) => name !== DBNAMES_DB))\n        : getDbNamesTable(indexedDB, IDBKeyRange).toCollection().primaryKeys();\n}\nfunction _onDatabaseCreated({ indexedDB, IDBKeyRange }, name) {\n    !hasDatabasesNative(indexedDB) &&\n        name !== DBNAMES_DB &&\n        getDbNamesTable(indexedDB, IDBKeyRange).put({ name }).catch(nop);\n}\nfunction _onDatabaseDeleted({ indexedDB, IDBKeyRange }, name) {\n    !hasDatabasesNative(indexedDB) &&\n        name !== DBNAMES_DB &&\n        getDbNamesTable(indexedDB, IDBKeyRange).delete(name).catch(nop);\n}\n\nfunction vip(fn) {\n    return newScope(function () {\n        PSD.letThrough = true;\n        return fn();\n    });\n}\n\nfunction idbReady() {\n    var isSafari = !navigator.userAgentData &&\n        /Safari\\//.test(navigator.userAgent) &&\n        !/Chrom(e|ium)\\//.test(navigator.userAgent);\n    if (!isSafari || !indexedDB.databases)\n        return Promise.resolve();\n    var intervalId;\n    return new Promise(function (resolve) {\n        var tryIdb = function () { return indexedDB.databases().finally(resolve); };\n        intervalId = setInterval(tryIdb, 100);\n        tryIdb();\n    }).finally(function () { return clearInterval(intervalId); });\n}\n\nfunction isEmptyRange(node) {\n    return !(\"from\" in node);\n}\nconst RangeSet = function (fromOrTree, to) {\n    if (this) {\n        extend(this, arguments.length ? { d: 1, from: fromOrTree, to: arguments.length > 1 ? to : fromOrTree } : { d: 0 });\n    }\n    else {\n        const rv = new RangeSet();\n        if (fromOrTree && (\"d\" in fromOrTree)) {\n            extend(rv, fromOrTree);\n        }\n        return rv;\n    }\n};\nprops(RangeSet.prototype, {\n    add(rangeSet) {\n        mergeRanges(this, rangeSet);\n        return this;\n    },\n    addKey(key) {\n        addRange(this, key, key);\n        return this;\n    },\n    addKeys(keys) {\n        keys.forEach(key => addRange(this, key, key));\n        return this;\n    },\n    [iteratorSymbol]() {\n        return getRangeSetIterator(this);\n    }\n});\nfunction addRange(target, from, to) {\n    const diff = cmp(from, to);\n    if (isNaN(diff))\n        return;\n    if (diff > 0)\n        throw RangeError();\n    if (isEmptyRange(target))\n        return extend(target, { from, to, d: 1 });\n    const left = target.l;\n    const right = target.r;\n    if (cmp(to, target.from) < 0) {\n        left\n            ? addRange(left, from, to)\n            : (target.l = { from, to, d: 1, l: null, r: null });\n        return rebalance(target);\n    }\n    if (cmp(from, target.to) > 0) {\n        right\n            ? addRange(right, from, to)\n            : (target.r = { from, to, d: 1, l: null, r: null });\n        return rebalance(target);\n    }\n    if (cmp(from, target.from) < 0) {\n        target.from = from;\n        target.l = null;\n        target.d = right ? right.d + 1 : 1;\n    }\n    if (cmp(to, target.to) > 0) {\n        target.to = to;\n        target.r = null;\n        target.d = target.l ? target.l.d + 1 : 1;\n    }\n    const rightWasCutOff = !target.r;\n    if (left && !target.l) {\n        mergeRanges(target, left);\n    }\n    if (right && rightWasCutOff) {\n        mergeRanges(target, right);\n    }\n}\nfunction mergeRanges(target, newSet) {\n    function _addRangeSet(target, { from, to, l, r }) {\n        addRange(target, from, to);\n        if (l)\n            _addRangeSet(target, l);\n        if (r)\n            _addRangeSet(target, r);\n    }\n    if (!isEmptyRange(newSet))\n        _addRangeSet(target, newSet);\n}\nfunction rangesOverlap(rangeSet1, rangeSet2) {\n    const i1 = getRangeSetIterator(rangeSet2);\n    let nextResult1 = i1.next();\n    if (nextResult1.done)\n        return false;\n    let a = nextResult1.value;\n    const i2 = getRangeSetIterator(rangeSet1);\n    let nextResult2 = i2.next(a.from);\n    let b = nextResult2.value;\n    while (!nextResult1.done && !nextResult2.done) {\n        if (cmp(b.from, a.to) <= 0 && cmp(b.to, a.from) >= 0)\n            return true;\n        cmp(a.from, b.from) < 0\n            ? (a = (nextResult1 = i1.next(b.from)).value)\n            : (b = (nextResult2 = i2.next(a.from)).value);\n    }\n    return false;\n}\nfunction getRangeSetIterator(node) {\n    let state = isEmptyRange(node) ? null : { s: 0, n: node };\n    return {\n        next(key) {\n            const keyProvided = arguments.length > 0;\n            while (state) {\n                switch (state.s) {\n                    case 0:\n                        state.s = 1;\n                        if (keyProvided) {\n                            while (state.n.l && cmp(key, state.n.from) < 0)\n                                state = { up: state, n: state.n.l, s: 1 };\n                        }\n                        else {\n                            while (state.n.l)\n                                state = { up: state, n: state.n.l, s: 1 };\n                        }\n                    case 1:\n                        state.s = 2;\n                        if (!keyProvided || cmp(key, state.n.to) <= 0)\n                            return { value: state.n, done: false };\n                    case 2:\n                        if (state.n.r) {\n                            state.s = 3;\n                            state = { up: state, n: state.n.r, s: 0 };\n                            continue;\n                        }\n                    case 3:\n                        state = state.up;\n                }\n            }\n            return { done: true };\n        },\n    };\n}\nfunction rebalance(target) {\n    var _a, _b;\n    const diff = (((_a = target.r) === null || _a === void 0 ? void 0 : _a.d) || 0) - (((_b = target.l) === null || _b === void 0 ? void 0 : _b.d) || 0);\n    const r = diff > 1 ? \"r\" : diff < -1 ? \"l\" : \"\";\n    if (r) {\n        const l = r === \"r\" ? \"l\" : \"r\";\n        const rootClone = { ...target };\n        const oldRootRight = target[r];\n        target.from = oldRootRight.from;\n        target.to = oldRootRight.to;\n        target[r] = oldRootRight[r];\n        rootClone[r] = oldRootRight[l];\n        target[l] = rootClone;\n        rootClone.d = computeDepth(rootClone);\n    }\n    target.d = computeDepth(target);\n}\nfunction computeDepth({ r, l }) {\n    return (r ? (l ? Math.max(r.d, l.d) : r.d) : l ? l.d : 0) + 1;\n}\n\nfunction extendObservabilitySet(target, newSet) {\n    keys(newSet).forEach(part => {\n        if (target[part])\n            mergeRanges(target[part], newSet[part]);\n        else\n            target[part] = cloneSimpleObjectTree(newSet[part]);\n    });\n    return target;\n}\n\nfunction obsSetsOverlap(os1, os2) {\n    return Object.keys(os1).some((key) => os2[key] && rangesOverlap(os2[key], os1[key]));\n}\n\nconst cache = {};\n\nlet unsignaledParts = {};\nlet isTaskEnqueued = false;\nfunction signalSubscribersLazily(part) {\n    extendObservabilitySet(unsignaledParts, part);\n    if (!isTaskEnqueued) {\n        isTaskEnqueued = true;\n        setTimeout(() => {\n            isTaskEnqueued = false;\n            const parts = unsignaledParts;\n            unsignaledParts = {};\n            signalSubscribersNow(parts);\n        }, 0);\n    }\n}\nfunction signalSubscribersNow(updatedParts, deleteAffectedCacheEntries = false) {\n    const queriesToSignal = new Set();\n    for (const key in updatedParts) {\n        const parts = /^idb\\:\\/\\/(.*)\\/(.*)\\//.exec(key);\n        if (parts) {\n            const [, dbName, tableName] = parts;\n            const tblCache = cache[`idb://${dbName}/${tableName}`];\n            if (tblCache)\n                signalTableSubscribersNow(tblCache, updatedParts, queriesToSignal, deleteAffectedCacheEntries);\n        }\n    }\n    queriesToSignal.forEach((requery) => requery());\n}\nfunction signalTableSubscribersNow(tblCache, updatedParts, outQueriesToSignal, deleteAffectedCacheEntries) {\n    const updatedEntryLists = deleteAffectedCacheEntries && [];\n    for (const [indexName, entries] of Object.entries(tblCache.queries.query)) {\n        const filteredEntries = deleteAffectedCacheEntries && [];\n        for (const entry of entries) {\n            if (entry.obsSet && obsSetsOverlap(updatedParts, entry.obsSet)) {\n                entry.subscribers.forEach((requery) => outQueriesToSignal.add(requery));\n            }\n            else if (deleteAffectedCacheEntries) {\n                filteredEntries.push(entry);\n            }\n        }\n        if (deleteAffectedCacheEntries)\n            updatedEntryLists.push([indexName, filteredEntries]);\n    }\n    if (deleteAffectedCacheEntries) {\n        for (const [indexName, filteredEntries] of updatedEntryLists) {\n            tblCache.queries.query[indexName] = filteredEntries;\n        }\n    }\n}\n\nfunction dexieOpen(db) {\n    const state = db._state;\n    const { indexedDB } = db._deps;\n    if (state.isBeingOpened || db.idbdb)\n        return state.dbReadyPromise.then(() => state.dbOpenError ?\n            rejection(state.dbOpenError) :\n            db);\n    debug && (state.openCanceller._stackHolder = getErrorWithStack());\n    state.isBeingOpened = true;\n    state.dbOpenError = null;\n    state.openComplete = false;\n    const openCanceller = state.openCanceller;\n    function throwIfCancelled() {\n        if (state.openCanceller !== openCanceller)\n            throw new exceptions.DatabaseClosed('db.open() was cancelled');\n    }\n    let resolveDbReady = state.dbReadyResolve,\n    upgradeTransaction = null, wasCreated = false;\n    return DexiePromise.race([openCanceller, (typeof navigator === 'undefined' ? DexiePromise.resolve() : idbReady()).then(() => new DexiePromise((resolve, reject) => {\n            throwIfCancelled();\n            if (!indexedDB)\n                throw new exceptions.MissingAPI();\n            const dbName = db.name;\n            const req = state.autoSchema ?\n                indexedDB.open(dbName) :\n                indexedDB.open(dbName, Math.round(db.verno * 10));\n            if (!req)\n                throw new exceptions.MissingAPI();\n            req.onerror = eventRejectHandler(reject);\n            req.onblocked = wrap(db._fireOnBlocked);\n            req.onupgradeneeded = wrap(e => {\n                upgradeTransaction = req.transaction;\n                if (state.autoSchema && !db._options.allowEmptyDB) {\n                    req.onerror = preventDefault;\n                    upgradeTransaction.abort();\n                    req.result.close();\n                    const delreq = indexedDB.deleteDatabase(dbName);\n                    delreq.onsuccess = delreq.onerror = wrap(() => {\n                        reject(new exceptions.NoSuchDatabase(`Database ${dbName} doesnt exist`));\n                    });\n                }\n                else {\n                    upgradeTransaction.onerror = eventRejectHandler(reject);\n                    var oldVer = e.oldVersion > Math.pow(2, 62) ? 0 : e.oldVersion;\n                    wasCreated = oldVer < 1;\n                    db.idbdb = req.result;\n                    runUpgraders(db, oldVer / 10, upgradeTransaction, reject);\n                }\n            }, reject);\n            req.onsuccess = wrap(() => {\n                upgradeTransaction = null;\n                const idbdb = db.idbdb = req.result;\n                const objectStoreNames = slice(idbdb.objectStoreNames);\n                if (objectStoreNames.length > 0)\n                    try {\n                        const tmpTrans = idbdb.transaction(safariMultiStoreFix(objectStoreNames), 'readonly');\n                        if (state.autoSchema)\n                            readGlobalSchema(db, idbdb, tmpTrans);\n                        else {\n                            adjustToExistingIndexNames(db, db._dbSchema, tmpTrans);\n                            if (!verifyInstalledSchema(db, tmpTrans)) {\n                                console.warn(`Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Some queries may fail.`);\n                            }\n                        }\n                        generateMiddlewareStacks(db, tmpTrans);\n                    }\n                    catch (e) {\n                    }\n                connections.push(db);\n                idbdb.onversionchange = wrap(ev => {\n                    state.vcFired = true;\n                    db.on(\"versionchange\").fire(ev);\n                });\n                idbdb.onclose = wrap(ev => {\n                    db.on(\"close\").fire(ev);\n                });\n                if (wasCreated)\n                    _onDatabaseCreated(db._deps, dbName);\n                resolve();\n            }, reject);\n        }))]).then(() => {\n        throwIfCancelled();\n        state.onReadyBeingFired = [];\n        return DexiePromise.resolve(vip(() => db.on.ready.fire(db.vip))).then(function fireRemainders() {\n            if (state.onReadyBeingFired.length > 0) {\n                let remainders = state.onReadyBeingFired.reduce(promisableChain, nop);\n                state.onReadyBeingFired = [];\n                return DexiePromise.resolve(vip(() => remainders(db.vip))).then(fireRemainders);\n            }\n        });\n    }).finally(() => {\n        if (state.openCanceller === openCanceller) {\n            state.onReadyBeingFired = null;\n            state.isBeingOpened = false;\n        }\n    }).catch(err => {\n        state.dbOpenError = err;\n        try {\n            upgradeTransaction && upgradeTransaction.abort();\n        }\n        catch (_a) { }\n        if (openCanceller === state.openCanceller) {\n            db._close();\n        }\n        return rejection(err);\n    }).finally(() => {\n        state.openComplete = true;\n        resolveDbReady();\n    }).then(() => {\n        if (wasCreated) {\n            const everything = {};\n            db.tables.forEach(table => {\n                table.schema.indexes.forEach(idx => {\n                    if (idx.name)\n                        everything[`idb://${db.name}/${table.name}/${idx.name}`] = new RangeSet(-Infinity, [[[]]]);\n                });\n                everything[`idb://${db.name}/${table.name}/`] = everything[`idb://${db.name}/${table.name}/:dels`] = new RangeSet(-Infinity, [[[]]]);\n            });\n            globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME).fire(everything);\n            signalSubscribersNow(everything, true);\n        }\n        return db;\n    });\n}\n\nfunction awaitIterator(iterator) {\n    var callNext = result => iterator.next(result), doThrow = error => iterator.throw(error), onSuccess = step(callNext), onError = step(doThrow);\n    function step(getNext) {\n        return (val) => {\n            var next = getNext(val), value = next.value;\n            return next.done ? value :\n                (!value || typeof value.then !== 'function' ?\n                    isArray(value) ? Promise.all(value).then(onSuccess, onError) : onSuccess(value) :\n                    value.then(onSuccess, onError));\n        };\n    }\n    return step(callNext)();\n}\n\nfunction extractTransactionArgs(mode, _tableArgs_, scopeFunc) {\n    var i = arguments.length;\n    if (i < 2)\n        throw new exceptions.InvalidArgument(\"Too few arguments\");\n    var args = new Array(i - 1);\n    while (--i)\n        args[i - 1] = arguments[i];\n    scopeFunc = args.pop();\n    var tables = flatten(args);\n    return [mode, tables, scopeFunc];\n}\nfunction enterTransactionScope(db, mode, storeNames, parentTransaction, scopeFunc) {\n    return DexiePromise.resolve().then(() => {\n        const transless = PSD.transless || PSD;\n        const trans = db._createTransaction(mode, storeNames, db._dbSchema, parentTransaction);\n        trans.explicit = true;\n        const zoneProps = {\n            trans: trans,\n            transless: transless\n        };\n        if (parentTransaction) {\n            trans.idbtrans = parentTransaction.idbtrans;\n        }\n        else {\n            try {\n                trans.create();\n                db._state.PR1398_maxLoop = 3;\n            }\n            catch (ex) {\n                if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                    console.warn('Dexie: Need to reopen db');\n                    db._close();\n                    return db.open().then(() => enterTransactionScope(db, mode, storeNames, null, scopeFunc));\n                }\n                return rejection(ex);\n            }\n        }\n        const scopeFuncIsAsync = isAsyncFunction(scopeFunc);\n        if (scopeFuncIsAsync) {\n            incrementExpectedAwaits();\n        }\n        let returnValue;\n        const promiseFollowed = DexiePromise.follow(() => {\n            returnValue = scopeFunc.call(trans, trans);\n            if (returnValue) {\n                if (scopeFuncIsAsync) {\n                    var decrementor = decrementExpectedAwaits.bind(null, null);\n                    returnValue.then(decrementor, decrementor);\n                }\n                else if (typeof returnValue.next === 'function' && typeof returnValue.throw === 'function') {\n                    returnValue = awaitIterator(returnValue);\n                }\n            }\n        }, zoneProps);\n        return (returnValue && typeof returnValue.then === 'function' ?\n            DexiePromise.resolve(returnValue).then(x => trans.active ?\n                x\n                : rejection(new exceptions.PrematureCommit(\"Transaction committed too early. See http://bit.ly/2kdckMn\")))\n            : promiseFollowed.then(() => returnValue)).then(x => {\n            if (parentTransaction)\n                trans._resolve();\n            return trans._completion.then(() => x);\n        }).catch(e => {\n            trans._reject(e);\n            return rejection(e);\n        });\n    });\n}\n\nfunction pad(a, value, count) {\n    const result = isArray(a) ? a.slice() : [a];\n    for (let i = 0; i < count; ++i)\n        result.push(value);\n    return result;\n}\nfunction createVirtualIndexMiddleware(down) {\n    return {\n        ...down,\n        table(tableName) {\n            const table = down.table(tableName);\n            const { schema } = table;\n            const indexLookup = {};\n            const allVirtualIndexes = [];\n            function addVirtualIndexes(keyPath, keyTail, lowLevelIndex) {\n                const keyPathAlias = getKeyPathAlias(keyPath);\n                const indexList = (indexLookup[keyPathAlias] = indexLookup[keyPathAlias] || []);\n                const keyLength = keyPath == null ? 0 : typeof keyPath === 'string' ? 1 : keyPath.length;\n                const isVirtual = keyTail > 0;\n                const virtualIndex = {\n                    ...lowLevelIndex,\n                    name: isVirtual\n                        ? `${keyPathAlias}(virtual-from:${lowLevelIndex.name})`\n                        : lowLevelIndex.name,\n                    lowLevelIndex,\n                    isVirtual,\n                    keyTail,\n                    keyLength,\n                    extractKey: getKeyExtractor(keyPath),\n                    unique: !isVirtual && lowLevelIndex.unique\n                };\n                indexList.push(virtualIndex);\n                if (!virtualIndex.isPrimaryKey) {\n                    allVirtualIndexes.push(virtualIndex);\n                }\n                if (keyLength > 1) {\n                    const virtualKeyPath = keyLength === 2 ?\n                        keyPath[0] :\n                        keyPath.slice(0, keyLength - 1);\n                    addVirtualIndexes(virtualKeyPath, keyTail + 1, lowLevelIndex);\n                }\n                indexList.sort((a, b) => a.keyTail - b.keyTail);\n                return virtualIndex;\n            }\n            const primaryKey = addVirtualIndexes(schema.primaryKey.keyPath, 0, schema.primaryKey);\n            indexLookup[\":id\"] = [primaryKey];\n            for (const index of schema.indexes) {\n                addVirtualIndexes(index.keyPath, 0, index);\n            }\n            function findBestIndex(keyPath) {\n                const result = indexLookup[getKeyPathAlias(keyPath)];\n                return result && result[0];\n            }\n            function translateRange(range, keyTail) {\n                return {\n                    type: range.type === 1  ?\n                        2  :\n                        range.type,\n                    lower: pad(range.lower, range.lowerOpen ? down.MAX_KEY : down.MIN_KEY, keyTail),\n                    lowerOpen: true,\n                    upper: pad(range.upper, range.upperOpen ? down.MIN_KEY : down.MAX_KEY, keyTail),\n                    upperOpen: true\n                };\n            }\n            function translateRequest(req) {\n                const index = req.query.index;\n                return index.isVirtual ? {\n                    ...req,\n                    query: {\n                        index: index.lowLevelIndex,\n                        range: translateRange(req.query.range, index.keyTail)\n                    }\n                } : req;\n            }\n            const result = {\n                ...table,\n                schema: {\n                    ...schema,\n                    primaryKey,\n                    indexes: allVirtualIndexes,\n                    getIndexByKeyPath: findBestIndex\n                },\n                count(req) {\n                    return table.count(translateRequest(req));\n                },\n                query(req) {\n                    return table.query(translateRequest(req));\n                },\n                openCursor(req) {\n                    const { keyTail, isVirtual, keyLength } = req.query.index;\n                    if (!isVirtual)\n                        return table.openCursor(req);\n                    function createVirtualCursor(cursor) {\n                        function _continue(key) {\n                            key != null ?\n                                cursor.continue(pad(key, req.reverse ? down.MAX_KEY : down.MIN_KEY, keyTail)) :\n                                req.unique ?\n                                    cursor.continue(cursor.key.slice(0, keyLength)\n                                        .concat(req.reverse\n                                        ? down.MIN_KEY\n                                        : down.MAX_KEY, keyTail)) :\n                                    cursor.continue();\n                        }\n                        const virtualCursor = Object.create(cursor, {\n                            continue: { value: _continue },\n                            continuePrimaryKey: {\n                                value(key, primaryKey) {\n                                    cursor.continuePrimaryKey(pad(key, down.MAX_KEY, keyTail), primaryKey);\n                                }\n                            },\n                            primaryKey: {\n                                get() {\n                                    return cursor.primaryKey;\n                                }\n                            },\n                            key: {\n                                get() {\n                                    const key = cursor.key;\n                                    return keyLength === 1 ?\n                                        key[0] :\n                                        key.slice(0, keyLength);\n                                }\n                            },\n                            value: {\n                                get() {\n                                    return cursor.value;\n                                }\n                            }\n                        });\n                        return virtualCursor;\n                    }\n                    return table.openCursor(translateRequest(req))\n                        .then(cursor => cursor && createVirtualCursor(cursor));\n                }\n            };\n            return result;\n        }\n    };\n}\nconst virtualIndexMiddleware = {\n    stack: \"dbcore\",\n    name: \"VirtualIndexMiddleware\",\n    level: 1,\n    create: createVirtualIndexMiddleware\n};\n\nfunction getObjectDiff(a, b, rv, prfx) {\n    rv = rv || {};\n    prfx = prfx || '';\n    keys(a).forEach((prop) => {\n        if (!hasOwn(b, prop)) {\n            rv[prfx + prop] = undefined;\n        }\n        else {\n            var ap = a[prop], bp = b[prop];\n            if (typeof ap === 'object' && typeof bp === 'object' && ap && bp) {\n                const apTypeName = toStringTag(ap);\n                const bpTypeName = toStringTag(bp);\n                if (apTypeName !== bpTypeName) {\n                    rv[prfx + prop] = b[prop];\n                }\n                else if (apTypeName === 'Object') {\n                    getObjectDiff(ap, bp, rv, prfx + prop + '.');\n                }\n                else if (ap !== bp) {\n                    rv[prfx + prop] = b[prop];\n                }\n            }\n            else if (ap !== bp)\n                rv[prfx + prop] = b[prop];\n        }\n    });\n    keys(b).forEach((prop) => {\n        if (!hasOwn(a, prop)) {\n            rv[prfx + prop] = b[prop];\n        }\n    });\n    return rv;\n}\n\nfunction getEffectiveKeys(primaryKey, req) {\n    if (req.type === 'delete')\n        return req.keys;\n    return req.keys || req.values.map(primaryKey.extractKey);\n}\n\nconst hooksMiddleware = {\n    stack: \"dbcore\",\n    name: \"HooksMiddleware\",\n    level: 2,\n    create: (downCore) => ({\n        ...downCore,\n        table(tableName) {\n            const downTable = downCore.table(tableName);\n            const { primaryKey } = downTable.schema;\n            const tableMiddleware = {\n                ...downTable,\n                mutate(req) {\n                    const dxTrans = PSD.trans;\n                    const { deleting, creating, updating } = dxTrans.table(tableName).hook;\n                    switch (req.type) {\n                        case 'add':\n                            if (creating.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'put':\n                            if (creating.fire === nop && updating.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'delete':\n                            if (deleting.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'deleteRange':\n                            if (deleting.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => deleteRange(req), true);\n                    }\n                    return downTable.mutate(req);\n                    function addPutOrDelete(req) {\n                        const dxTrans = PSD.trans;\n                        const keys = req.keys || getEffectiveKeys(primaryKey, req);\n                        if (!keys)\n                            throw new Error(\"Keys missing\");\n                        req = req.type === 'add' || req.type === 'put' ?\n                            { ...req, keys } :\n                            { ...req };\n                        if (req.type !== 'delete')\n                            req.values = [...req.values];\n                        if (req.keys)\n                            req.keys = [...req.keys];\n                        return getExistingValues(downTable, req, keys).then(existingValues => {\n                            const contexts = keys.map((key, i) => {\n                                const existingValue = existingValues[i];\n                                const ctx = { onerror: null, onsuccess: null };\n                                if (req.type === 'delete') {\n                                    deleting.fire.call(ctx, key, existingValue, dxTrans);\n                                }\n                                else if (req.type === 'add' || existingValue === undefined) {\n                                    const generatedPrimaryKey = creating.fire.call(ctx, key, req.values[i], dxTrans);\n                                    if (key == null && generatedPrimaryKey != null) {\n                                        key = generatedPrimaryKey;\n                                        req.keys[i] = key;\n                                        if (!primaryKey.outbound) {\n                                            setByKeyPath(req.values[i], primaryKey.keyPath, key);\n                                        }\n                                    }\n                                }\n                                else {\n                                    const objectDiff = getObjectDiff(existingValue, req.values[i]);\n                                    const additionalChanges = updating.fire.call(ctx, objectDiff, key, existingValue, dxTrans);\n                                    if (additionalChanges) {\n                                        const requestedValue = req.values[i];\n                                        Object.keys(additionalChanges).forEach(keyPath => {\n                                            if (hasOwn(requestedValue, keyPath)) {\n                                                requestedValue[keyPath] = additionalChanges[keyPath];\n                                            }\n                                            else {\n                                                setByKeyPath(requestedValue, keyPath, additionalChanges[keyPath]);\n                                            }\n                                        });\n                                    }\n                                }\n                                return ctx;\n                            });\n                            return downTable.mutate(req).then(({ failures, results, numFailures, lastResult }) => {\n                                for (let i = 0; i < keys.length; ++i) {\n                                    const primKey = results ? results[i] : keys[i];\n                                    const ctx = contexts[i];\n                                    if (primKey == null) {\n                                        ctx.onerror && ctx.onerror(failures[i]);\n                                    }\n                                    else {\n                                        ctx.onsuccess && ctx.onsuccess(req.type === 'put' && existingValues[i] ?\n                                            req.values[i] :\n                                            primKey\n                                        );\n                                    }\n                                }\n                                return { failures, results, numFailures, lastResult };\n                            }).catch(error => {\n                                contexts.forEach(ctx => ctx.onerror && ctx.onerror(error));\n                                return Promise.reject(error);\n                            });\n                        });\n                    }\n                    function deleteRange(req) {\n                        return deleteNextChunk(req.trans, req.range, 10000);\n                    }\n                    function deleteNextChunk(trans, range, limit) {\n                        return downTable.query({ trans, values: false, query: { index: primaryKey, range }, limit })\n                            .then(({ result }) => {\n                            return addPutOrDelete({ type: 'delete', keys: result, trans }).then(res => {\n                                if (res.numFailures > 0)\n                                    return Promise.reject(res.failures[0]);\n                                if (result.length < limit) {\n                                    return { failures: [], numFailures: 0, lastResult: undefined };\n                                }\n                                else {\n                                    return deleteNextChunk(trans, { ...range, lower: result[result.length - 1], lowerOpen: true }, limit);\n                                }\n                            });\n                        });\n                    }\n                }\n            };\n            return tableMiddleware;\n        },\n    })\n};\nfunction getExistingValues(table, req, effectiveKeys) {\n    return req.type === \"add\"\n        ? Promise.resolve([])\n        : table.getMany({ trans: req.trans, keys: effectiveKeys, cache: \"immutable\" });\n}\n\nfunction getFromTransactionCache(keys, cache, clone) {\n    try {\n        if (!cache)\n            return null;\n        if (cache.keys.length < keys.length)\n            return null;\n        const result = [];\n        for (let i = 0, j = 0; i < cache.keys.length && j < keys.length; ++i) {\n            if (cmp(cache.keys[i], keys[j]) !== 0)\n                continue;\n            result.push(clone ? deepClone(cache.values[i]) : cache.values[i]);\n            ++j;\n        }\n        return result.length === keys.length ? result : null;\n    }\n    catch (_a) {\n        return null;\n    }\n}\nconst cacheExistingValuesMiddleware = {\n    stack: \"dbcore\",\n    level: -1,\n    create: (core) => {\n        return {\n            table: (tableName) => {\n                const table = core.table(tableName);\n                return {\n                    ...table,\n                    getMany: (req) => {\n                        if (!req.cache) {\n                            return table.getMany(req);\n                        }\n                        const cachedResult = getFromTransactionCache(req.keys, req.trans[\"_cache\"], req.cache === \"clone\");\n                        if (cachedResult) {\n                            return DexiePromise.resolve(cachedResult);\n                        }\n                        return table.getMany(req).then((res) => {\n                            req.trans[\"_cache\"] = {\n                                keys: req.keys,\n                                values: req.cache === \"clone\" ? deepClone(res) : res,\n                            };\n                            return res;\n                        });\n                    },\n                    mutate: (req) => {\n                        if (req.type !== \"add\")\n                            req.trans[\"_cache\"] = null;\n                        return table.mutate(req);\n                    },\n                };\n            },\n        };\n    },\n};\n\nfunction isCachableContext(ctx, table) {\n    return (ctx.trans.mode === 'readonly' &&\n        !!ctx.subscr &&\n        !ctx.trans.explicit &&\n        ctx.trans.db._options.cache !== 'disabled' &&\n        !table.schema.primaryKey.outbound);\n}\n\nfunction isCachableRequest(type, req) {\n    switch (type) {\n        case 'query':\n            return req.values && !req.unique;\n        case 'get':\n            return false;\n        case 'getMany':\n            return false;\n        case 'count':\n            return false;\n        case 'openCursor':\n            return false;\n    }\n}\n\nconst observabilityMiddleware = {\n    stack: \"dbcore\",\n    level: 0,\n    name: \"Observability\",\n    create: (core) => {\n        const dbName = core.schema.name;\n        const FULL_RANGE = new RangeSet(core.MIN_KEY, core.MAX_KEY);\n        return {\n            ...core,\n            transaction: (stores, mode, options) => {\n                if (PSD.subscr && mode !== 'readonly') {\n                    throw new exceptions.ReadOnly(`Readwrite transaction in liveQuery context. Querier source: ${PSD.querier}`);\n                }\n                return core.transaction(stores, mode, options);\n            },\n            table: (tableName) => {\n                const table = core.table(tableName);\n                const { schema } = table;\n                const { primaryKey } = schema;\n                const { extractKey, outbound } = primaryKey;\n                const tableClone = {\n                    ...table,\n                    mutate: (req) => {\n                        const trans = req.trans;\n                        const mutatedParts = req.mutatedParts || (req.mutatedParts = {});\n                        const getRangeSet = (indexName) => {\n                            const part = `idb://${dbName}/${tableName}/${indexName}`;\n                            return (mutatedParts[part] ||\n                                (mutatedParts[part] = new RangeSet()));\n                        };\n                        const pkRangeSet = getRangeSet(\"\");\n                        const delsRangeSet = getRangeSet(\":dels\");\n                        const { type } = req;\n                        let [keys, newObjs] = req.type === \"deleteRange\"\n                            ? [req.range]\n                            : req.type === \"delete\"\n                                ? [req.keys]\n                                : req.values.length < 50\n                                    ? [getEffectiveKeys(primaryKey, req).filter(id => id), req.values]\n                                    : [];\n                        const oldCache = req.trans[\"_cache\"];\n                        if (isArray(keys)) {\n                            pkRangeSet.addKeys(keys);\n                            const oldObjs = type === 'delete' || keys.length === newObjs.length ? getFromTransactionCache(keys, oldCache) : null;\n                            if (!oldObjs && type !== \"add\") {\n                                delsRangeSet.addKeys(keys);\n                            }\n                            if (oldObjs || newObjs) {\n                                trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs);\n                            }\n                        }\n                        else if (keys) {\n                            const range = { from: keys.lower, to: keys.upper };\n                            delsRangeSet.add(range);\n                            pkRangeSet.add(range);\n                        }\n                        else {\n                            pkRangeSet.add(FULL_RANGE);\n                            delsRangeSet.add(FULL_RANGE);\n                            schema.indexes.forEach(idx => getRangeSet(idx.name).add(FULL_RANGE));\n                        }\n                        return table.mutate(req).then((res) => {\n                            if (keys && (req.type === 'add' || req.type === 'put')) {\n                                pkRangeSet.addKeys(res.results);\n                            }\n                            trans.mutatedParts = extendObservabilitySet(trans.mutatedParts || {}, mutatedParts);\n                            return res;\n                        });\n                    },\n                };\n                const getRange = ({ query: { index, range }, }) => {\n                    var _a, _b;\n                    return [\n                        index,\n                        new RangeSet((_a = range.lower) !== null && _a !== void 0 ? _a : core.MIN_KEY, (_b = range.upper) !== null && _b !== void 0 ? _b : core.MAX_KEY),\n                    ];\n                };\n                const readSubscribers = {\n                    get: (req) => [primaryKey, new RangeSet(req.key)],\n                    getMany: (req) => [primaryKey, new RangeSet().addKeys(req.keys)],\n                    count: getRange,\n                    query: getRange,\n                    openCursor: getRange,\n                };\n                keys(readSubscribers).forEach(method => {\n                    tableClone[method] = function (req) {\n                        const { subscr } = PSD;\n                        const isLiveQuery = !!subscr;\n                        let cachable = isCachableContext(PSD, table) && isCachableRequest(method, req);\n                        const obsSet = cachable\n                            ? req.obsSet = {}\n                            : subscr;\n                        if (isLiveQuery) {\n                            const getRangeSet = (indexName) => {\n                                const part = `idb://${dbName}/${tableName}/${indexName}`;\n                                return (obsSet[part] ||\n                                    (obsSet[part] = new RangeSet()));\n                            };\n                            const pkRangeSet = getRangeSet(\"\");\n                            const delsRangeSet = getRangeSet(\":dels\");\n                            const [queriedIndex, queriedRanges] = readSubscribers[method](req);\n                            getRangeSet(queriedIndex.name || \"\").add(queriedRanges);\n                            if (!queriedIndex.isPrimaryKey) {\n                                if (method === \"count\") {\n                                    delsRangeSet.add(FULL_RANGE);\n                                }\n                                else {\n                                    const keysPromise = method === \"query\" &&\n                                        outbound &&\n                                        req.values &&\n                                        table.query({\n                                            ...req,\n                                            values: false,\n                                        });\n                                    return table[method].apply(this, arguments).then((res) => {\n                                        if (method === \"query\") {\n                                            if (outbound && req.values) {\n                                                return keysPromise.then(({ result: resultingKeys }) => {\n                                                    pkRangeSet.addKeys(resultingKeys);\n                                                    return res;\n                                                });\n                                            }\n                                            const pKeys = req.values\n                                                ? res.result.map(extractKey)\n                                                : res.result;\n                                            if (req.values) {\n                                                pkRangeSet.addKeys(pKeys);\n                                            }\n                                            else {\n                                                delsRangeSet.addKeys(pKeys);\n                                            }\n                                        }\n                                        else if (method === \"openCursor\") {\n                                            const cursor = res;\n                                            const wantValues = req.values;\n                                            return (cursor &&\n                                                Object.create(cursor, {\n                                                    key: {\n                                                        get() {\n                                                            delsRangeSet.addKey(cursor.primaryKey);\n                                                            return cursor.key;\n                                                        },\n                                                    },\n                                                    primaryKey: {\n                                                        get() {\n                                                            const pkey = cursor.primaryKey;\n                                                            delsRangeSet.addKey(pkey);\n                                                            return pkey;\n                                                        },\n                                                    },\n                                                    value: {\n                                                        get() {\n                                                            wantValues && pkRangeSet.addKey(cursor.primaryKey);\n                                                            return cursor.value;\n                                                        },\n                                                    },\n                                                }));\n                                        }\n                                        return res;\n                                    });\n                                }\n                            }\n                        }\n                        return table[method].apply(this, arguments);\n                    };\n                });\n                return tableClone;\n            },\n        };\n    },\n};\nfunction trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs) {\n    function addAffectedIndex(ix) {\n        const rangeSet = getRangeSet(ix.name || \"\");\n        function extractKey(obj) {\n            return obj != null ? ix.extractKey(obj) : null;\n        }\n        const addKeyOrKeys = (key) => ix.multiEntry && isArray(key)\n            ? key.forEach(key => rangeSet.addKey(key))\n            : rangeSet.addKey(key);\n        (oldObjs || newObjs).forEach((_, i) => {\n            const oldKey = oldObjs && extractKey(oldObjs[i]);\n            const newKey = newObjs && extractKey(newObjs[i]);\n            if (cmp(oldKey, newKey) !== 0) {\n                if (oldKey != null)\n                    addKeyOrKeys(oldKey);\n                if (newKey != null)\n                    addKeyOrKeys(newKey);\n            }\n        });\n    }\n    schema.indexes.forEach(addAffectedIndex);\n}\n\nfunction isAboveLower(key, range) {\n    return range.lower === undefined\n        ? true\n        : range.lowerOpen\n            ? cmp(key, range.lower) > 0\n            : cmp(key, range.lower) >= 0;\n}\nfunction isBelowUpper(key, range) {\n    return range.upper === undefined\n        ? true\n        : range.upperOpen\n            ? cmp(key, range.upper) < 0\n            : cmp(key, range.upper) <= 0;\n}\nfunction isWithinRange(key, range) {\n    return isAboveLower(key, range) && isBelowUpper(key, range);\n}\n\nfunction applyOptimisticOps(result, req, ops, table, cacheEntry, immutable) {\n    if (!ops || ops.length === 0)\n        return result;\n    const index = req.query.index;\n    const primaryKey = table.schema.primaryKey;\n    const extractPrimKey = primaryKey.extractKey;\n    const extractIndex = index.extractKey;\n    const extractLowLevelIndex = (index.lowLevelIndex || index).extractKey;\n    let finalResult = ops.reduce((result, op) => {\n        let modifedResult = result;\n        const includedValues = op.type === 'add' || op.type === 'put'\n            ? op.values.filter((v) => isWithinRange(extractIndex(v), req.query.range)).map(v => {\n                v = deepClone(v);\n                if (immutable)\n                    Object.freeze(v);\n                return v;\n            })\n            : [];\n        switch (op.type) {\n            case 'add':\n                modifedResult = result.concat(req.values\n                    ? includedValues\n                    : includedValues.map((v) => extractPrimKey(v)));\n                break;\n            case 'put':\n                const keySet = new RangeSet().addKeys(op.values.map((v) => extractPrimKey(v)));\n                modifedResult = result\n                    .filter((item) => {\n                    const key = req.values ? extractPrimKey(item) : item;\n                    return !rangesOverlap(new RangeSet(key), keySet);\n                })\n                    .concat(req.values\n                    ? includedValues\n                    : includedValues.map((v) => extractPrimKey(v)));\n                break;\n            case 'delete':\n                const keysToDelete = new RangeSet().addKeys(op.keys);\n                modifedResult = result.filter((item) => {\n                    const key = req.values ? extractPrimKey(item) : item;\n                    return !rangesOverlap(new RangeSet(key), keysToDelete);\n                });\n                break;\n            case 'deleteRange':\n                const range = op.range;\n                modifedResult = result.filter((item) => !isWithinRange(extractPrimKey(item), range));\n                break;\n        }\n        return modifedResult;\n    }, result);\n    if (finalResult === result)\n        return result;\n    finalResult.sort((a, b) => cmp(extractLowLevelIndex(a), extractLowLevelIndex(b)) ||\n        cmp(extractPrimKey(a), extractPrimKey(b)));\n    if (req.limit && req.limit < Infinity) {\n        if (finalResult.length > req.limit) {\n            finalResult.length = req.limit;\n        }\n        else if (result.length === req.limit && finalResult.length < req.limit) {\n            cacheEntry.dirty = true;\n        }\n    }\n    return immutable ? Object.freeze(finalResult) : finalResult;\n}\n\nfunction areRangesEqual(r1, r2) {\n    return (cmp(r1.lower, r2.lower) === 0 &&\n        cmp(r1.upper, r2.upper) === 0 &&\n        !!r1.lowerOpen === !!r2.lowerOpen &&\n        !!r1.upperOpen === !!r2.upperOpen);\n}\n\nfunction compareLowers(lower1, lower2, lowerOpen1, lowerOpen2) {\n    if (lower1 === undefined)\n        return lower2 !== undefined ? -1 : 0;\n    if (lower2 === undefined)\n        return 1;\n    const c = cmp(lower1, lower2);\n    if (c === 0) {\n        if (lowerOpen1 && lowerOpen2)\n            return 0;\n        if (lowerOpen1)\n            return 1;\n        if (lowerOpen2)\n            return -1;\n    }\n    return c;\n}\nfunction compareUppers(upper1, upper2, upperOpen1, upperOpen2) {\n    if (upper1 === undefined)\n        return upper2 !== undefined ? 1 : 0;\n    if (upper2 === undefined)\n        return -1;\n    const c = cmp(upper1, upper2);\n    if (c === 0) {\n        if (upperOpen1 && upperOpen2)\n            return 0;\n        if (upperOpen1)\n            return -1;\n        if (upperOpen2)\n            return 1;\n    }\n    return c;\n}\nfunction isSuperRange(r1, r2) {\n    return (compareLowers(r1.lower, r2.lower, r1.lowerOpen, r2.lowerOpen) <= 0 &&\n        compareUppers(r1.upper, r2.upper, r1.upperOpen, r2.upperOpen) >= 0);\n}\n\nfunction findCompatibleQuery(dbName, tableName, type, req) {\n    const tblCache = cache[`idb://${dbName}/${tableName}`];\n    if (!tblCache)\n        return [];\n    const queries = tblCache.queries[type];\n    if (!queries)\n        return [null, false, tblCache, null];\n    const indexName = req.query ? req.query.index.name : null;\n    const entries = queries[indexName || ''];\n    if (!entries)\n        return [null, false, tblCache, null];\n    switch (type) {\n        case 'query':\n            const equalEntry = entries.find((entry) => entry.req.limit === req.limit &&\n                entry.req.values === req.values &&\n                areRangesEqual(entry.req.query.range, req.query.range));\n            if (equalEntry)\n                return [\n                    equalEntry,\n                    true,\n                    tblCache,\n                    entries,\n                ];\n            const superEntry = entries.find((entry) => {\n                const limit = 'limit' in entry.req ? entry.req.limit : Infinity;\n                return (limit >= req.limit &&\n                    (req.values ? entry.req.values : true) &&\n                    isSuperRange(entry.req.query.range, req.query.range));\n            });\n            return [superEntry, false, tblCache, entries];\n        case 'count':\n            const countQuery = entries.find((entry) => areRangesEqual(entry.req.query.range, req.query.range));\n            return [countQuery, !!countQuery, tblCache, entries];\n    }\n}\n\nfunction subscribeToCacheEntry(cacheEntry, container, requery, signal) {\n    cacheEntry.subscribers.add(requery);\n    signal.addEventListener(\"abort\", () => {\n        cacheEntry.subscribers.delete(requery);\n        if (cacheEntry.subscribers.size === 0) {\n            enqueForDeletion(cacheEntry, container);\n        }\n    });\n}\nfunction enqueForDeletion(cacheEntry, container) {\n    setTimeout(() => {\n        if (cacheEntry.subscribers.size === 0) {\n            delArrayItem(container, cacheEntry);\n        }\n    }, 3000);\n}\n\nconst cacheMiddleware = {\n    stack: 'dbcore',\n    level: 0,\n    name: 'Cache',\n    create: (core) => {\n        const dbName = core.schema.name;\n        const coreMW = {\n            ...core,\n            transaction: (stores, mode, options) => {\n                const idbtrans = core.transaction(stores, mode, options);\n                if (mode === 'readwrite') {\n                    const ac = new AbortController();\n                    const { signal } = ac;\n                    const endTransaction = (wasCommitted) => () => {\n                        ac.abort();\n                        if (mode === 'readwrite') {\n                            const affectedSubscribers = new Set();\n                            for (const storeName of stores) {\n                                const tblCache = cache[`idb://${dbName}/${storeName}`];\n                                const table = core.table(storeName);\n                                if (tblCache) {\n                                    const ops = tblCache.optimisticOps.filter((op) => op.trans === idbtrans);\n                                    if (ops.length > 0) {\n                                        tblCache.optimisticOps = tblCache.optimisticOps.filter((op) => op.trans !== idbtrans);\n                                        for (const entries of Object.values(tblCache.queries.query)) {\n                                            for (const entry of entries.slice()) {\n                                                if (entry.res != null &&\n                                                    idbtrans.mutatedParts\n) {\n                                                    if (wasCommitted && !entry.dirty) {\n                                                        const freezeResults = Object.isFrozen(entry.res);\n                                                        const modRes = applyOptimisticOps(entry.res, entry.req, ops, table, entry, freezeResults);\n                                                        if (entry.dirty) {\n                                                            delArrayItem(entries, entry);\n                                                            entry.subscribers.forEach((requery) => affectedSubscribers.add(requery));\n                                                        }\n                                                        else if (modRes !== entry.res) {\n                                                            entry.res = modRes;\n                                                            entry.promise = DexiePromise.resolve({ result: modRes });\n                                                        }\n                                                    }\n                                                    else {\n                                                        if (entry.dirty) {\n                                                            delArrayItem(entries, entry);\n                                                        }\n                                                        entry.subscribers.forEach((requery) => affectedSubscribers.add(requery));\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            affectedSubscribers.forEach((requery) => requery());\n                        }\n                    };\n                    idbtrans.addEventListener('abort', endTransaction(false), {\n                        signal,\n                    });\n                    idbtrans.addEventListener('error', endTransaction(false), {\n                        signal,\n                    });\n                    idbtrans.addEventListener('complete', endTransaction(true), {\n                        signal,\n                    });\n                }\n                return idbtrans;\n            },\n            table(tableName) {\n                const downTable = core.table(tableName);\n                const primKey = downTable.schema.primaryKey;\n                const tableMW = {\n                    ...downTable,\n                    mutate(req) {\n                        if (primKey.outbound ||\n                            PSD.trans.db._options.cache === 'disabled'\n                        ) {\n                            return downTable.mutate(req);\n                        }\n                        const tblCache = cache[`idb://${dbName}/${tableName}`];\n                        if (!tblCache)\n                            return downTable.mutate(req);\n                        const promise = downTable.mutate(req);\n                        if ((req.type === 'add' || req.type === 'put') && (req.values.length >= 50 || getEffectiveKeys(primKey, req).some(key => key == null))) {\n                            promise.then((res) => {\n                                const reqWithResolvedKeys = {\n                                    ...req,\n                                    values: req.values.map((value, i) => {\n                                        const valueWithKey = primKey.keyPath.includes('.')\n                                            ? deepClone(value)\n                                            : {\n                                                ...value,\n                                            };\n                                        setByKeyPath(valueWithKey, primKey.keyPath, res.results[i]);\n                                        return valueWithKey;\n                                    })\n                                };\n                                tblCache.optimisticOps.push(reqWithResolvedKeys);\n                                queueMicrotask(() => signalSubscribersLazily(req.mutatedParts));\n                            });\n                        }\n                        else {\n                            tblCache.optimisticOps.push(req);\n                            signalSubscribersLazily(req.mutatedParts);\n                            promise.catch(() => {\n                                delArrayItem(tblCache.optimisticOps, req);\n                                signalSubscribersLazily(req.mutatedParts);\n                            });\n                        }\n                        return promise;\n                    },\n                    query(req) {\n                        if (!isCachableContext(PSD, downTable) || !isCachableRequest(\"query\", req))\n                            return downTable.query(req);\n                        const freezeResults = PSD.trans.db._options.cache === 'immutable';\n                        const { requery, signal } = PSD;\n                        let [cacheEntry, exactMatch, tblCache, container] = findCompatibleQuery(dbName, tableName, 'query', req);\n                        if (cacheEntry && exactMatch) {\n                            cacheEntry.obsSet = req.obsSet;\n                        }\n                        else {\n                            const promise = downTable.query(req).then((res) => {\n                                const result = res.result;\n                                cacheEntry.res = result;\n                                if (freezeResults) {\n                                    for (let i = 0, l = result.length; i < l; ++i) {\n                                        Object.freeze(result[i]);\n                                    }\n                                    Object.freeze(result);\n                                }\n                                else {\n                                    res.result = deepClone(result);\n                                }\n                                return res;\n                            }).catch(error => {\n                                if (container && cacheEntry)\n                                    delArrayItem(container, cacheEntry);\n                                return Promise.reject(error);\n                            });\n                            cacheEntry = {\n                                obsSet: req.obsSet,\n                                promise,\n                                subscribers: new Set(),\n                                type: 'query',\n                                req,\n                                dirty: false,\n                            };\n                            if (container) {\n                                container.push(cacheEntry);\n                            }\n                            else {\n                                container = [cacheEntry];\n                                if (!tblCache) {\n                                    tblCache = cache[`idb://${dbName}/${tableName}`] = {\n                                        queries: {\n                                            query: {},\n                                            count: {},\n                                        },\n                                        objs: new Map(),\n                                        optimisticOps: [],\n                                        unsignaledParts: {}\n                                    };\n                                }\n                                tblCache.queries.query[req.query.index.name || ''] = container;\n                            }\n                        }\n                        subscribeToCacheEntry(cacheEntry, container, requery, signal);\n                        return cacheEntry.promise.then((res) => {\n                            return {\n                                result: applyOptimisticOps(res.result, req, tblCache === null || tblCache === void 0 ? void 0 : tblCache.optimisticOps, downTable, cacheEntry, freezeResults),\n                            };\n                        });\n                    },\n                };\n                return tableMW;\n            },\n        };\n        return coreMW;\n    },\n};\n\nfunction vipify(target, vipDb) {\n    return new Proxy(target, {\n        get(target, prop, receiver) {\n            if (prop === 'db')\n                return vipDb;\n            return Reflect.get(target, prop, receiver);\n        }\n    });\n}\n\nclass Dexie$1 {\n    constructor(name, options) {\n        this._middlewares = {};\n        this.verno = 0;\n        const deps = Dexie$1.dependencies;\n        this._options = options = {\n            addons: Dexie$1.addons,\n            autoOpen: true,\n            indexedDB: deps.indexedDB,\n            IDBKeyRange: deps.IDBKeyRange,\n            cache: 'cloned',\n            ...options\n        };\n        this._deps = {\n            indexedDB: options.indexedDB,\n            IDBKeyRange: options.IDBKeyRange\n        };\n        const { addons, } = options;\n        this._dbSchema = {};\n        this._versions = [];\n        this._storeNames = [];\n        this._allTables = {};\n        this.idbdb = null;\n        this._novip = this;\n        const state = {\n            dbOpenError: null,\n            isBeingOpened: false,\n            onReadyBeingFired: null,\n            openComplete: false,\n            dbReadyResolve: nop,\n            dbReadyPromise: null,\n            cancelOpen: nop,\n            openCanceller: null,\n            autoSchema: true,\n            PR1398_maxLoop: 3\n        };\n        state.dbReadyPromise = new DexiePromise(resolve => {\n            state.dbReadyResolve = resolve;\n        });\n        state.openCanceller = new DexiePromise((_, reject) => {\n            state.cancelOpen = reject;\n        });\n        this._state = state;\n        this.name = name;\n        this.on = Events(this, \"populate\", \"blocked\", \"versionchange\", \"close\", { ready: [promisableChain, nop] });\n        this.on.ready.subscribe = override(this.on.ready.subscribe, subscribe => {\n            return (subscriber, bSticky) => {\n                Dexie$1.vip(() => {\n                    const state = this._state;\n                    if (state.openComplete) {\n                        if (!state.dbOpenError)\n                            DexiePromise.resolve().then(subscriber);\n                        if (bSticky)\n                            subscribe(subscriber);\n                    }\n                    else if (state.onReadyBeingFired) {\n                        state.onReadyBeingFired.push(subscriber);\n                        if (bSticky)\n                            subscribe(subscriber);\n                    }\n                    else {\n                        subscribe(subscriber);\n                        const db = this;\n                        if (!bSticky)\n                            subscribe(function unsubscribe() {\n                                db.on.ready.unsubscribe(subscriber);\n                                db.on.ready.unsubscribe(unsubscribe);\n                            });\n                    }\n                });\n            };\n        });\n        this.Collection = createCollectionConstructor(this);\n        this.Table = createTableConstructor(this);\n        this.Transaction = createTransactionConstructor(this);\n        this.Version = createVersionConstructor(this);\n        this.WhereClause = createWhereClauseConstructor(this);\n        this.on(\"versionchange\", ev => {\n            if (ev.newVersion > 0)\n                console.warn(`Another connection wants to upgrade database '${this.name}'. Closing db now to resume the upgrade.`);\n            else\n                console.warn(`Another connection wants to delete database '${this.name}'. Closing db now to resume the delete request.`);\n            this.close({ disableAutoOpen: false });\n            this._state.openComplete = false;\n        });\n        this.on(\"blocked\", ev => {\n            if (!ev.newVersion || ev.newVersion < ev.oldVersion)\n                console.warn(`Dexie.delete('${this.name}') was blocked`);\n            else\n                console.warn(`Upgrade '${this.name}' blocked by other connection holding version ${ev.oldVersion / 10}`);\n        });\n        this._maxKey = getMaxKey(options.IDBKeyRange);\n        this._createTransaction = (mode, storeNames, dbschema, parentTransaction) => new this.Transaction(mode, storeNames, dbschema, this._options.chromeTransactionDurability, parentTransaction);\n        this._fireOnBlocked = ev => {\n            this.on(\"blocked\").fire(ev);\n            connections\n                .filter(c => c.name === this.name && c !== this && !c._state.vcFired)\n                .map(c => c.on(\"versionchange\").fire(ev));\n        };\n        this.use(cacheExistingValuesMiddleware);\n        this.use(cacheMiddleware);\n        this.use(observabilityMiddleware);\n        this.use(virtualIndexMiddleware);\n        this.use(hooksMiddleware);\n        const vipDB = new Proxy(this, {\n            get: (_, prop, receiver) => {\n                if (prop === '_vip')\n                    return true;\n                if (prop === 'table')\n                    return (tableName) => vipify(this.table(tableName), vipDB);\n                const rv = Reflect.get(_, prop, receiver);\n                if (rv instanceof Table)\n                    return vipify(rv, vipDB);\n                if (prop === 'tables')\n                    return rv.map(t => vipify(t, vipDB));\n                if (prop === '_createTransaction')\n                    return function () {\n                        const tx = rv.apply(this, arguments);\n                        return vipify(tx, vipDB);\n                    };\n                return rv;\n            }\n        });\n        this.vip = vipDB;\n        addons.forEach(addon => addon(this));\n    }\n    version(versionNumber) {\n        if (isNaN(versionNumber) || versionNumber < 0.1)\n            throw new exceptions.Type(`Given version is not a positive number`);\n        versionNumber = Math.round(versionNumber * 10) / 10;\n        if (this.idbdb || this._state.isBeingOpened)\n            throw new exceptions.Schema(\"Cannot add version when database is open\");\n        this.verno = Math.max(this.verno, versionNumber);\n        const versions = this._versions;\n        var versionInstance = versions.filter(v => v._cfg.version === versionNumber)[0];\n        if (versionInstance)\n            return versionInstance;\n        versionInstance = new this.Version(versionNumber);\n        versions.push(versionInstance);\n        versions.sort(lowerVersionFirst);\n        versionInstance.stores({});\n        this._state.autoSchema = false;\n        return versionInstance;\n    }\n    _whenReady(fn) {\n        return (this.idbdb && (this._state.openComplete || PSD.letThrough || this._vip)) ? fn() : new DexiePromise((resolve, reject) => {\n            if (this._state.openComplete) {\n                return reject(new exceptions.DatabaseClosed(this._state.dbOpenError));\n            }\n            if (!this._state.isBeingOpened) {\n                if (!this._options.autoOpen) {\n                    reject(new exceptions.DatabaseClosed());\n                    return;\n                }\n                this.open().catch(nop);\n            }\n            this._state.dbReadyPromise.then(resolve, reject);\n        }).then(fn);\n    }\n    use({ stack, create, level, name }) {\n        if (name)\n            this.unuse({ stack, name });\n        const middlewares = this._middlewares[stack] || (this._middlewares[stack] = []);\n        middlewares.push({ stack, create, level: level == null ? 10 : level, name });\n        middlewares.sort((a, b) => a.level - b.level);\n        return this;\n    }\n    unuse({ stack, name, create }) {\n        if (stack && this._middlewares[stack]) {\n            this._middlewares[stack] = this._middlewares[stack].filter(mw => create ? mw.create !== create :\n                name ? mw.name !== name :\n                    false);\n        }\n        return this;\n    }\n    open() {\n        return usePSD(globalPSD,\n        () => dexieOpen(this));\n    }\n    _close() {\n        const state = this._state;\n        const idx = connections.indexOf(this);\n        if (idx >= 0)\n            connections.splice(idx, 1);\n        if (this.idbdb) {\n            try {\n                this.idbdb.close();\n            }\n            catch (e) { }\n            this.idbdb = null;\n        }\n        state.dbReadyPromise = new DexiePromise(resolve => {\n            state.dbReadyResolve = resolve;\n        });\n        state.openCanceller = new DexiePromise((_, reject) => {\n            state.cancelOpen = reject;\n        });\n    }\n    close({ disableAutoOpen } = { disableAutoOpen: true }) {\n        this._close();\n        const state = this._state;\n        if (disableAutoOpen)\n            this._options.autoOpen = false;\n        state.dbOpenError = new exceptions.DatabaseClosed();\n        if (state.isBeingOpened)\n            state.cancelOpen(state.dbOpenError);\n    }\n    delete() {\n        const hasArguments = arguments.length > 0;\n        const state = this._state;\n        return new DexiePromise((resolve, reject) => {\n            const doDelete = () => {\n                this.close({ disableAutoOpen: false });\n                var req = this._deps.indexedDB.deleteDatabase(this.name);\n                req.onsuccess = wrap(() => {\n                    _onDatabaseDeleted(this._deps, this.name);\n                    resolve();\n                });\n                req.onerror = eventRejectHandler(reject);\n                req.onblocked = this._fireOnBlocked;\n            };\n            if (hasArguments)\n                throw new exceptions.InvalidArgument(\"Arguments not allowed in db.delete()\");\n            if (state.isBeingOpened) {\n                state.dbReadyPromise.then(doDelete);\n            }\n            else {\n                doDelete();\n            }\n        });\n    }\n    backendDB() {\n        return this.idbdb;\n    }\n    isOpen() {\n        return this.idbdb !== null;\n    }\n    hasBeenClosed() {\n        const dbOpenError = this._state.dbOpenError;\n        return dbOpenError && (dbOpenError.name === 'DatabaseClosed');\n    }\n    hasFailed() {\n        return this._state.dbOpenError !== null;\n    }\n    dynamicallyOpened() {\n        return this._state.autoSchema;\n    }\n    get tables() {\n        return keys(this._allTables).map(name => this._allTables[name]);\n    }\n    transaction() {\n        const args = extractTransactionArgs.apply(this, arguments);\n        return this._transaction.apply(this, args);\n    }\n    _transaction(mode, tables, scopeFunc) {\n        let parentTransaction = PSD.trans;\n        if (!parentTransaction || parentTransaction.db !== this || mode.indexOf('!') !== -1)\n            parentTransaction = null;\n        const onlyIfCompatible = mode.indexOf('?') !== -1;\n        mode = mode.replace('!', '').replace('?', '');\n        let idbMode, storeNames;\n        try {\n            storeNames = tables.map(table => {\n                var storeName = table instanceof this.Table ? table.name : table;\n                if (typeof storeName !== 'string')\n                    throw new TypeError(\"Invalid table argument to Dexie.transaction(). Only Table or String are allowed\");\n                return storeName;\n            });\n            if (mode == \"r\" || mode === READONLY)\n                idbMode = READONLY;\n            else if (mode == \"rw\" || mode == READWRITE)\n                idbMode = READWRITE;\n            else\n                throw new exceptions.InvalidArgument(\"Invalid transaction mode: \" + mode);\n            if (parentTransaction) {\n                if (parentTransaction.mode === READONLY && idbMode === READWRITE) {\n                    if (onlyIfCompatible) {\n                        parentTransaction = null;\n                    }\n                    else\n                        throw new exceptions.SubTransaction(\"Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY\");\n                }\n                if (parentTransaction) {\n                    storeNames.forEach(storeName => {\n                        if (parentTransaction && parentTransaction.storeNames.indexOf(storeName) === -1) {\n                            if (onlyIfCompatible) {\n                                parentTransaction = null;\n                            }\n                            else\n                                throw new exceptions.SubTransaction(\"Table \" + storeName +\n                                    \" not included in parent transaction.\");\n                        }\n                    });\n                }\n                if (onlyIfCompatible && parentTransaction && !parentTransaction.active) {\n                    parentTransaction = null;\n                }\n            }\n        }\n        catch (e) {\n            return parentTransaction ?\n                parentTransaction._promise(null, (_, reject) => { reject(e); }) :\n                rejection(e);\n        }\n        const enterTransaction = enterTransactionScope.bind(null, this, idbMode, storeNames, parentTransaction, scopeFunc);\n        return (parentTransaction ?\n            parentTransaction._promise(idbMode, enterTransaction, \"lock\") :\n            PSD.trans ?\n                usePSD(PSD.transless, () => this._whenReady(enterTransaction)) :\n                this._whenReady(enterTransaction));\n    }\n    table(tableName) {\n        if (!hasOwn(this._allTables, tableName)) {\n            throw new exceptions.InvalidTable(`Table ${tableName} does not exist`);\n        }\n        return this._allTables[tableName];\n    }\n}\n\nconst symbolObservable = typeof Symbol !== \"undefined\" && \"observable\" in Symbol\n    ? Symbol.observable\n    : \"@@observable\";\nclass Observable {\n    constructor(subscribe) {\n        this._subscribe = subscribe;\n    }\n    subscribe(x, error, complete) {\n        return this._subscribe(!x || typeof x === \"function\" ? { next: x, error, complete } : x);\n    }\n    [symbolObservable]() {\n        return this;\n    }\n}\n\nlet domDeps;\ntry {\n    domDeps = {\n        indexedDB: _global.indexedDB || _global.mozIndexedDB || _global.webkitIndexedDB || _global.msIndexedDB,\n        IDBKeyRange: _global.IDBKeyRange || _global.webkitIDBKeyRange\n    };\n}\ncatch (e) {\n    domDeps = { indexedDB: null, IDBKeyRange: null };\n}\n\nfunction liveQuery(querier) {\n    let hasValue = false;\n    let currentValue;\n    const observable = new Observable((observer) => {\n        const scopeFuncIsAsync = isAsyncFunction(querier);\n        function execute(ctx) {\n            const wasRootExec = beginMicroTickScope();\n            try {\n                if (scopeFuncIsAsync) {\n                    incrementExpectedAwaits();\n                }\n                const rv = newScope(querier, ctx);\n                if (scopeFuncIsAsync) {\n                    rv.finally(decrementExpectedAwaits);\n                }\n                return rv;\n            }\n            finally {\n                wasRootExec && endMicroTickScope();\n            }\n        }\n        let closed = false;\n        let abortController;\n        let accumMuts = {};\n        let currentObs = {};\n        const subscription = {\n            get closed() {\n                return closed;\n            },\n            unsubscribe: () => {\n                if (closed)\n                    return;\n                closed = true;\n                if (abortController)\n                    abortController.abort();\n                if (startedListening)\n                    globalEvents.storagemutated.unsubscribe(mutationListener);\n            },\n        };\n        observer.start && observer.start(subscription);\n        let startedListening = false;\n        function shouldNotify() {\n            return obsSetsOverlap(currentObs, accumMuts);\n        }\n        const mutationListener = (parts) => {\n            extendObservabilitySet(accumMuts, parts);\n            if (shouldNotify()) {\n                doQuery();\n            }\n        };\n        const doQuery = () => {\n            if (closed ||\n                !domDeps.indexedDB)\n             {\n                return;\n            }\n            accumMuts = {};\n            const subscr = {};\n            if (abortController)\n                abortController.abort();\n            abortController = new AbortController();\n            const ctx = {\n                subscr,\n                signal: abortController.signal,\n                requery: doQuery,\n                querier,\n                trans: null\n            };\n            const ret = execute(ctx);\n            Promise.resolve(ret).then((result) => {\n                hasValue = true;\n                currentValue = result;\n                if (closed || ctx.signal.aborted) {\n                    return;\n                }\n                accumMuts = {};\n                currentObs = subscr;\n                if (!objectIsEmpty(currentObs) && !startedListening) {\n                    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, mutationListener);\n                    startedListening = true;\n                }\n                observer.next && observer.next(result);\n            }, (err) => {\n                hasValue = false;\n                if (!['DatabaseClosedError', 'AbortError'].includes(err === null || err === void 0 ? void 0 : err.name)) {\n                    if (closed)\n                        return;\n                    observer.error && observer.error(err);\n                }\n            });\n        };\n        doQuery();\n        return subscription;\n    });\n    observable.hasValue = () => hasValue;\n    observable.getValue = () => currentValue;\n    return observable;\n}\n\nconst Dexie = Dexie$1;\nprops(Dexie, {\n    ...fullNameExceptions,\n    delete(databaseName) {\n        const db = new Dexie(databaseName, { addons: [] });\n        return db.delete();\n    },\n    exists(name) {\n        return new Dexie(name, { addons: [] }).open().then(db => {\n            db.close();\n            return true;\n        }).catch('NoSuchDatabaseError', () => false);\n    },\n    getDatabaseNames(cb) {\n        try {\n            return getDatabaseNames(Dexie.dependencies).then(cb);\n        }\n        catch (_a) {\n            return rejection(new exceptions.MissingAPI());\n        }\n    },\n    defineClass() {\n        function Class(content) {\n            extend(this, content);\n        }\n        return Class;\n    },\n    ignoreTransaction(scopeFunc) {\n        return PSD.trans ?\n            usePSD(PSD.transless, scopeFunc) :\n            scopeFunc();\n    },\n    vip,\n    async: function (generatorFn) {\n        return function () {\n            try {\n                var rv = awaitIterator(generatorFn.apply(this, arguments));\n                if (!rv || typeof rv.then !== 'function')\n                    return DexiePromise.resolve(rv);\n                return rv;\n            }\n            catch (e) {\n                return rejection(e);\n            }\n        };\n    },\n    spawn: function (generatorFn, args, thiz) {\n        try {\n            var rv = awaitIterator(generatorFn.apply(thiz, args || []));\n            if (!rv || typeof rv.then !== 'function')\n                return DexiePromise.resolve(rv);\n            return rv;\n        }\n        catch (e) {\n            return rejection(e);\n        }\n    },\n    currentTransaction: {\n        get: () => PSD.trans || null\n    },\n    waitFor: function (promiseOrFunction, optionalTimeout) {\n        const promise = DexiePromise.resolve(typeof promiseOrFunction === 'function' ?\n            Dexie.ignoreTransaction(promiseOrFunction) :\n            promiseOrFunction)\n            .timeout(optionalTimeout || 60000);\n        return PSD.trans ?\n            PSD.trans.waitFor(promise) :\n            promise;\n    },\n    Promise: DexiePromise,\n    debug: {\n        get: () => debug,\n        set: value => {\n            setDebug(value, value === 'dexie' ? () => true : dexieStackFrameFilter);\n        }\n    },\n    derive: derive,\n    extend: extend,\n    props: props,\n    override: override,\n    Events: Events,\n    on: globalEvents,\n    liveQuery,\n    extendObservabilitySet,\n    getByKeyPath: getByKeyPath,\n    setByKeyPath: setByKeyPath,\n    delByKeyPath: delByKeyPath,\n    shallowClone: shallowClone,\n    deepClone: deepClone,\n    getObjectDiff: getObjectDiff,\n    cmp,\n    asap: asap$1,\n    minKey: minKey,\n    addons: [],\n    connections: connections,\n    errnames: errnames,\n    dependencies: domDeps,\n    cache,\n    semVer: DEXIE_VERSION,\n    version: DEXIE_VERSION.split('.')\n        .map(n => parseInt(n))\n        .reduce((p, c, i) => p + (c / Math.pow(10, i * 2))),\n});\nDexie.maxKey = getMaxKey(Dexie.dependencies.IDBKeyRange);\n\nif (typeof dispatchEvent !== 'undefined' && typeof addEventListener !== 'undefined') {\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, updatedParts => {\n        if (!propagatingLocally) {\n            let event;\n            if (isIEOrEdge) {\n                event = document.createEvent('CustomEvent');\n                event.initCustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, true, true, updatedParts);\n            }\n            else {\n                event = new CustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, {\n                    detail: updatedParts\n                });\n            }\n            propagatingLocally = true;\n            dispatchEvent(event);\n            propagatingLocally = false;\n        }\n    });\n    addEventListener(STORAGE_MUTATED_DOM_EVENT_NAME, ({ detail }) => {\n        if (!propagatingLocally) {\n            propagateLocally(detail);\n        }\n    });\n}\nfunction propagateLocally(updateParts) {\n    let wasMe = propagatingLocally;\n    try {\n        propagatingLocally = true;\n        globalEvents.storagemutated.fire(updateParts);\n        signalSubscribersNow(updateParts, true);\n    }\n    finally {\n        propagatingLocally = wasMe;\n    }\n}\nlet propagatingLocally = false;\n\nif (typeof BroadcastChannel !== 'undefined') {\n    const bc = new BroadcastChannel(STORAGE_MUTATED_DOM_EVENT_NAME);\n    if (typeof bc.unref === 'function') {\n        bc.unref();\n    }\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, (changedParts) => {\n        if (!propagatingLocally) {\n            bc.postMessage(changedParts);\n        }\n    });\n    bc.onmessage = (ev) => {\n        if (ev.data)\n            propagateLocally(ev.data);\n    };\n}\nelse if (typeof self !== 'undefined' && typeof navigator !== 'undefined') {\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, (changedParts) => {\n        try {\n            if (!propagatingLocally) {\n                if (typeof localStorage !== 'undefined') {\n                    localStorage.setItem(STORAGE_MUTATED_DOM_EVENT_NAME, JSON.stringify({\n                        trig: Math.random(),\n                        changedParts,\n                    }));\n                }\n                if (typeof self['clients'] === 'object') {\n                    [...self['clients'].matchAll({ includeUncontrolled: true })].forEach((client) => client.postMessage({\n                        type: STORAGE_MUTATED_DOM_EVENT_NAME,\n                        changedParts,\n                    }));\n                }\n            }\n        }\n        catch (_a) { }\n    });\n    if (typeof addEventListener !== 'undefined') {\n        addEventListener('storage', (ev) => {\n            if (ev.key === STORAGE_MUTATED_DOM_EVENT_NAME) {\n                const data = JSON.parse(ev.newValue);\n                if (data)\n                    propagateLocally(data.changedParts);\n            }\n        });\n    }\n    const swContainer = self.document && navigator.serviceWorker;\n    if (swContainer) {\n        swContainer.addEventListener('message', propagateMessageLocally);\n    }\n}\nfunction propagateMessageLocally({ data }) {\n    if (data && data.type === STORAGE_MUTATED_DOM_EVENT_NAME) {\n        propagateLocally(data.changedParts);\n    }\n}\n\nDexiePromise.rejectionMapper = mapError;\nsetDebug(debug, dexieStackFrameFilter);\n\nexport { Dexie$1 as Dexie, Entity, RangeSet, cmp, Dexie$1 as default, liveQuery, mergeRanges, rangesOverlap };\n//# sourceMappingURL=dexie.mjs.map\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n","/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n","/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n","import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n","import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n","/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n","import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n","import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n","/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n","import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n","import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n","import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n","/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n","import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n","import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n","import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n","import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n","import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n","import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n","import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n// These constants are used to create handler registry functions using array mapping below.\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'] as const;\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'] as const;\nconst jqueryMethods = ['on', 'off'] as const;\n\nexport interface NodeStyleEventEmitter {\n  addListener(eventName: string | symbol, handler: NodeEventHandler): this;\n  removeListener(eventName: string | symbol, handler: NodeEventHandler): this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener(eventName: string, handler: NodeEventHandler): void | {};\n  removeListener(eventName: string, handler: NodeEventHandler): void | {};\n}\n\n// Use handler types like those in @types/jquery. See:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/847731ba1d7fa6db6b911c0e43aa0afe596e7723/types/jquery/misc.d.ts#L6395\nexport interface JQueryStyleEventEmitter<TContext, T> {\n  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n}\n\nexport interface EventListenerObject<E> {\n  handleEvent(evt: E): void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: EventListenerOptions | boolean\n  ): void;\n}\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\nexport function fromEvent<T>(target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>, eventName: string): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  resultSelector: (event: T) => R\n): Observable<R>;\nexport function fromEvent<T>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions,\n  resultSelector: (event: T) => R\n): Observable<R>;\n\nexport function fromEvent(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string\n): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent<T>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string,\n  resultSelector: (value: T, ...args: any[]) => R\n): Observable<R>;\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n *\n * Emit clicks happening on the DOM document\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * Use `addEventListener` with capture option\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * // note optional configuration parameter which will be passed to addEventListener\n * const clicksInDocument = fromEvent(document, 'click', { capture: true });\n * const clicksInDiv = fromEvent(div, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n */\nexport function fromEvent<T>(\n  target: any,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: (...args: any[]) => T\n): Observable<T> {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    return fromEvent<T>(target, eventName, options as EventListenerOptions).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  // Figure out our add and remove methods. In order to do this,\n  // we are going to analyze the target in a preferred order, if\n  // the target matches a given signature, we take the two \"add\" and \"remove\"\n  // method names and apply them to a map to create opposite versions of the\n  // same function. This is because they all operate in duplicate pairs,\n  // `addListener(name, handler)`, `removeListener(name, handler)`, for example.\n  // The call only differs by method name, as to whether or not you're adding or removing.\n  const [add, remove] =\n    // If it is an EventTarget, we need to use a slightly different method than the other two patterns.\n    isEventTarget(target)\n      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))\n      : // In all other cases, the call pattern is identical with the exception of the method names.\n      isNodeStyleEventEmitter(target)\n      ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n      : isJQueryStyleEventEmitter(target)\n      ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n      : [];\n\n  // If add is falsy, it's because we didn't match a pattern above.\n  // Check to see if it is an ArrayLike, because if it is, we want to\n  // try to apply fromEvent to all of it's items. We do this check last,\n  // because there are may be some types that are both ArrayLike *and* implement\n  // event registry points, and we'd rather delegate to that when possible.\n  if (!add) {\n    if (isArrayLike(target)) {\n      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(\n        innerFrom(target)\n      ) as Observable<T>;\n    }\n  }\n\n  // If add is falsy and we made it here, it's because we didn't\n  // match any valid target objects above.\n  if (!add) {\n    throw new TypeError('Invalid event target');\n  }\n\n  return new Observable<T>((subscriber) => {\n    // The handler we are going to register. Forwards the event object, by itself, or\n    // an array of arguments to the event handler, if there is more than one argument,\n    // to the consumer.\n    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);\n    // Do the work of adding the handler to the target.\n    add(handler);\n    // When we finalize, we want to remove the handler and free up memory.\n    return () => remove!(handler);\n  });\n}\n\n/**\n * Used to create `add` and `remove` functions to register and unregister event handlers\n * from a target in the most common handler pattern, where there are only two arguments.\n * (e.g.  `on(name, fn)`, `off(name, fn)`, `addListener(name, fn)`, or `removeListener(name, fn)`)\n * @param target The target we're calling methods on\n * @param eventName The event name for the event we're creating register or unregister functions for\n */\nfunction toCommonHandlerRegistry(target: any, eventName: string) {\n  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);\n}\n\n/**\n * Checks to see if the target implements the required node-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {\n  return isFunction(target.addListener) && isFunction(target.removeListener);\n}\n\n/**\n * Checks to see if the target implements the required jQuery-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {\n  return isFunction(target.on) && isFunction(target.off);\n}\n\n/**\n * Checks to see if the target implements the required EventTarget methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isEventTarget(target: any): target is HasEventTargetAddRemove<any> {\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Infinity] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, ObservableInputTuple, SchedulerLike } from '../types';\nimport { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function merge<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function merge<A extends readonly unknown[]>(...sourcesAndConcurrency: [...ObservableInputTuple<A>, number?]): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike?]\n): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number?, SchedulerLike?]\n): Observable<A[number]>;\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Merge together two Observables: 1s interval and clicks\n *\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console every time the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * Merge together 3 Observables, but run only 2 concurrently\n *\n * ```ts\n * import { interval, take, merge } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n */\nexport function merge(...args: (ObservableInput<unknown> | number | SchedulerLike)[]): Observable<unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  const sources = args as ObservableInput<unknown>[];\n  return !sources.length\n    ? // No source provided\n      EMPTY\n    : sources.length === 1\n    ? // One source? Just return it.\n      innerFrom(sources[0])\n    : // Merge all sources\n      mergeAll(concurrent)(from(sources, scheduler));\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubjectLike, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\n\nexport interface ShareConfig<T> {\n  /**\n   * The factory used to create the subject that will connect the source observable to\n   * multicast consumers.\n   */\n  connector?: () => SubjectLike<T>;\n  /**\n   * If `true`, the resulting observable will reset internal state on error from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"retried\" in the event of an error.\n   * If `false`, when an error comes from the source it will push the error into the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent retries\n   * or resubscriptions will resubscribe to that same subject. In all cases, RxJS subjects will emit the same error again, however\n   * {@link ReplaySubject} will also push its buffered values before pushing the error.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnError?: boolean | ((error: any) => ObservableInput<any>);\n  /**\n   * If `true`, the resulting observable will reset internal state on completion from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"repeated\" after it is done.\n   * If `false`, when the source completes, it will push the completion through the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent repeats\n   * or resubscriptions will resubscribe to that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnComplete?: boolean | (() => ObservableInput<any>);\n  /**\n   * If `true`, when the number of subscribers to the resulting observable reaches zero due to those subscribers unsubscribing, the\n   * internal state will be reset and the resulting observable will return to a \"cold\" state. This means that the next\n   * time the resulting observable is subscribed to, a new subject will be created and the source will be subscribed to\n   * again.\n   * If `false`, when the number of subscribers to the resulting observable reaches zero due to unsubscription, the subject\n   * will remain connected to the source, and new subscriptions to the result will be connected through that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnRefCountZero?: boolean | (() => ObservableInput<any>);\n}\n\nexport function share<T>(): MonoTypeOperatorFunction<T>;\n\nexport function share<T>(options: ShareConfig<T>): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * The subscription to the underlying source Observable can be reset (unsubscribe and resubscribe for new subscribers),\n * if the subscriber count to the shared observable drops to 0, or if the source Observable errors or completes. It is\n * possible to use notifier factories for the resets to allow for behaviors like conditional or delayed resets. Please\n * note that resetting on error or complete of the source Observable does not behave like a transparent retry or restart\n * of the source because the error or complete will be forwarded to all subscribers and their subscription will be\n * closed. Only new subscribers after a reset on error or complete happened will cause a fresh subscription to the\n * source. To achieve transparent retries or restarts pipe the source through appropriate operators before sharing.\n *\n * ![](share.png)\n *\n * ## Example\n *\n * Generate new multicast Observable from the `source` Observable value\n *\n * ```ts\n * import { interval, tap, map, take, share } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   tap(x => console.log('Processing: ', x)),\n *   map(x => x * x),\n *   take(6),\n *   share()\n * );\n *\n * source.subscribe(x => console.log('subscription 1: ', x));\n * source.subscribe(x => console.log('subscription 2: ', x));\n *\n * // Logs:\n * // Processing: 0\n * // subscription 1: 0\n * // subscription 2: 0\n * // Processing: 1\n * // subscription 1: 1\n * // subscription 2: 1\n * // Processing: 2\n * // subscription 1: 4\n * // subscription 2: 4\n * // Processing: 3\n * // subscription 1: 9\n * // subscription 2: 9\n * // Processing: 4\n * // subscription 1: 16\n * // subscription 2: 16\n * // Processing: 5\n * // subscription 1: 25\n * // subscription 2: 25\n * ```\n *\n * ## Example with notifier factory: Delayed reset\n *\n * ```ts\n * import { interval, take, share, timer } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   take(3),\n *   share({\n *     resetOnRefCountZero: () => timer(1000)\n *   })\n * );\n *\n * const subscriptionOne = source.subscribe(x => console.log('subscription 1: ', x));\n * setTimeout(() => subscriptionOne.unsubscribe(), 1300);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 2: ', x)), 1700);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 3: ', x)), 5000);\n *\n * // Logs:\n * // subscription 1:  0\n * // (subscription 1 unsubscribes here)\n * // (subscription 2 subscribes here ~400ms later, source was not reset)\n * // subscription 2:  1\n * // subscription 2:  2\n * // (subscription 2 unsubscribes here)\n * // (subscription 3 subscribes here ~2000ms later, source did reset before)\n * // subscription 3:  0\n * // subscription 3:  1\n * // subscription 3:  2\n * ```\n *\n * @see {@link shareReplay}\n *\n * @return A function that returns an Observable that mirrors the source.\n */\nexport function share<T>(options: ShareConfig<T> = {}): MonoTypeOperatorFunction<T> {\n  const { connector = () => new Subject<T>(), resetOnError = true, resetOnComplete = true, resetOnRefCountZero = true } = options;\n  // It's necessary to use a wrapper here, as the _operator_ must be\n  // referentially transparent. Otherwise, it cannot be used in calls to the\n  // static `pipe` function - to create a partial pipeline.\n  //\n  // The _operator function_ - the function returned by the _operator_ - will\n  // not be referentially transparent - as it shares its source - but the\n  // _operator function_ is called when the complete pipeline is composed via a\n  // call to a source observable's `pipe` method - not when the static `pipe`\n  // function is called.\n  return (wrapperSource) => {\n    let connection: SafeSubscriber<T> | undefined;\n    let resetConnection: Subscription | undefined;\n    let subject: SubjectLike<T> | undefined;\n    let refCount = 0;\n    let hasCompleted = false;\n    let hasErrored = false;\n\n    const cancelReset = () => {\n      resetConnection?.unsubscribe();\n      resetConnection = undefined;\n    };\n    // Used to reset the internal state to a \"cold\"\n    // state, as though it had never been subscribed to.\n    const reset = () => {\n      cancelReset();\n      connection = subject = undefined;\n      hasCompleted = hasErrored = false;\n    };\n    const resetAndUnsubscribe = () => {\n      // We need to capture the connection before\n      // we reset (if we need to reset).\n      const conn = connection;\n      reset();\n      conn?.unsubscribe();\n    };\n\n    return operate<T, T>((source, subscriber) => {\n      refCount++;\n      if (!hasErrored && !hasCompleted) {\n        cancelReset();\n      }\n\n      // Create the subject if we don't have one yet. Grab a local reference to\n      // it as well, which avoids non-null assertions when using it and, if we\n      // connect to it now, then error/complete need a reference after it was\n      // reset.\n      const dest = (subject = subject ?? connector());\n\n      // Add the finalization directly to the subscriber - instead of returning it -\n      // so that the handling of the subscriber's unsubscription will be wired\n      // up _before_ the subscription to the source occurs. This is done so that\n      // the assignment to the source connection's `closed` property will be seen\n      // by synchronous firehose sources.\n      subscriber.add(() => {\n        refCount--;\n\n        // If we're resetting on refCount === 0, and it's 0, we only want to do\n        // that on \"unsubscribe\", really. Resetting on error or completion is a different\n        // configuration.\n        if (refCount === 0 && !hasErrored && !hasCompleted) {\n          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n        }\n      });\n\n      // The following line adds the subscription to the subscriber passed.\n      // Basically, `subscriber === dest.subscribe(subscriber)` is `true`.\n      dest.subscribe(subscriber);\n\n      if (\n        !connection &&\n        // Check this shareReplay is still activate - it can be reset to 0\n        // and be \"unsubscribed\" _before_ it actually subscribes.\n        // If we were to subscribe then, it'd leak and get stuck.\n        refCount > 0\n      ) {\n        // We need to create a subscriber here - rather than pass an observer and\n        // assign the returned subscription to connection - because it's possible\n        // for reentrant subscriptions to the shared observable to occur and in\n        // those situations we want connection to be already-assigned so that we\n        // don't create another connection to the source.\n        connection = new SafeSubscriber({\n          next: (value) => dest.next(value),\n          error: (err) => {\n            hasErrored = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnError, err);\n            dest.error(err);\n          },\n          complete: () => {\n            hasCompleted = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnComplete);\n            dest.complete();\n          },\n        });\n        innerFrom(source).subscribe(connection);\n      }\n    })(wrapperSource);\n  };\n}\n\nfunction handleReset<T extends unknown[] = never[]>(\n  reset: () => void,\n  on: boolean | ((...args: T) => ObservableInput<any>),\n  ...args: T\n): Subscription | undefined {\n  if (on === true) {\n    reset();\n    return;\n  }\n\n  if (on === false) {\n    return;\n  }\n\n  const onSubscriber = new SafeSubscriber({\n    next: () => {\n      onSubscriber.unsubscribe();\n      reset();\n    },\n  });\n\n  return innerFrom(on(...args)).subscribe(onSubscriber);\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n","import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\n\n/**\n * Creates an observable that will wait for a specified time period, or exact date, before\n * emitting the number 0.\n *\n * <span class=\"informal\">Used to emit a notification after a delay.</span>\n *\n * This observable is useful for creating delays in code, or racing against other values\n * for ad-hoc timeouts.\n *\n * The `delay` is specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Examples\n *\n * Wait 3 seconds and start another observable\n *\n * You might want to use `timer` to delay subscription to an\n * observable by a set amount of time. Here we use a timer with\n * {@link concatMapTo} or {@link concatMap} in order to wait\n * a few seconds and start a subscription to a source.\n *\n * ```ts\n * import { of, timer, concatMap } from 'rxjs';\n *\n * // This could be any observable\n * const source = of(1, 2, 3);\n *\n * timer(3000)\n *   .pipe(concatMap(() => source))\n *   .subscribe(console.log);\n * ```\n *\n * Take all values until the start of the next minute\n *\n * Using a `Date` as the trigger for the first emission, you can\n * do things like wait until midnight to fire an event, or in this case,\n * wait until a new minute starts (chosen so the example wouldn't take\n * too long to run) in order to stop watching a stream. Leveraging\n * {@link takeUntil}.\n *\n * ```ts\n * import { interval, takeUntil, timer } from 'rxjs';\n *\n * // Build a Date object that marks the\n * // next minute.\n * const currentDate = new Date();\n * const startOfNextMinute = new Date(\n *   currentDate.getFullYear(),\n *   currentDate.getMonth(),\n *   currentDate.getDate(),\n *   currentDate.getHours(),\n *   currentDate.getMinutes() + 1\n * );\n *\n * // This could be any observable stream\n * const source = interval(1000);\n *\n * const result = source.pipe(\n *   takeUntil(timer(startOfNextMinute))\n * );\n *\n * result.subscribe(console.log);\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `dueTime`.\n *\n * @param due If a `number`, the amount of time in milliseconds to wait before emitting.\n * If a `Date`, the exact time at which to emit.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(due: number | Date, scheduler?: SchedulerLike): Observable<0>;\n\n/**\n * Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at `0` --\n * on each interval after words.\n *\n * The `delay` and `intervalDuration` are specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Example\n *\n * ### Start an interval that starts right away\n *\n * Since {@link interval} waits for the passed delay before starting,\n * sometimes that's not ideal. You may want to start an interval immediately.\n * `timer` works well for this. Here we have both side-by-side so you can\n * see them in comparison.\n *\n * Note that this observable will never complete.\n *\n * ```ts\n * import { timer, interval } from 'rxjs';\n *\n * timer(0, 1000).subscribe(n => console.log('timer', n));\n * interval(1000).subscribe(n => console.log('interval', n));\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `startDue`.\n * @param startDue If a `number`, is the time to wait before starting the interval.\n * If a `Date`, is the exact time at which to start the interval.\n * @param intervalDuration The delay between each value emitted in the interval. Passing a\n * negative number here will result in immediate completion after the first value is emitted, as though\n * no `intervalDuration` was passed at all.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(startDue: number | Date, intervalDuration: number, scheduler?: SchedulerLike): Observable<number>;\n\n/**\n * @deprecated The signature allowing `undefined` to be passed for `intervalDuration` will be removed in v8. Use the `timer(dueTime, scheduler?)` signature instead.\n */\nexport function timer(dueTime: number | Date, unused: undefined, scheduler?: SchedulerLike): Observable<0>;\n\nexport function timer(\n  dueTime: number | Date = 0,\n  intervalOrScheduler?: number | SchedulerLike,\n  scheduler: SchedulerLike = asyncScheduler\n): Observable<number> {\n  // Since negative intervalDuration is treated as though no\n  // interval was specified at all, we start with a negative number.\n  let intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    // If we have a second argument, and it's a scheduler,\n    // override the scheduler we had defaulted. Otherwise,\n    // it must be an interval.\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      // Note that this *could* be negative, in which case\n      // it's like not passing an intervalDuration at all.\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable((subscriber) => {\n    // If a valid date is passed, calculate how long to wait before\n    // executing the first value... otherwise, if it's a number just schedule\n    // that many milliseconds (or scheduler-specified unit size) in the future.\n    let due = isValidDate(dueTime) ? +dueTime - scheduler!.now() : dueTime;\n\n    if (due < 0) {\n      // Ensure we don't schedule in the future.\n      due = 0;\n    }\n\n    // The incrementing value we emit.\n    let n = 0;\n\n    // Start the timer.\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        // Emit the next value and increment.\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          // If we have a interval after the initial timer,\n          // reschedule with the period.\n          this.schedule(undefined, intervalDuration);\n        } else {\n          // We didn't have an interval. So just complete.\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}\n","/**\n * Checks to see if a value is not only a `Date` object,\n * but a *valid* `Date` object that can be converted to a\n * number. For example, `new Date('blah')` is indeed an\n * `instanceof Date`, however it cannot be converted to a\n * number.\n */\nexport function isValidDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value as any);\n}\n","const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\n\n/**\n * Used in functions where either a list of arguments, a single array of arguments, or a\n * dictionary of arguments can be returned. Returns an object with an `args` property with\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\n * property.\n */\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\n  if (args.length === 1) {\n    const first = args[0];\n    if (isArray(first)) {\n      return { args: first, keys: null };\n    }\n    if (isPOJO(first)) {\n      const keys = getKeys(first);\n      return {\n        args: keys.map((key) => first[key]),\n        keys,\n      };\n    }\n  }\n\n  return { args: args as T[], keys: null };\n}\n\nfunction isPOJO(obj: any): obj is object {\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf, ObservableInputTuple } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { Subscriber } from '../Subscriber';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { Subscription } from '../Subscription';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { AnyCatcher } from '../AnyCatcher';\nimport { executeSchedule } from '../util/executeSchedule';\n\n// combineLatest(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function combineLatest<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// combineLatest([a, b, c])\nexport function combineLatest(sources: []): Observable<never>;\nexport function combineLatest<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R,\n  scheduler: SchedulerLike\n): Observable<R>;\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  sources: readonly [...ObservableInputTuple<A>],\n  scheduler: SchedulerLike\n): Observable<A>;\n\n// combineLatest(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelectorAndScheduler: [...ObservableInputTuple<A>, (...values: A) => R, SchedulerLike]\n): Observable<R>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): Observable<A>;\n\n// combineLatest({a, b, c})\nexport function combineLatest(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function combineLatest<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed in the\n * observables array. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to this operator,\n * the returned Observable will always emit an array of `n` values, in an order\n * corresponding to the order of the passed Observables (the value from the first Observable\n * will be at index 0 of the array and so on).\n *\n * Static version of `combineLatest` accepts an array of Observables. Note that an array of\n * Observables is a good choice, if you don't know beforehand how many Observables\n * you will combine. Passing an empty array will result in an Observable that\n * completes immediately.\n *\n * To ensure the output array always has the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will now be impossible to include a value from the\n * completed Observable in the resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, the resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, the result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of a completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * ## Examples\n *\n * Combine two timer Observables\n *\n * ```ts\n * import { timer, combineLatest } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest([firstTimer, secondTimer]);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * Combine a dictionary of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = {\n *   a: of(1).pipe(delay(1000), startWith(0)),\n *   b: of(5).pipe(delay(5000), startWith(0)),\n *   c: of(10).pipe(delay(10000), startWith(0))\n * };\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // { a: 0, b: 0, c: 0 } immediately\n * // { a: 1, b: 0, c: 0 } after 1s\n * // { a: 1, b: 5, c: 0 } after 5s\n * // { a: 1, b: 5, c: 10 } after 10s\n * ```\n *\n * Combine an array of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000), // emit 0 and then emit n after n seconds\n *     startWith(0)\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n * Use map operator to dynamically calculate the Body-Mass Index\n *\n * ```ts\n * import { of, combineLatest, map } from 'rxjs';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest([weight, height]).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} [observables] An array of input Observables to combine with each other.\n * An array of Observables must be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {\n  const scheduler = popScheduler(args);\n  const resultSelector = popResultSelector(args);\n\n  const { args: observables, keys } = argsArgArrayOrObject(args);\n\n  if (observables.length === 0) {\n    // If no observables are passed, or someone has passed an empty array\n    // of observables, or even an empty object POJO, we need to just\n    // complete (EMPTY), but we have to honor the scheduler provided if any.\n    return from([], scheduler as any);\n  }\n\n  const result = new Observable<ObservedValueOf<O>[]>(\n    combineLatestInit(\n      observables as ObservableInput<ObservedValueOf<O>>[],\n      scheduler,\n      keys\n        ? // A handler for scrubbing the array of args into a dictionary.\n          (values) => createObject(keys, values)\n        : // A passthrough to just return the array\n          identity\n    )\n  );\n\n  return resultSelector ? (result.pipe(mapOneOrManyArgs(resultSelector)) as Observable<R>) : result;\n}\n\nexport function combineLatestInit(\n  observables: ObservableInput<any>[],\n  scheduler?: SchedulerLike,\n  valueTransform: (values: any[]) => any = identity\n) {\n  return (subscriber: Subscriber<any>) => {\n    // The outer subscription. We're capturing this in a function\n    // because we may have to schedule it.\n    maybeSchedule(\n      scheduler,\n      () => {\n        const { length } = observables;\n        // A store for the values each observable has emitted so far. We match observable to value on index.\n        const values = new Array(length);\n        // The number of currently active subscriptions, as they complete, we decrement this number to see if\n        // we are all done combining values, so we can complete the result.\n        let active = length;\n        // The number of inner sources that still haven't emitted the first value\n        // We need to track this because all sources need to emit one value in order\n        // to start emitting values.\n        let remainingFirstValues = length;\n        // The loop to kick off subscription. We're keying everything on index `i` to relate the observables passed\n        // in to the slot in the output array or the key in the array of keys in the output dictionary.\n        for (let i = 0; i < length; i++) {\n          maybeSchedule(\n            scheduler,\n            () => {\n              const source = from(observables[i], scheduler as any);\n              let hasFirstValue = false;\n              source.subscribe(\n                createOperatorSubscriber(\n                  subscriber,\n                  (value) => {\n                    // When we get a value, record it in our set of values.\n                    values[i] = value;\n                    if (!hasFirstValue) {\n                      // If this is our first value, record that.\n                      hasFirstValue = true;\n                      remainingFirstValues--;\n                    }\n                    if (!remainingFirstValues) {\n                      // We're not waiting for any more\n                      // first values, so we can emit!\n                      subscriber.next(valueTransform(values.slice()));\n                    }\n                  },\n                  () => {\n                    if (!--active) {\n                      // We only complete the result if we have no more active\n                      // inner observables.\n                      subscriber.complete();\n                    }\n                  }\n                )\n              );\n            },\n            subscriber\n          );\n        }\n      },\n      subscriber\n    );\n  };\n}\n\n/**\n * A small utility to handle the couple of locations where we want to schedule if a scheduler was provided,\n * but we don't if there was no scheduler.\n */\nfunction maybeSchedule(scheduler: SchedulerLike | undefined, execute: () => void, subscription: Subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}\n","export function createObject(keys: string[], values: any[]) {\n  return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {} as any);\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerLike } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates an observable that will create an error instance and push it to the consumer as an error\n * immediately upon subscription.\n *\n * <span class=\"informal\">Just errors and does nothing else</span>\n *\n * ![](throw.png)\n *\n * This creation function is useful for creating an observable that will create an error and error every\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\n * that up and notify the consumer of the error.\n *\n * ## Example\n *\n * Create a simple observable that will create a new error with a timestamp and log it\n * and the message every time you subscribe to it\n *\n * ```ts\n * import { throwError } from 'rxjs';\n *\n * let errorCount = 0;\n *\n * const errorWithTimestamp$ = throwError(() => {\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\n *   error.timestamp = Date.now();\n *   return error;\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * // Logs the timestamp and a new error message for each subscription\n * ```\n *\n * ### Unnecessary usage\n *\n * Using `throwError` inside of an operator or creation function\n * with a callback, is usually not necessary\n *\n * ```ts\n * import { of, concatMap, timer, throwError } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // This is probably overkill.\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * You can just throw the error instead\n *\n * ```ts\n * import { of, concatMap, timer } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // Cleaner and easier to read for most folks.\n *       throw new Error(`Invalid time ${ ms }`);\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * @param errorFactory A factory function that will create the error instance that is pushed.\n */\nexport function throwError(errorFactory: () => any): Observable<never>;\n\n/**\n * Returns an observable that will error with the specified error immediately upon subscription.\n *\n * @param error The error instance to emit\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\n */\nexport function throwError(error: any): Observable<never>;\n\n/**\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\n *\n * @param errorOrErrorFactory An error instance or error factory\n * @param scheduler A scheduler to use to schedule the error notification\n * @deprecated The `scheduler` parameter will be removed in v8.\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\n * Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\n\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n *\n * Take the first 5 seconds of an infinite 1-second interval Observable\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of `next` values to emit.\n * @return A function that returns an Observable that emits only the first\n * `count` values emitted by the source Observable, or all of the values from\n * the source if the source emits fewer than `count` values.\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? // If we are taking no values, that's empty.\n      () => EMPTY\n    : operate((source, subscriber) => {\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Increment the number of values we have seen,\n            // then check it against the allowed count to see\n            // if we are still letting values through.\n            if (++seen <= count) {\n              subscriber.next(value);\n              // If we have met or passed our allowed count,\n              // we need to complete. We have to do <= here,\n              // because re-entrant code will increment `seen` twice.\n              if (count <= seen) {\n                subscriber.complete();\n              }\n            }\n          })\n        );\n      });\n}\n","import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switchAll}.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n *\n * Generate new Observable according to source Observable values\n *\n * ```ts\n * import { of, switchMap } from 'rxjs';\n *\n * const switched = of(1, 2, 3).pipe(switchMap(x => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // 3\n * // 9\n * // 27\n * ```\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMap, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * only the values from the most recently projected inner Observable.\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return operate((source, subscriber) => {\n    let innerSubscriber: Subscriber<ObservedValueOf<O>> | null = null;\n    let index = 0;\n    // Whether or not the source subscription has completed\n    let isComplete = false;\n\n    // We only complete the result if the source is complete AND we don't have an active inner subscription.\n    // This is called both when the source completes and when the inners complete.\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Cancel the previous inner subscription if there was one\n          innerSubscriber?.unsubscribe();\n          let innerIndex = 0;\n          const outerIndex = index++;\n          // Start the next inner subscription\n          innerFrom(project(value, outerIndex)).subscribe(\n            (innerSubscriber = createOperatorSubscriber(\n              subscriber,\n              // When we get a new inner value, next it through. Note that this is\n              // handling the deprecate result selector here. This is because with this architecture\n              // it ends up being smaller than using the map operator.\n              (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue),\n              () => {\n                // The inner has completed. Null out the inner subscriber to\n                // free up memory and to signal that we have no inner subscription\n                // currently.\n                innerSubscriber = null!;\n                checkComplete();\n              }\n            ))\n          );\n        },\n        () => {\n          isComplete = true;\n          checkComplete();\n        }\n      )\n    );\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args Input Observables to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n","import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n","import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nimport { innerFrom } from '../observable/innerFrom';\n\n/** @deprecated The `subscriptionDelay` parameter will be removed in v8. */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\n  subscriptionDelay: Observable<any>\n): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => ObservableInput<any>): MonoTypeOperatorFunction<T>;\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` operator shifts each emitted value from the source Observable by\n * a time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the value emitted from\n * the source Observable as the first argument to the `delayDurationSelector`.\n * The `delayDurationSelector` function should return an {@link ObservableInput},\n * that is internally converted to an Observable that is called the \"duration\"\n * Observable.\n *\n * The source value is emitted on the output Observable only when the \"duration\"\n * Observable emits ({@link guide/glossary-and-semantics#next next}s) any value.\n * Upon that, the \"duration\" Observable gets unsubscribed.\n *\n * Before RxJS V7, the {@link guide/glossary-and-semantics#complete completion}\n * of the \"duration\" Observable would have been triggering the emission of the\n * source value to the output Observable, but with RxJS V7, this is not the case\n * anymore.\n *\n * Only next notifications (from the \"duration\" Observable) trigger values from\n * the source Observable to be passed to the output Observable. If the \"duration\"\n * Observable only emits the complete notification (without next), the value\n * emitted by the source Observable will never get to the output Observable - it\n * will be swallowed. If the \"duration\" Observable errors, the error will be\n * propagated to the output Observable.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n *\n * Delay each click by a random amount of time, between 0 and 5 seconds\n *\n * ```ts\n * import { fromEvent, delayWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(() => interval(Math.random() * 5000))\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param delayDurationSelector A function that returns an `ObservableInput` for\n * each `value` emitted by the source Observable, which is then used to delay the\n * emission of that `value` on the output Observable until the `ObservableInput`\n * returned from this function emits a next value. When called, beside `value`,\n * this function receives a zero-based `index` of the emission order.\n * @param subscriptionDelay An Observable that triggers the subscription to the\n * source Observable once it emits any value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by an amount of time specified by the Observable\n * returned by `delayDurationSelector`.\n */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\n  subscriptionDelay?: Observable<any>\n): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n  }\n\n  return mergeMap((value, index) => innerFrom(delayDurationSelector(value, index)).pipe(take(1), mapTo(value)));\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * The `ignoreElements` operator suppresses all items emitted by the source Observable,\n * but allows its termination notification (either `error` or `complete`) to pass through unchanged.\n *\n * If you do not care about the items being emitted by an Observable, but you do want to be notified\n * when it completes or when it terminates with an error, you can apply the `ignoreElements` operator\n * to the Observable, which will ensure that it will never call its observers’ `next` handlers.\n *\n * ## Example\n *\n * Ignore all `next` emissions from the source\n *\n * ```ts\n * import { of, ignoreElements } from 'rxjs';\n *\n * of('you', 'talking', 'to', 'me')\n *   .pipe(ignoreElements())\n *   .subscribe({\n *     next: word => console.log(word),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // result:\n * // 'the end'\n * ```\n *\n * @return A function that returns an empty Observable that only calls\n * `complete` or `error`, based on which one is called by the source\n * Observable.\n */\nexport function ignoreElements(): OperatorFunction<unknown, never> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, noop));\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { map } from './map';\n\n/** @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`. */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R>;\n/**\n * @deprecated Do not specify explicit type parameters. Signatures with type parameters\n * that cannot be inferred will be removed in v8. `mapTo` itself will be removed in v9,\n * use {@link map} instead: `map(() => value)`.\n * */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R>;\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n *\n * Map every click to the string `'Hi'`\n *\n * ```ts\n * import { fromEvent, mapTo } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n *\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param value The value to map each source value to.\n * @return A function that returns an Observable that emits the given `value`\n * every time the source Observable emits.\n * @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`.\n */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R> {\n  return map(() => value);\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.svg)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n *\n * Delay each click by one second\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delayWhen}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {number|Date} due The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified timeout or Date.\n */\nexport function delay<T>(due: number | Date, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  const duration = timer(due, scheduler);\n  return delayWhen(() => duration);\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function distinctUntilChanged<T>(comparator?: (previous: T, current: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(\n  comparator: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\n * are distinct in comparison to the last value the result observable emitted.\n *\n * When provided without parameters or with the first parameter (`{@link distinctUntilChanged#comparator comparator}`),\n * it behaves like this:\n *\n * 1. It will always emit the first value from the source.\n * 2. For all subsequent values pushed by the source, they will be compared to the previously emitted values\n *    using the provided `comparator` or an `===` equality check.\n * 3. If the value pushed by the source is determined to be unequal by this check, that value is emitted and\n *    becomes the new \"previously emitted value\" internally.\n *\n * When the second parameter (`{@link distinctUntilChanged#keySelector keySelector}`) is provided, the behavior\n * changes:\n *\n * 1. It will always emit the first value from the source.\n * 2. The `keySelector` will be run against all values, including the first value.\n * 3. For all values after the first, the selected key will be compared against the key selected from\n *    the previously emitted value using the `comparator`.\n * 4. If the keys are determined to be unequal by this check, the value (not the key), is emitted\n *    and the selected key from that value is saved for future comparisons against other keys.\n *\n * ## Examples\n *\n * A very basic example with no `{@link distinctUntilChanged#comparator comparator}`. Note that `1` is emitted more than once,\n * because it's distinct in comparison to the _previously emitted_ value,\n * not in comparison to _all other emitted values_.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * of(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\n *   .pipe(distinctUntilChanged())\n *   .subscribe(console.log);\n * // Logs: 1, 2, 1, 3\n * ```\n *\n * With a `{@link distinctUntilChanged#comparator comparator}`, you can do custom comparisons. Let's say\n * you only want to emit a value when all of its components have\n * changed:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const totallyDifferentBuilds$ = of(\n *   { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\n *   { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\n *   { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ).pipe(\n *   distinctUntilChanged((prev, curr) => {\n *     return (\n *       prev.engineVersion === curr.engineVersion ||\n *       prev.transmissionVersion === curr.transmissionVersion\n *     );\n *   })\n * );\n *\n * totallyDifferentBuilds$.subscribe(console.log);\n *\n * // Logs:\n * // { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\n * // { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\n * // { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ```\n *\n * You can also provide a custom `{@link distinctUntilChanged#comparator comparator}` to check that emitted\n * changes are only in one direction. Let's say you only want to get\n * the next record temperature:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const temps$ = of(30, 31, 20, 34, 33, 29, 35, 20);\n *\n * const recordHighs$ = temps$.pipe(\n *   distinctUntilChanged((prevHigh, temp) => {\n *     // If the current temp is less than\n *     // or the same as the previous record,\n *     // the record hasn't changed.\n *     return temp <= prevHigh;\n *   })\n * );\n *\n * recordHighs$.subscribe(console.log);\n * // Logs: 30, 31, 34, 35\n * ```\n *\n * Selecting update events only when the `updatedBy` field shows\n * the account changed hands.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * // A stream of updates to a given account\n * const accountUpdates$ = of(\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'blesh', data: [] }\n * );\n *\n * // We only want the events where it changed hands\n * const changedHands$ = accountUpdates$.pipe(\n *   distinctUntilChanged(undefined, update => update.updatedBy)\n * );\n *\n * changedHands$.subscribe(console.log);\n * // Logs:\n * // { updatedBy: 'blesh', data: Array[0] }\n * // { updatedBy: 'ncjamieson', data: Array[0] }\n * // { updatedBy: 'blesh', data: Array[0] }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param comparator A function used to compare the previous and current keys for\n * equality. Defaults to a `===` check.\n * @param keySelector Used to select a key value to be passed to the `comparator`.\n *\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinctUntilChanged<T, K>(\n  comparator?: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K = identity as (value: T) => K\n): MonoTypeOperatorFunction<T> {\n  // We've been allowing `null` do be passed as the `compare`, so we can't do\n  // a default value for the parameter, because that will only work\n  // for `undefined`.\n  comparator = comparator ?? defaultCompare;\n\n  return operate((source, subscriber) => {\n    // The previous key, used to compare against keys selected\n    // from new arrivals to determine \"distinctiveness\".\n    let previousKey: K;\n    // Whether or not this is the first value we've gotten.\n    let first = true;\n\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        // We always call the key selector.\n        const currentKey = keySelector(value);\n\n        // If it's the first value, we always emit it.\n        // Otherwise, we compare this key to the previous key, and\n        // if the comparer returns false, we emit.\n        if (first || !comparator!(previousKey, currentKey)) {\n          // Update our state *before* we emit the value\n          // as emission can be the source of re-entrant code\n          // in functional libraries like this. We only really\n          // need to do this if it's the first value, or if the\n          // key we're tracking in previous needs to change.\n          first = false;\n          previousKey = currentKey;\n\n          // Emit the value!\n          subscriber.next(value);\n        }\n      })\n    );\n  });\n}\n\nfunction defaultCompare(a: any, b: any) {\n  return a === b;\n}\n","import { MonoTypeOperatorFunction, Observer } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\n\n/**\n * An extension to the {@link Observer} interface used only by the {@link tap} operator.\n *\n * It provides a useful set of callbacks a user can register to do side-effects in\n * cases other than what the usual {@link Observer} callbacks are\n * ({@link guide/glossary-and-semantics#next next},\n * {@link guide/glossary-and-semantics#error error} and/or\n * {@link guide/glossary-and-semantics#complete complete}).\n *\n * ## Example\n *\n * ```ts\n * import { fromEvent, switchMap, tap, interval, take } from 'rxjs';\n *\n * const source$ = fromEvent(document, 'click');\n * const result$ = source$.pipe(\n *   switchMap((_, i) => i % 2 === 0\n *     ? fromEvent(document, 'mousemove').pipe(\n *         tap({\n *           subscribe: () => console.log('Subscribed to the mouse move events after click #' + i),\n *           unsubscribe: () => console.log('Mouse move events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('Mouse move events #' + i + ' finalized')\n *         })\n *       )\n *     : interval(1_000).pipe(\n *         take(5),\n *         tap({\n *           subscribe: () => console.log('Subscribed to the 1-second interval events after click #' + i),\n *           unsubscribe: () => console.log('1-second interval events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('1-second interval events #' + i + ' finalized')\n *         })\n *       )\n *   )\n * );\n *\n * const subscription = result$.subscribe({\n *   next: console.log\n * });\n *\n * setTimeout(() => {\n *   console.log('Unsubscribe after 60 seconds');\n *   subscription.unsubscribe();\n * }, 60_000);\n * ```\n */\nexport interface TapObserver<T> extends Observer<T> {\n  /**\n   * The callback that `tap` operator invokes at the moment when the source Observable\n   * gets subscribed to.\n   */\n  subscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when an explicit\n   * {@link guide/glossary-and-semantics#unsubscription unsubscribe} happens. It won't get invoked on\n   * `error` or `complete` events.\n   */\n  unsubscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when any kind of\n   * {@link guide/glossary-and-semantics#finalization finalization} happens - either when\n   * the source Observable `error`s or `complete`s or when it gets explicitly unsubscribed\n   * by the user. There is no difference in using this callback or the {@link finalize}\n   * operator, but if you're already using `tap` operator, you can use this callback\n   * instead. You'd get the same result in either case.\n   */\n  finalize: () => void;\n}\nexport function tap<T>(observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void)): MonoTypeOperatorFunction<T>;\n/** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\nexport function tap<T>(\n  next?: ((value: T) => void) | null,\n  error?: ((error: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Used to perform side-effects for notifications from the source observable\n *\n * <span class=\"informal\">Used when you want to affect outside state with a notification without altering the notification</span>\n *\n * ![](tap.png)\n *\n * Tap is designed to allow the developer a designated place to perform side effects. While you _could_ perform side-effects\n * inside of a `map` or a `mergeMap`, that would make their mapping functions impure, which isn't always a big deal, but will\n * make it so you can't do things like memoize those functions. The `tap` operator is designed solely for such side-effects to\n * help you remove side-effects from other operations.\n *\n * For any notification, next, error, or complete, `tap` will call the appropriate callback you have provided to it, via a function\n * reference, or a partial observer, then pass that notification down the stream.\n *\n * The observable returned by `tap` is an exact mirror of the source, with one exception: Any error that occurs -- synchronously -- in a handler\n * provided to `tap` will be emitted as an error from the returned observable.\n *\n * > Be careful! You can mutate objects as they pass through the `tap` operator's handlers.\n *\n * The most common use of `tap` is actually for debugging. You can place a `tap(console.log)` anywhere\n * in your observable `pipe`, log out the notifications as they are emitted by the source returned by the previous\n * operation.\n *\n * ## Examples\n *\n * Check a random number before it is handled. Below is an observable that will use a random number between 0 and 1,\n * and emit `'big'` or `'small'` depending on the size of that number. But we wanted to log what the original number\n * was, so we have added a `tap(console.log)`.\n *\n * ```ts\n * import { of, tap, map } from 'rxjs';\n *\n * of(Math.random()).pipe(\n *   tap(console.log),\n *   map(n => n > 0.5 ? 'big' : 'small')\n * ).subscribe(console.log);\n * ```\n *\n * Using `tap` to analyze a value and force an error. Below is an observable where in our system we only\n * want to emit numbers 3 or less we get from another source. We can force our observable to error\n * using `tap`.\n *\n * ```ts\n * import { of, tap } from 'rxjs';\n *\n * const source = of(1, 2, 3, 4, 5);\n *\n * source.pipe(\n *   tap(n => {\n *     if (n > 3) {\n *       throw new TypeError(`Value ${ n } is greater than 3`);\n *     }\n *   })\n * )\n * .subscribe({ next: console.log, error: err => console.log(err.message) });\n * ```\n *\n * We want to know when an observable completes before moving on to the next observable. The system\n * below will emit a random series of `'X'` characters from 3 different observables in sequence. The\n * only way we know when one observable completes and moves to the next one, in this case, is because\n * we have added a `tap` with the side effect of logging to console.\n *\n * ```ts\n * import { of, concatMap, interval, take, map, tap } from 'rxjs';\n *\n * of(1, 2, 3).pipe(\n *   concatMap(n => interval(1000).pipe(\n *     take(Math.round(Math.random() * 10)),\n *     map(() => 'X'),\n *     tap({ complete: () => console.log(`Done with ${ n }`) })\n *   ))\n * )\n * .subscribe(console.log);\n * ```\n *\n * @see {@link finalize}\n * @see {@link TapObserver}\n *\n * @param observerOrNext A next handler or partial observer\n * @param error An error handler\n * @param complete A completion handler\n * @return A function that returns an Observable identical to the source, but\n * runs the specified Observer or callback(s) for each item.\n */\nexport function tap<T>(\n  observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void) | null,\n  error?: ((e: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T> {\n  // We have to check to see not only if next is a function,\n  // but if error or complete were passed. This is because someone\n  // could technically call tap like `tap(null, fn)` or `tap(null, null, fn)`.\n  const tapObserver =\n    isFunction(observerOrNext) || error || complete\n      ? // tslint:disable-next-line: no-object-literal-type-assertion\n        ({ next: observerOrNext as Exclude<typeof observerOrNext, Partial<TapObserver<T>>>, error, complete } as Partial<TapObserver<T>>)\n      : observerOrNext;\n\n  return tapObserver\n    ? operate((source, subscriber) => {\n        tapObserver.subscribe?.();\n        let isUnsub = true;\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              tapObserver.next?.(value);\n              subscriber.next(value);\n            },\n            () => {\n              isUnsub = false;\n              tapObserver.complete?.();\n              subscriber.complete();\n            },\n            (err) => {\n              isUnsub = false;\n              tapObserver.error?.(err);\n              subscriber.error(err);\n            },\n            () => {\n              if (isUnsub) {\n                tapObserver.unsubscribe?.();\n              }\n              tapObserver.finalize?.();\n            }\n          )\n        );\n      })\n    : // Tap was called with no valid tap observer or handler\n      // (e.g. `tap(null, null, null)` or `tap(null)` or `tap()`)\n      // so we're going to just mirror the source.\n      identity;\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent notification from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays notifications emitted by the source Observable, but drops\n * previous pending delayed emissions if a new notification arrives on the source\n * Observable. This operator keeps track of the most recent notification from the\n * source Observable, and emits that only when `dueTime` has passed\n * without any other notification appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous notification will be dropped\n * and will not be emitted and a new `dueTime` is scheduled.\n * If the completing event happens during `dueTime` the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during `dueTime` or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * notification to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, debounceTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified `dueTime`, and may drop some values\n * if they occur too frequently.\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let activeTask: Subscription | null = null;\n    let lastValue: T | null = null;\n    let lastTime: number | null = null;\n\n    const emit = () => {\n      if (activeTask) {\n        // We have a value! Free up memory first, then emit the value.\n        activeTask.unsubscribe();\n        activeTask = null;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n    function emitWhenIdle(this: SchedulerAction<unknown>) {\n      // This is called `dueTime` after the first value\n      // but we might have received new values during this window!\n\n      const targetTime = lastTime! + dueTime;\n      const now = scheduler.now();\n      if (now < targetTime) {\n        // On that case, re-schedule to the new target\n        activeTask = this.schedule(undefined, targetTime - now);\n        subscriber.add(activeTask);\n        return;\n      }\n\n      emit();\n    }\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          lastValue = value;\n          lastTime = scheduler.now();\n\n          // Only set up a task if it's not already up\n          if (!activeTask) {\n            activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n            subscriber.add(activeTask);\n          }\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = activeTask = null;\n        }\n      )\n    );\n  });\n}\n","import { concat } from '../observable/concat';\nimport { OperatorFunction, SchedulerLike, ValueFromArray } from '../types';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function startWith<T>(value: null): OperatorFunction<T, T | null>;\nexport function startWith<T>(value: undefined): OperatorFunction<T, T | undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function startWith<T, A extends readonly unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\nexport function startWith<T, A extends readonly unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that, at the moment of subscription, will synchronously emit all\n * values provided to this operator, then subscribe to the source and mirror all of its emissions\n * to subscribers.\n *\n * This is a useful way to know when subscription has occurred on an existing observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Emit a value when a timer starts.\n *\n * ```ts\n * import { timer, map, startWith } from 'rxjs';\n *\n * timer(1000)\n *   .pipe(\n *     map(() => 'timer emit'),\n *     startWith('timer start')\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * // 'timer start'\n * // 'timer emit'\n * ```\n *\n * @param values Items you want the modified Observable to emit first.\n * @return A function that returns an Observable that synchronously emits\n * provided values before subscribing to the source Observable.\n *\n * @see {@link endWith}\n * @see {@link finalize}\n * @see {@link concat}\n */\nexport function startWith<T, D>(...values: D[]): OperatorFunction<T, T | D> {\n  const scheduler = popScheduler(values);\n  return operate((source, subscriber) => {\n    // Here we can't pass `undefined` as a scheduler, because if we did, the\n    // code inside of `concat` would be confused by the `undefined`, and treat it\n    // like an invalid observable. So we have to split it two different ways.\n    (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { filter } from './filter';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * ![](skip.png)\n *\n * Skips the values until the sent notifications are equal or less than provided skip count. It raises\n * an error if skip count is equal or more than the actual number of emits and source raises an error.\n *\n * ## Example\n *\n * Skip the values before the emission\n *\n * ```ts\n * import { interval, skip } from 'rxjs';\n *\n * // emit every half second\n * const source = interval(500);\n * // skip the first 10 emitted values\n * const result = source.pipe(skip(10));\n *\n * result.subscribe(value => console.log(value));\n * // output: 10...11...12...13...\n * ```\n *\n * @see {@link last}\n * @see {@link skipWhile}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return A function that returns an Observable that skips the first `count`\n * values emitted by the source Observable.\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return filter((_, index) => count <= index);\n}\n","import { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { Subscription } from '../Subscription';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <span class=\"informal\">\n * It only listens to the error channel and ignores notifications.\n * Handles errors from the source observable, and maps them to a new observable.\n * The error may also be rethrown, or a new error can be thrown to emit an error from the result.\n * </span>\n *\n * ![](catch.png)\n *\n * This operator handles errors, but forwards along all other events to the resulting observable.\n * If the source observable terminates with an error, it will map that error to a new observable,\n * subscribe to it, and forward all of its events to the resulting observable.\n *\n * ## Examples\n *\n * Continue with a different Observable when there's an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V'))\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retry the caught source Observable again in case of error, similar to `retry()` operator\n *\n * ```ts\n * import { of, map, catchError, take } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30)\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throw a new error when the source Observable throws an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     })\n *   )\n *   .subscribe({\n *     next: x => console.log(x),\n *     error: err => console.log(err)\n *   });\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n * @see {@link onErrorResumeNext}\n * @see {@link repeat}\n * @see {@link repeatWhen}\n * @see {@link retry }\n * @see {@link retryWhen}\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n * is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n * is returned by the `selector` will be used to continue the observable chain.\n * @return A function that returns an Observable that originates from either\n * the source or the Observable returned by the `selector` function.\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null = null;\n    let syncUnsub = false;\n    let handledResult: Observable<ObservedValueOf<O>>;\n\n    innerSub = source.subscribe(\n      createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n        handledResult = innerFrom(selector(err, catchError(selector)(source)));\n        if (innerSub) {\n          innerSub.unsubscribe();\n          innerSub = null;\n          handledResult.subscribe(subscriber);\n        } else {\n          // We don't have an innerSub yet, that means the error was synchronous\n          // because the subscribe call hasn't returned yet.\n          syncUnsub = true;\n        }\n      })\n    );\n\n    if (syncUnsub) {\n      // We have a synchronous error, we need to make sure to\n      // finalize right away. This ensures that callbacks in the `finalize` operator are called\n      // at the right time, and that finalization occurs at the expected\n      // time between the source error and the subscription to the\n      // next observable.\n      innerSub.unsubscribe();\n      innerSub = null;\n      handledResult!.subscribe(subscriber);\n    }\n  });\n}\n",null,"import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\n\nexport interface FirstValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function firstValueFrom<T, D>(source: Observable<T>, config: FirstValueFromConfig<D>): Promise<T | D>;\nexport function firstValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * and returning a promise that will resolve as soon as the first value\n * arrives from the observable. The subscription will then be closed.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will emit at least one value,\n * *OR* complete. If the source observable does not emit one value or complete, you will\n * end up with a promise that is hung up, and potentially all of the state of an\n * async function hanging out in memory. To avoid this situation, look into adding\n * something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil}\n * amongst others.\n *\n * ## Example\n *\n * Wait for the first value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, firstValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000);\n *   const firstNumber = await firstValueFrom(source$);\n *   console.log(`The first number is ${ firstNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The first number is 0'\n * ```\n *\n * @see {@link lastValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function firstValueFrom<T, D>(source: Observable<T>, config?: FirstValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    const subscriber = new SafeSubscriber<T>({\n      next: (value) => {\n        resolve(value);\n        subscriber.unsubscribe();\n      },\n      error: reject,\n      complete: () => {\n        if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n    source.subscribe(subscriber);\n  });\n}\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production'\n    ? null\n    : (() => {\n        // Don't overwrite this value if it's already set.\n        // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n        if (!('__WB_DISABLE_DEV_LOGS' in globalThis)) {\n            self.__WB_DISABLE_DEV_LOGS = false;\n        }\n        let inGroup = false;\n        const methodToColorMap = {\n            debug: `#7f8c8d`,\n            log: `#2ecc71`,\n            warn: `#f39c12`,\n            error: `#c0392b`,\n            groupCollapsed: `#3498db`,\n            groupEnd: null, // No colored prefix on groupEnd\n        };\n        const print = function (method, args) {\n            if (self.__WB_DISABLE_DEV_LOGS) {\n                return;\n            }\n            if (method === 'groupCollapsed') {\n                // Safari doesn't print all console.groupCollapsed() arguments:\n                // https://bugs.webkit.org/show_bug.cgi?id=182754\n                if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                    console[method](...args);\n                    return;\n                }\n            }\n            const styles = [\n                `background: ${methodToColorMap[method]}`,\n                `border-radius: 0.5em`,\n                `color: white`,\n                `font-weight: bold`,\n                `padding: 2px 0.5em`,\n            ];\n            // When in a group, the workbox prefix is not displayed.\n            const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n            console[method](...logPrefix, ...args);\n            if (method === 'groupCollapsed') {\n                inGroup = true;\n            }\n            if (method === 'groupEnd') {\n                inGroup = false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const api = {};\n        const loggerMethods = Object.keys(methodToColorMap);\n        for (const key of loggerMethods) {\n            const method = key;\n            api[method] = (...args) => {\n                print(method, args);\n            };\n        }\n        return api;\n    })());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = process.env.NODE_ENV === 'production' ? fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\n// Can't change Function type right now.\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = Object.assign(Object.assign({}, matchOptions), { ignoreSearch: true });\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    void promise.then(() => { });\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A utility method that makes it easier to use `event.waitUntil` with\n * async functions and return the result.\n *\n * @param {ExtendableEvent} event\n * @param {Function} asyncFn\n * @return {Function}\n * @private\n */\nfunction waitUntil(event, asyncFn) {\n    const returnPromise = asyncFn();\n    event.waitUntil(returnPromise);\n    return returnPromise;\n}\nexport { waitUntil };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * This method is intentionally limited to same-origin responses, regardless of\n * whether CORS was used or not.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof workbox-core\n */\nasync function copyResponse(response, modifier) {\n    let origin = null;\n    // If response.url isn't set, assume it's cross-origin and keep origin null.\n    if (response.url) {\n        const responseURL = new URL(response.url);\n        origin = responseURL.origin;\n    }\n    if (origin !== self.location.origin) {\n        throw new WorkboxError('cross-origin-copy-response', { origin });\n    }\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream()\n        ? clonedResponse.body\n        : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { openDB, deleteDB } from 'idb';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst CACHE_OBJECT_STORE = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._db = null;\n        this._cacheName = cacheName;\n    }\n    /**\n     * Performs an upgrade of indexedDB.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDb(db) {\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(CACHE_OBJECT_STORE, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n    }\n    /**\n     * Performs an upgrade of indexedDB and deletes deprecated DBs.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDbAndDeleteOldDbs(db) {\n        this._upgradeDb(db);\n        if (this._cacheName) {\n            void deleteDB(this._cacheName);\n        }\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        const db = await this.getDb();\n        const tx = db.transaction(CACHE_OBJECT_STORE, 'readwrite', {\n            durability: 'relaxed',\n        });\n        await tx.store.put(entry);\n        await tx.done;\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number | undefined}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const db = await this.getDb();\n        const entry = await db.get(CACHE_OBJECT_STORE, this._getId(url));\n        return entry === null || entry === void 0 ? void 0 : entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const db = await this.getDb();\n        let cursor = await db\n            .transaction(CACHE_OBJECT_STORE)\n            .store.index('timestamp')\n            .openCursor(null, 'prev');\n        const entriesToDelete = [];\n        let entriesNotDeletedCount = 0;\n        while (cursor) {\n            const result = cursor.value;\n            // TODO(philipwalton): once we can use a multi-key index, we\n            // won't have to check `cacheName` here.\n            if (result.cacheName === this._cacheName) {\n                // Delete an entry if it's older than the max age or\n                // if we already have the max number allowed.\n                if ((minTimestamp && result.timestamp < minTimestamp) ||\n                    (maxCount && entriesNotDeletedCount >= maxCount)) {\n                    // TODO(philipwalton): we should be able to delete the\n                    // entry right here, but doing so causes an iteration\n                    // bug in Safari stable (fixed in TP). Instead we can\n                    // store the keys of the entries to delete, and then\n                    // delete the separate transactions.\n                    // https://github.com/GoogleChrome/workbox/issues/1978\n                    // cursor.delete();\n                    // We only need to return the URL, not the whole entry.\n                    entriesToDelete.push(cursor.value);\n                }\n                else {\n                    entriesNotDeletedCount++;\n                }\n            }\n            cursor = await cursor.continue();\n        }\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await db.delete(CACHE_OBJECT_STORE, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n    /**\n     * Returns an open connection to the database.\n     *\n     * @private\n     */\n    async getDb() {\n        if (!this._db) {\n            this._db = await openDB(DB_NAME, 1, {\n                upgrade: this._upgradeDbAndDeleteOldDbs.bind(this),\n            });\n        }\n        return this._db;\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._matchOptions = config.matchOptions;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds\n            ? Date.now() - this._maxAgeSeconds * 1000\n            : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url, this._matchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ? 'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - this._maxAgeSeconds * 1000;\n            return timestamp !== undefined ? timestamp < expireOlderThan : true;\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in a `workbox-strategy` to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * It can only be used with `workbox-strategy` instances that have a\n * [custom `cacheName` property set](/web/tools/workbox/guides/configure-workbox#custom_cache_names_in_strategies).\n * In other words, it can't be used to expire entries in strategy that uses the\n * default runtime cache name.\n *\n * Whenever a cached response is used or updated, this plugin will look\n * at the associated cache and remove any old or extra responses.\n *\n * When using `maxAgeSeconds`, responses may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached response has been used. If the response has a \"Date\" header, then\n * a light weight expiration check is performed and the response will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {ExpirationPluginOptions} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse, }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request, }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - this._maxAgeSeconds * 1000;\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof workbox-core\n */\n// Can't change Function type\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                if (state &&\n                    state.originalRequest &&\n                    state.originalRequest instanceof Request) {\n                    // TODO: `state` should never be undefined...\n                    const url = state.originalRequest.url;\n                    if (cachedResponse) {\n                        this.notUpdatedURLs.push(url);\n                    }\n                    else {\n                        this.updatedURLs.push(url);\n                    }\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            // Params is type any, can't change right now.\n            /* eslint-disable */\n            const cacheKey = (params === null || params === void 0 ? void 0 : params.cacheKey) ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            /* eslint-enable */\n            return cacheKey\n                ? new Request(cacheKey, { headers: request.headers })\n                : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return typeof input === 'string' ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * {@link workbox-strategies.Strategy~handle} or\n * {@link workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params] The return value from the\n     *     {@link workbox-routing~matchCallback} (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * {@link workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = (await event.preloadResponse);\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail')\n            ? request.clone()\n            : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                throw new WorkboxError('plugin-error-request-will-fetch', {\n                    thrownErrorMessage: err.message,\n                });\n            }\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ? undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error: error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        void this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = Object.assign(Object.assign({}, matchOptions), { cacheName });\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse =\n                (await callback({\n                    cacheName,\n                    matchOptions,\n                    cachedResponse,\n                    request: effectiveRequest,\n                    event: this.event,\n                })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n            // See https://github.com/GoogleChrome/workbox/issues/2818\n            const vary = response.headers.get('Vary');\n            if (vary) {\n                logger.debug(`The response for ${getFriendlyURL(effectiveRequest.url)} ` +\n                    `has a 'Vary: ${vary}' header. ` +\n                    `Consider setting the {ignoreVary: true} option on your strategy ` +\n                    `to ensure cache matching and deletion works as expected.`);\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback\n            ? await cacheMatchIgnoreParams(\n            // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n            // feature. Consider into ways to only add this behavior if using\n            // precaching.\n            cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions)\n            : null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ? responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n                if (error.name === 'QuotaExceededError') {\n                    await executeQuotaErrorCallbacks();\n                }\n                throw error;\n            }\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        const key = `${request.url} | ${mode}`;\n        if (!this._cacheKeys[key]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    // params has a type any can't change right now.\n                    params: this.params, // eslint-disable-line\n                }));\n            }\n            this._cacheKeys[key] = effectiveRequest;\n        }\n        return this._cacheKeys[key];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * {@link workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = Object.assign(Object.assign({}, param), { state });\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * {@link workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * {@link workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while ((promise = this._extendLifetimePromises.shift())) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve(null);\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache =\n                (await callback({\n                    request: this.request,\n                    response: responseToCache,\n                    event: this.event,\n                })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * {@link workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * {@link workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to {@link workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of `[response, done]` promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string'\n            ? new Request(options.request)\n            : options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                    response = await callback({ error, event, request });\n                    if (response) {\n                        break;\n                    }\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error instanceof Error ? error.toString() : ''} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            if (waitUntilError instanceof Error) {\n                error = waitUntilError;\n            }\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error: error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the {@link workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof workbox-strategies.Strategy\n */\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from 'workbox-strategies/Strategy.js';\nimport './_version.js';\n/**\n * A {@link workbox-strategies.Strategy} implementation\n * specifically designed to work with\n * {@link workbox-precaching.PrecacheController}\n * to both cache and fetch precached assets.\n *\n * Note: an instance of this class is created automatically when creating a\n * `PrecacheController`; it's generally not necessary to create this yourself.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-precaching\n */\nclass PrecacheStrategy extends Strategy {\n    /**\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] {@link https://developers.google.com/web/tools/workbox/guides/using-plugins|Plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters|init}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * {@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions|CacheQueryOptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor(options = {}) {\n        options.cacheName = cacheNames.getPrecacheName(options.cacheName);\n        super(options);\n        this._fallbackToNetwork =\n            options.fallbackToNetwork === false ? false : true;\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        this.plugins.push(PrecacheStrategy.copyRedirectedCacheableResponsesPlugin);\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const response = await handler.cacheMatch(request);\n        if (response) {\n            return response;\n        }\n        // If this is an `install` event for an entry that isn't already cached,\n        // then populate the cache.\n        if (handler.event && handler.event.type === 'install') {\n            return await this._handleInstall(request, handler);\n        }\n        // Getting here means something went wrong. An entry that should have been\n        // precached wasn't found in the cache.\n        return await this._handleFetch(request, handler);\n    }\n    async _handleFetch(request, handler) {\n        let response;\n        const params = (handler.params || {});\n        // Fall back to the network if we're configured to do so.\n        if (this._fallbackToNetwork) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(request.url)} in ${this.cacheName} was not ` +\n                    `found. Falling back to the network.`);\n            }\n            const integrityInManifest = params.integrity;\n            const integrityInRequest = request.integrity;\n            const noIntegrityConflict = !integrityInRequest || integrityInRequest === integrityInManifest;\n            // Do not add integrity if the original request is no-cors\n            // See https://github.com/GoogleChrome/workbox/issues/3096\n            response = await handler.fetch(new Request(request, {\n                integrity: request.mode !== 'no-cors'\n                    ? integrityInRequest || integrityInManifest\n                    : undefined,\n            }));\n            // It's only \"safe\" to repair the cache if we're using SRI to guarantee\n            // that the response matches the precache manifest's expectations,\n            // and there's either a) no integrity property in the incoming request\n            // or b) there is an integrity, and it matches the precache manifest.\n            // See https://github.com/GoogleChrome/workbox/issues/2858\n            // Also if the original request users no-cors we don't use integrity.\n            // See https://github.com/GoogleChrome/workbox/issues/3096\n            if (integrityInManifest &&\n                noIntegrityConflict &&\n                request.mode !== 'no-cors') {\n                this._useDefaultCacheabilityPluginIfNeeded();\n                const wasCached = await handler.cachePut(request, response.clone());\n                if (process.env.NODE_ENV !== 'production') {\n                    if (wasCached) {\n                        logger.log(`A response for ${getFriendlyURL(request.url)} ` +\n                            `was used to \"repair\" the precache.`);\n                    }\n                }\n            }\n        }\n        else {\n            // This shouldn't normally happen, but there are edge cases:\n            // https://github.com/GoogleChrome/workbox/issues/1441\n            throw new WorkboxError('missing-precache-entry', {\n                cacheName: this.cacheName,\n                url: request.url,\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            const cacheKey = params.cacheKey || (await handler.getCacheKey(request, 'read'));\n            // Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Precaching is responding to: ` + getFriendlyURL(request.url));\n            logger.log(`Serving the precached url: ${getFriendlyURL(cacheKey instanceof Request ? cacheKey.url : cacheKey)}`);\n            logger.groupCollapsed(`View request details here.`);\n            logger.log(request);\n            logger.groupEnd();\n            logger.groupCollapsed(`View response details here.`);\n            logger.log(response);\n            logger.groupEnd();\n            logger.groupEnd();\n        }\n        return response;\n    }\n    async _handleInstall(request, handler) {\n        this._useDefaultCacheabilityPluginIfNeeded();\n        const response = await handler.fetch(request);\n        // Make sure we defer cachePut() until after we know the response\n        // should be cached; see https://github.com/GoogleChrome/workbox/issues/2737\n        const wasCached = await handler.cachePut(request, response.clone());\n        if (!wasCached) {\n            // Throwing here will lead to the `install` handler failing, which\n            // we want to do if *any* of the responses aren't safe to cache.\n            throw new WorkboxError('bad-precaching-response', {\n                url: request.url,\n                status: response.status,\n            });\n        }\n        return response;\n    }\n    /**\n     * This method is complex, as there a number of things to account for:\n     *\n     * The `plugins` array can be set at construction, and/or it might be added to\n     * to at any time before the strategy is used.\n     *\n     * At the time the strategy is used (i.e. during an `install` event), there\n     * needs to be at least one plugin that implements `cacheWillUpdate` in the\n     * array, other than `copyRedirectedCacheableResponsesPlugin`.\n     *\n     * - If this method is called and there are no suitable `cacheWillUpdate`\n     * plugins, we need to add `defaultPrecacheCacheabilityPlugin`.\n     *\n     * - If this method is called and there is exactly one `cacheWillUpdate`, then\n     * we don't have to do anything (this might be a previously added\n     * `defaultPrecacheCacheabilityPlugin`, or it might be a custom plugin).\n     *\n     * - If this method is called and there is more than one `cacheWillUpdate`,\n     * then we need to check if one is `defaultPrecacheCacheabilityPlugin`. If so,\n     * we need to remove it. (This situation is unlikely, but it could happen if\n     * the strategy is used multiple times, the first without a `cacheWillUpdate`,\n     * and then later on after manually adding a custom `cacheWillUpdate`.)\n     *\n     * See https://github.com/GoogleChrome/workbox/issues/2737 for more context.\n     *\n     * @private\n     */\n    _useDefaultCacheabilityPluginIfNeeded() {\n        let defaultPluginIndex = null;\n        let cacheWillUpdatePluginCount = 0;\n        for (const [index, plugin] of this.plugins.entries()) {\n            // Ignore the copy redirected plugin when determining what to do.\n            if (plugin === PrecacheStrategy.copyRedirectedCacheableResponsesPlugin) {\n                continue;\n            }\n            // Save the default plugin's index, in case it needs to be removed.\n            if (plugin === PrecacheStrategy.defaultPrecacheCacheabilityPlugin) {\n                defaultPluginIndex = index;\n            }\n            if (plugin.cacheWillUpdate) {\n                cacheWillUpdatePluginCount++;\n            }\n        }\n        if (cacheWillUpdatePluginCount === 0) {\n            this.plugins.push(PrecacheStrategy.defaultPrecacheCacheabilityPlugin);\n        }\n        else if (cacheWillUpdatePluginCount > 1 && defaultPluginIndex !== null) {\n            // Only remove the default plugin; multiple custom plugins are allowed.\n            this.plugins.splice(defaultPluginIndex, 1);\n        }\n        // Nothing needs to be done if cacheWillUpdatePluginCount is 1\n    }\n}\nPrecacheStrategy.defaultPrecacheCacheabilityPlugin = {\n    async cacheWillUpdate({ response }) {\n        if (!response || response.status >= 400) {\n            return null;\n        }\n        return response;\n    },\n};\nPrecacheStrategy.copyRedirectedCacheableResponsesPlugin = {\n    async cacheWillUpdate({ response }) {\n        return response.redirected ? await copyResponse(response) : response;\n    },\n};\nexport { PrecacheStrategy };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { waitUntil } from 'workbox-core/_private/waitUntil.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { PrecacheInstallReportPlugin } from './utils/PrecacheInstallReportPlugin.js';\nimport { PrecacheCacheKeyPlugin } from './utils/PrecacheCacheKeyPlugin.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] The cache to use for precaching.\n     * @param {string} [options.plugins] Plugins to use when precaching as well\n     * as responding to fetch events for precached assets.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor({ cacheName, plugins = [], fallbackToNetwork = true, } = {}) {\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n        this._strategy = new PrecacheStrategy({\n            cacheName: cacheNames.getPrecacheName(cacheName),\n            plugins: [\n                ...plugins,\n                new PrecacheCacheKeyPlugin({ precacheController: this }),\n            ],\n            fallbackToNetwork,\n        });\n        // Bind the install and activate methods to the instance.\n        this.install = this.install.bind(this);\n        this.activate = this.activate.bind(this);\n    }\n    /**\n     * @type {workbox-precaching.PrecacheStrategy} The strategy created by this controller and\n     * used to cache assets and respond to fetch events.\n     */\n    get strategy() {\n        return this._strategy;\n    }\n    /**\n     * Adds items to the precache list, removing any duplicates and\n     * stores the files in the\n     * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n     * worker installs.\n     *\n     * This method can be called multiple times.\n     *\n     * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n     */\n    precache(entries) {\n        this.addToCacheList(entries);\n        if (!this._installAndActiveListenersAdded) {\n            self.addEventListener('install', this.install);\n            self.addEventListener('activate', this.activate);\n            this._installAndActiveListenersAdded = true;\n        }\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {Array<workbox-precaching.PrecacheController.PrecacheEntry|string>} entries\n     *     Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = typeof entry !== 'string' && entry.revision ? 'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.InstallResult>}\n     */\n    install(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const installReportPlugin = new PrecacheInstallReportPlugin();\n            this.strategy.plugins.push(installReportPlugin);\n            // Cache entries one at a time.\n            // See https://github.com/GoogleChrome/workbox/issues/2528\n            for (const [url, cacheKey] of this._urlsToCacheKeys) {\n                const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n                const cacheMode = this._urlsToCacheModes.get(url);\n                const request = new Request(url, {\n                    integrity,\n                    cache: cacheMode,\n                    credentials: 'same-origin',\n                });\n                await Promise.all(this.strategy.handleAll({\n                    params: { cacheKey },\n                    request,\n                    event,\n                }));\n            }\n            const { updatedURLs, notUpdatedURLs } = installReportPlugin;\n            if (process.env.NODE_ENV !== 'production') {\n                printInstallDetails(updatedURLs, notUpdatedURLs);\n            }\n            return { updatedURLs, notUpdatedURLs };\n        });\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.CleanupResult>}\n     */\n    activate(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            const currentlyCachedRequests = await cache.keys();\n            const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n            const deletedURLs = [];\n            for (const request of currentlyCachedRequests) {\n                if (!expectedCacheKeys.has(request.url)) {\n                    await cache.delete(request);\n                    deletedURLs.push(request.url);\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                printCleanupDetails(deletedURLs);\n            }\n            return { deletedURLs };\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * @param {string} url A cache key whose SRI you want to look up.\n     * @return {string} The subresource integrity associated with the cache key,\n     * or undefined if it's not set.\n     */\n    getIntegrityForCacheKey(cacheKey) {\n        return this._cacheKeysToIntegrities.get(cacheKey);\n    }\n    /**\n     * This acts as a drop-in replacement for\n     * [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @return {workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        return (options) => {\n            options.request = new Request(url);\n            options.params = Object.assign({ cacheKey }, options.params);\n            return this.strategy.handle(options);\n        };\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * {@link workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * {@link workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if (url.origin !== location.origin && result.index !== 0) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp.toString()}' only partially matched ` +\n                        `against the cross-origin URL '${url.toString()}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a `FetchEvent` using one or more\n * {@link workbox-routing.Route}, responding with a `Response` if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            // event.data is type 'any'\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    void requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event, }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([`Found a route to handle this request:`, route]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`,\n                        params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise &&\n            (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        if (catchErr instanceof Error) {\n                            err = catchErr;\n                        }\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event, }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            // route.match returns type any, not possible to change right now.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do.\n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                params = matchResult;\n                if (Array.isArray(params) && params.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if (matchResult.constructor === Object && // eslint-disable-line\n                    Object.keys(matchResult).length === 0) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call {@link workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|workbox-routing.Route~matchCallback|workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {workbox-routing.Route} The generated `Route`.\n *\n * @memberof workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http')\n                ? captureUrl.pathname\n                : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if (new RegExp(`${wildcards}`).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (url.pathname === captureUrl.pathname &&\n                    url.origin !== captureUrl.origin) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { Route } from 'workbox-routing/Route.js';\nimport { generateURLVariations } from './utils/generateURLVariations.js';\nimport './_version.js';\n/**\n * A subclass of {@link workbox-routing.Route} that takes a\n * {@link workbox-precaching.PrecacheController}\n * instance and uses it to match incoming requests and handle fetching\n * responses from the precache.\n *\n * @memberof workbox-precaching\n * @extends workbox-routing.Route\n */\nclass PrecacheRoute extends Route {\n    /**\n     * @param {PrecacheController} precacheController A `PrecacheController`\n     * instance used to both match requests and respond to fetch events.\n     * @param {Object} [options] Options to control how requests are matched\n     * against the list of precached URLs.\n     * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n     * check cache entries for a URLs ending with '/' to see if there is a hit when\n     * appending the `directoryIndex` value.\n     * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/, /^fbclid$/]] An\n     * array of regex's to remove search params when looking for a cache match.\n     * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n     * check the cache for the URL with a `.html` added to the end of the end.\n     * @param {workbox-precaching~urlManipulation} [options.urlManipulation]\n     * This is a function that should take a URL and return an array of\n     * alternative URLs that should be checked for precache matches.\n     */\n    constructor(precacheController, options) {\n        const match = ({ request, }) => {\n            const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n            for (const possibleURL of generateURLVariations(request.url, options)) {\n                const cacheKey = urlsToCacheKeys.get(possibleURL);\n                if (cacheKey) {\n                    const integrity = precacheController.getIntegrityForCacheKey(cacheKey);\n                    return { cacheKey, integrity };\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` + getFriendlyURL(request.url));\n            }\n            return;\n        };\n        super(match, precacheController.strategy);\n    }\n}\nexport { PrecacheRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching = [/^utm_/, /^fbclid$/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * {@link workbox-precaching.precache} and\n * {@link workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See the\n * {@link workbox-precaching.PrecacheRoute} options.\n *\n * @memberof workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [stale-while-revalidate](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#stale-while-revalidate)\n * request strategy.\n *\n * Resources are requested from both the cache and the network in parallel.\n * The strategy will respond with the cached version if available, otherwise\n * wait for the network response. The cache is updated with the network response\n * with each successful request.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses](https://developer.chrome.com/docs/workbox/caching-resources-during-runtime/#opaque-responses).\n * Opaque responses are cross-origin requests where the response doesn't\n * support [CORS](https://enable-cors.org/).\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass StaleWhileRevalidate extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        const fetchAndCachePromise = handler.fetchAndCachePut(request).catch(() => {\n            // Swallow this error because a 'no-response' error will be thrown in\n            // main handler return flow. This will be in the `waitUntil()` flow.\n        });\n        void handler.waitUntil(fetchAndCachePromise);\n        let response = await handler.cacheMatch(request);\n        let error;\n        if (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}'` +\n                    ` cache. Will update with the network response in the background.`);\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will wait for the network response.`);\n            }\n            try {\n                // NOTE(philipwalton): Really annoying that we have to type cast here.\n                // https://github.com/microsoft/TypeScript/issues/20006\n                response = (await fetchAndCachePromise);\n            }\n            catch (err) {\n                if (err instanceof Error) {\n                    error = err;\n                }\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { StaleWhileRevalidate };\n","/// <reference lib=\"webworker\" />\n/* eslint-disable no-restricted-globals */\n\n// Import Dexie Cloud Service Worker\nimport \"dexie-cloud-addon/service-worker\";\n// This service worker can be customized!\n// See https://developers.google.com/web/tools/workbox/modules\n// for the list of available Workbox modules, or add any other\n// code you'd like.\n// You can also remove this file if you'd prefer not to use a\n// service worker, and the Workbox build step will be skipped.\n\nimport { clientsClaim } from 'workbox-core';\nimport { ExpirationPlugin } from 'workbox-expiration';\nimport { precacheAndRoute, createHandlerBoundToURL } from 'workbox-precaching';\nimport { registerRoute } from 'workbox-routing';\nimport { StaleWhileRevalidate } from 'workbox-strategies';\n\n\n// Log build date and time of the service worker.\nconst buildDate = process.env.REACT_APP_BUILD_TIME;\nconsole.debug('Service worker build on', new Date(parseInt(buildDate + \"000\")));\n\n\n\ndeclare const self: ServiceWorkerGlobalScope;\n\nclientsClaim();\n\n// Precache all of the assets generated by your build process.\n// Their URLs are injected into the manifest variable below.\n// This variable must be present somewhere in your service worker file,\n// even if you decide not to use precaching. See https://cra.link/PWA\nprecacheAndRoute(self.__WB_MANIFEST);\n\n// Set up App Shell-style routing, so that all navigation requests\n// are fulfilled with your index.html shell. Learn more at\n// https://developers.google.com/web/fundamentals/architecture/app-shell\nconst fileExtensionRegexp = new RegExp('/[^/?]+\\\\.[^/]+$');\nregisterRoute(\n  // Return false to exempt requests from being fulfilled by index.html.\n  ({ request, url }: { request: Request; url: URL }) => {\n    // If this isn't a navigation, skip.\n    if (request.mode !== 'navigate') {\n      return false;\n    }\n\n    // If this is a URL that starts with /_, skip.\n    if (url.pathname.startsWith('/_')) {\n      return false;\n    }\n\n    // If this looks like a URL for a resource, because it contains\n    // a file extension, skip.\n    if (url.pathname.match(fileExtensionRegexp)) {\n      return false;\n    }\n\n    // Return true to signal that we want to use the handler.\n    return true;\n  },\n  createHandlerBoundToURL(process.env.PUBLIC_URL + '/index.html')\n);\n\n// An example runtime caching route for requests that aren't handled by the\n// precache, in this case same-origin .png requests like those from in public/\nregisterRoute(\n  // Add in any other file extensions or routing criteria as needed.\n  ({ url }) => url.origin === self.location.origin && url.pathname.endsWith('.png'),\n  // Customize this strategy as needed, e.g., by changing to CacheFirst.\n  new StaleWhileRevalidate({\n    cacheName: 'images',\n    plugins: [\n      // Ensure that once this runtime cache reaches a maximum size the\n      // least-recently used images are removed.\n      new ExpirationPlugin({ maxEntries: 50 }),\n    ],\n  })\n);\n\n// This allows the web app to trigger skipWaiting via\n// registration.waiting.postMessage({type: 'SKIP_WAITING'})\nself.addEventListener('message', (event) => {\n  if (event.data && event.data.type === 'SKIP_WAITING') {\n    self.skipWaiting();\n  }\n});\n\n// Any other custom service worker logic can go here.\n\n\n// ---------------------------------------------------------------------------\n// Forcefull takeover strategy (while we are in active development)\n//\n// Might use other strategy if this application would be business critical.\n// see https://whatwebcando.today/articles/handling-service-worker-updates/\n//\nself.addEventListener('install', ()=>{\n  // Take over immediately:\n  self.skipWaiting();\n});\nself.addEventListener('activate', async ()=>{\n  const tabs = await self.clients.matchAll({type: 'window'});\n  // after we've taken over, iterate over all the current clients (windows)\n  tabs.forEach((tab) => {\n    // ...and refresh each one of them\n    tab.navigate(tab.url)\n  })  \n});\n// ---------------------------------------------------------------------------\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * {@link workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * {@link workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.precache(entries);\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport './_version.js';\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options] See the {@link workbox-precaching.PrecacheRoute}\n * options.\n *\n * @memberof workbox-precaching\n */\nfunction addRoute(options) {\n    const precacheController = getOrCreatePrecacheController();\n    const precacheRoute = new PrecacheRoute(precacheController, options);\n    registerRoute(precacheRoute);\n}\nexport { addRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#createHandlerBoundToURL} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandlerBoundToURL} on that instance,\n * instead of using this function.\n *\n * @param {string} url The precached URL which will be used to lookup the\n * `Response`.\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {workbox-routing~handlerCallback}\n *\n * @memberof workbox-precaching\n */\nfunction createHandlerBoundToURL(url) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.createHandlerBoundToURL(url);\n}\nexport { createHandlerBoundToURL };\n"]}